<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.rograndec.feijiayun.chain.business.basic.store.dao.SaleCircleMapper">
  <resultMap id="BaseResultMap" type="com.rograndec.feijiayun.chain.business.basic.store.entity.SaleCircle">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="enterprise_id" jdbcType="BIGINT" property="enterpriseId" />
    <result column="code" jdbcType="VARCHAR" property="code" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
    <result column="creater_id" jdbcType="BIGINT" property="createrId" />
    <result column="creater_code" jdbcType="VARCHAR" property="createrCode" />
    <result column="creater_name" jdbcType="VARCHAR" property="createrName" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="modifier_id" jdbcType="BIGINT" property="modifierId" />
    <result column="modifier_code" jdbcType="VARCHAR" property="modifierCode" />
    <result column="modifier_name" jdbcType="VARCHAR" property="modifierName" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <resultMap id="BeanMap" type="com.rograndec.feijiayun.chain.common.NewSelectBean">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="name" jdbcType="VARCHAR" property="text" />
  </resultMap>
  <resultMap type="com.rograndec.feijiayun.chain.business.basic.store.vo.StoreVO" id="storeVoMap">
    <id property="id" column="id"/>
    <result property="code" column="code"/>
    <result property="name" column="name"/>
    <result property="chainType" column="chain_type"/>
    <result property="businessManName" column="business_man_name"/>
    <result property="tel" column="tel"/>
    <result property="fax" column="fax"/>
    <result property="companyAddress" column="company_address"/>
  </resultMap>
  <resultMap id="ExportMap" type="com.rograndec.feijiayun.chain.business.basic.store.vo.ExportVO">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="name" property="name" />
    <result column="code" property="code" />
    <result column="store_code" property="storeCode" />
    <result column="store_name" property="storeName" />
  </resultMap>
  <sql id="Base_Column_List">
    id, enterprise_id, code, name, status, remark, creater_id, creater_code, creater_name, 
    create_time, modifier_id, modifier_code, modifier_name, update_time
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from saas_sale_circle
    where id = #{id,jdbcType=BIGINT}
  </select>
  <select id="selectExport" parameterType="java.lang.Long" resultMap="ExportMap">
    select
    a.id,a.code,a.name,b.code store_code,b.name store_name
    from saas_sale_circle a LEFT JOIN saas_enterprise b
    ON a.id = b.sale_circle_id and b.parent_id = #{enterpriseId,jdbcType=BIGINT}
    where a.enterprise_id = #{enterpriseId,jdbcType=BIGINT}
  </select>
  <select id="selectByEnterpriseId" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from saas_sale_circle
    where enterprise_id = #{enterpriseId,jdbcType=BIGINT}
    <!--and status = 1-->
  </select>
  <select id="selectByEnterpriseIdStatus"  resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from saas_sale_circle
    where enterprise_id = #{enterpriseId,jdbcType=BIGINT} and status = #{status}
  </select>
  <select id="selectByPrimaryKeyNotExistsShopIds" resultMap="storeVoMap">
    select 
    *
    from saas_enterprise
    where parent_id = #{enterpriseId,jdbcType=BIGINT}
    <!--and !FIND_IN_SET(id,(select ifnull(store_ids,0) from saas_sale_circle where id = #{id,jdbcType=BIGINT}))-->
    and FIND_IN_SET(id,ifnull((select GROUP_CONCAT(store_ids) from saas_sale_circle where store_ids is not null and store_ids != '' and enterprise_id = #{enterpriseId,jdbcType=BIGINT}),0));
  </select>
  <select id="selectSaleCircleByEnterpriseId" parameterType="java.lang.Long" resultMap="BeanMap">
    select 
    id, name
    from saas_sale_circle
    where enterprise_id = #{enterpriseId}
    and status = '1'
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from saas_sale_circle
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.rograndec.feijiayun.chain.business.basic.store.entity.SaleCircle">
    insert into saas_sale_circle (id, enterprise_id, code, 
      name, status, remark, 
      creater_id, creater_code, creater_name, 
      create_time, modifier_id, modifier_code, 
      modifier_name, update_time
      )
    values (#{id,jdbcType=BIGINT}, #{enterpriseId,jdbcType=BIGINT}, #{code,jdbcType=VARCHAR}, 
      #{name,jdbcType=VARCHAR}, #{status,jdbcType=INTEGER}, #{remark,jdbcType=VARCHAR}, 
      #{createrId,jdbcType=BIGINT}, #{createrCode,jdbcType=VARCHAR}, now(),
      now(), #{modifierId,jdbcType=BIGINT}, #{modifierCode,jdbcType=VARCHAR},
      #{modifierName,jdbcType=VARCHAR}, now()
      )
  </insert>
  <insert id="insertSelective" parameterType="com.rograndec.feijiayun.chain.business.basic.store.entity.SaleCircle">
    insert into saas_sale_circle
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="enterpriseId != null">
        enterprise_id,
      </if>
      <if test="code != null">
        code,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="remark != null">
        remark,
      </if>
      <if test="createrId != null">
        creater_id,
      </if>
      <if test="createrCode != null">
        creater_code,
      </if>
      <if test="createrName != null">
        creater_name,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="modifierId != null">
        modifier_id,
      </if>
      <if test="modifierCode != null">
        modifier_code,
      </if>
      <if test="modifierName != null">
        modifier_name,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="enterpriseId != null">
        #{enterpriseId,jdbcType=BIGINT},
      </if>
      <if test="code != null">
        #{code,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="createrId != null">
        #{createrId,jdbcType=BIGINT},
      </if>
      <if test="createrCode != null">
        #{createrCode,jdbcType=VARCHAR},
      </if>
      <if test="createrName != null">
        #{createrName,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="modifierId != null">
        #{modifierId,jdbcType=BIGINT},
      </if>
      <if test="modifierCode != null">
        #{modifierCode,jdbcType=VARCHAR},
      </if>
      <if test="modifierName != null">
        #{modifierName,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.rograndec.feijiayun.chain.business.basic.store.entity.SaleCircle">
    update saas_sale_circle
    <set>
      <if test="enterpriseId != null">
        enterprise_id = #{enterpriseId,jdbcType=BIGINT},
      </if>
      <if test="code != null">
        code = #{code,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="createrId != null">
        creater_id = #{createrId,jdbcType=BIGINT},
      </if>
      <if test="createrCode != null">
        creater_code = #{createrCode,jdbcType=VARCHAR},
      </if>
      <if test="createrName != null">
        creater_name = #{createrName,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="modifierId != null">
        modifier_id = #{modifierId,jdbcType=BIGINT},
      </if>
      <if test="modifierCode != null">
        modifier_code = #{modifierCode,jdbcType=VARCHAR},
      </if>
      <if test="modifierName != null">
        modifier_name = #{modifierName,jdbcType=VARCHAR},
      </if>
      update_time = now()
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.rograndec.feijiayun.chain.business.basic.store.entity.SaleCircle">
    update saas_sale_circle
    set enterprise_id = #{enterpriseId,jdbcType=BIGINT},
      code = #{code,jdbcType=VARCHAR},
      name = #{name,jdbcType=VARCHAR},
      status = #{status,jdbcType=INTEGER},
      remark = #{remark,jdbcType=VARCHAR},
      creater_id = #{createrId,jdbcType=BIGINT},
      creater_code = #{createrCode,jdbcType=VARCHAR},
      creater_name = #{createrName,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      modifier_id = #{modifierId,jdbcType=BIGINT},
      modifier_code = #{modifierCode,jdbcType=VARCHAR},
      modifier_name = #{modifierName,jdbcType=VARCHAR},
      update_time = now()
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>