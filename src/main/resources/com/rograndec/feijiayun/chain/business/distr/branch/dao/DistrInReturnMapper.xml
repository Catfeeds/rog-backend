<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.rograndec.feijiayun.chain.business.distr.branch.dao.DistrInReturnMapper">
  <resultMap id="BaseResultMap" type="com.rograndec.feijiayun.chain.business.distr.branch.entity.DistrInReturn">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="enterprise_id" jdbcType="BIGINT" property="enterpriseId" />
    <result column="parent_id" jdbcType="BIGINT" property="parentId" />
    <result column="order_type" jdbcType="INTEGER" property="orderType" />
    <result column="code" jdbcType="VARCHAR" property="code" />
    <result column="in_return_date" jdbcType="TIMESTAMP" property="inReturnDate" />
    <result column="base_order_id" jdbcType="BIGINT" property="baseOrderId" />
    <result column="base_order_type" jdbcType="INTEGER" property="baseOrderType" />
    <result column="base_order_code" jdbcType="VARCHAR" property="baseOrderCode" />
    <result column="base_order_date" jdbcType="TIMESTAMP" property="baseOrderDate" />
    <result column="distr_unit_id" jdbcType="BIGINT" property="distrUnitId" />
    <result column="distr_unit_code" jdbcType="VARCHAR" property="distrUnitCode" />
    <result column="distr_unit_name" jdbcType="VARCHAR" property="distrUnitName" />
    <result column="distr_type" jdbcType="INTEGER" property="distrType" />
    <result column="return_man_id" jdbcType="BIGINT" property="returnManId" />
    <result column="return_man_code" jdbcType="VARCHAR" property="returnManCode" />
    <result column="return_man_name" jdbcType="VARCHAR" property="returnManName" />
    <result column="quantity_total" jdbcType="DECIMAL" property="quantityTotal" />
    <result column="varieties_quantity" jdbcType="INTEGER" property="varietiesQuantity" />
    <result column="amount_total" jdbcType="DECIMAL" property="amountTotal" />
    <result column="whole_discount" jdbcType="DECIMAL" property="wholeDiscount" />
    <result column="whole_discount_amount" jdbcType="DECIMAL" property="wholeDiscountAmount" />
    <result column="real_amount_total" jdbcType="DECIMAL" property="realAmountTotal" />
    <result column="notax_real_amount_total" jdbcType="DECIMAL" property="notaxRealAmountTotal" />
    <result column="tax_amount_total" jdbcType="DECIMAL" property="taxAmountTotal" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
    <result column="creater_id" jdbcType="BIGINT" property="createrId" />
    <result column="creater_code" jdbcType="VARCHAR" property="createrCode" />
    <result column="creater_name" jdbcType="VARCHAR" property="createrName" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="modifier_id" jdbcType="BIGINT" property="modifierId" />
    <result column="modifier_code" jdbcType="VARCHAR" property="modifierCode" />
    <result column="modifier_name" jdbcType="VARCHAR" property="modifierName" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="outbound_unit_id" jdbcType="BIGINT" property="outboundUnitId" />
    <result column="outbound_unit_code" jdbcType="VARCHAR" property="outboundUnitCode" />
    <result column="outbound_unit_name" jdbcType="VARCHAR" property="outboundUnitName" />
  </resultMap>
  
   <resultMap type="com.rograndec.feijiayun.chain.business.distr.branch.vo.ResponseDistrInReturnDetailInfoVO" id="ResponseDistrInReturnDetailInfoVOMap">  
        <id column="id" property="id"/>  
        <result column="code" property="code"/>  
        <result column="in_return_date" property="inReturnDate"/>
        <result column="distr_unit_id" property="distrUnitId"/>
        <result column="distr_unit_code" property="distrUnitCode"/>  
        <result column="distr_unit_name" property="distrUnitName"/>
        <result column="baseOrderId" property="baseOrderId"/>
        <result column="base_order_code" property="baseOrderCode"/>
        
        <result column="distr_type" property="distrType"/>
        <result column="return_man_id" property="returnManId"/>
        <result column="return_man_code" property="returnManCode"/>  
        <result column="return_man_name" property="returnManName"/>
        <result column="quantity_total" property="quantityTotal"/>
        <result column="varieties_quantity" property="varietiesQuantity"/>
        <result column="amount_total" property="amountTotal"/>  
        <result column="wholeDiscount" property="wholeDiscount"/>
        <result column="whole_discount_amount" property="wholeDiscountAmount"/>
        <result column="real_amount_total" property="realAmountTotal"/>  
        <result column="notax_real_amount_total" property="notaxRealAmountTotal"/>
        <result column="tax_amount_total" property="taxAmountTotal"/>
        <result column="status" property="status"/>  
        <result column="remark" property="remark"/>
        <result column="outbound_unit_id" property="outboundUnitId"/>
        <result column="outbound_unit_code" property="outboundUnitCode"/>  
        <result column="outbound_unit_name" property="outboundUnitName"/>
        <collection property="list" ofType="com.rograndec.feijiayun.chain.business.distr.branch.vo.ResponseDistrInReturnDetailVO">  
            <id column="detailId" property="id"/>  
            <result column="goods_id" property="goodsId"/>
            <result column="goods_code" property="goodsCode"/>
            <result column="goods_name" property="goodsName"/>
            <result column="goods_generic_name" property="goodsGenericName"/>
            <result column="dosage_id" property="dosageId"/>
            <result column="dosage_name" property="dosageName"/>
            <result column="unit_id" property="unitId"/>
            <result column="unit_name" property="unitName"/>
            <result column="goods_specification" property="goodsSpecification"/>
            <result column="manufacturer_id" property="manufacturerId"/>
            <result column="manufacturer" property="manufacturer"/>
            <result column="goods_place" property="goodsPlace"/>
            <result column="lot_id" property="lotId"/>
            <result column="lot_number" property="lotNumber"/>
            <result column="product_date" property="productDate"/>
            <result column="valid_date" property="validDate"/>
            <result column="quantity" property="quantity"/>
            <result column="unit_price" property="unitPrice"/>
            <result column="line_discount" property="lineDiscount"/>
            <result column="amount" property="amount"/>
            <result column="line_discount_amount" property="lineDiscountAmount"/>
            <result column="real_price" property="realPrice"/>
            <result column="real_amount" property="realAmount"/>
            <result column="tax_rate_id" property="taxRateId"/>
            <result column="tax_rate" property="taxRate"/>
            <result column="notax_real_price" property="notaxRealPrice"/>
            <result column="notax_real_amount" property="notaxRealAmount"/>
            <result column="tax_amount" property="taxAmount"/>
            <result column="line_num" property="lineNum"/>
            <result column="detailRemark" property="remark"/>
            <result column="usableQuantity" property="usableQuantity"/>
            <result column="detailBaseOrderId" property="baseOrderDtlId"/>  
        </collection>  
    </resultMap> 
    
  <sql id="Base_Column_List">
    id, enterprise_id, parent_id, order_type, code, in_return_date, base_order_id, base_order_type, 
    base_order_code, base_order_date, distr_unit_id, distr_unit_code, distr_unit_name, 
    distr_type, return_man_id, return_man_code, return_man_name, quantity_total, varieties_quantity, 
    amount_total, whole_discount, whole_discount_amount, real_amount_total, notax_real_amount_total, 
    tax_amount_total, status, remark, creater_id, creater_code, creater_name, create_time, 
    modifier_id, modifier_code, modifier_name, update_time,outbound_unit_id,outbound_unit_code,outbound_unit_name
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from saas_distr_in_return
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from saas_distr_in_return
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.rograndec.feijiayun.chain.business.distr.branch.entity.DistrInReturn" useGeneratedKeys="true" keyProperty="id">
    insert into saas_distr_in_return (id, enterprise_id, parent_id, 
      order_type, code, in_return_date, 
      base_order_id, base_order_type, base_order_code, 
      base_order_date, distr_unit_id, distr_unit_code, 
      distr_unit_name, distr_type, return_man_id, 
      return_man_code, return_man_name, quantity_total, 
      varieties_quantity, amount_total, whole_discount, 
      whole_discount_amount, real_amount_total, notax_real_amount_total, 
      tax_amount_total, status, remark, 
      creater_id, creater_code, creater_name, 
      create_time, modifier_id, modifier_code, 
      modifier_name, update_time,outbound_unit_id,outbound_unit_code,outbound_unit_name)
    values (#{id,jdbcType=BIGINT}, #{enterpriseId,jdbcType=BIGINT}, #{parentId,jdbcType=BIGINT}, 
      #{orderType,jdbcType=INTEGER}, #{code,jdbcType=VARCHAR}, #{inReturnDate,jdbcType=TIMESTAMP}, 
      #{baseOrderId,jdbcType=BIGINT}, #{baseOrderType,jdbcType=INTEGER}, #{baseOrderCode,jdbcType=VARCHAR}, 
      #{baseOrderDate,jdbcType=TIMESTAMP}, #{distrUnitId,jdbcType=BIGINT}, #{distrUnitCode,jdbcType=VARCHAR}, 
      #{distrUnitName,jdbcType=VARCHAR}, #{distrType,jdbcType=INTEGER}, #{returnManId,jdbcType=BIGINT}, 
      #{returnManCode,jdbcType=VARCHAR}, #{returnManName,jdbcType=VARCHAR}, #{quantityTotal,jdbcType=DECIMAL}, 
      #{varietiesQuantity,jdbcType=INTEGER}, #{amountTotal,jdbcType=DECIMAL}, #{wholeDiscount,jdbcType=DECIMAL}, 
      #{wholeDiscountAmount,jdbcType=DECIMAL}, #{realAmountTotal,jdbcType=DECIMAL}, #{notaxRealAmountTotal,jdbcType=DECIMAL}, 
      #{taxAmountTotal,jdbcType=DECIMAL}, #{status,jdbcType=INTEGER}, #{remark,jdbcType=VARCHAR}, 
      #{createrId,jdbcType=BIGINT}, #{createrCode,jdbcType=VARCHAR}, #{createrName,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=TIMESTAMP}, #{modifierId,jdbcType=BIGINT}, #{modifierCode,jdbcType=VARCHAR}, 
      #{modifierName,jdbcType=VARCHAR}, #{updateTime,jdbcType=TIMESTAMP},
      #{outboundUnitId,jdbcType=BIGINT}, #{outboundUnitCode,jdbcType=VARCHAR}, 
      #{outboundUnitName,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.rograndec.feijiayun.chain.business.distr.branch.entity.DistrInReturn" useGeneratedKeys="true" keyProperty="id">
    insert into saas_distr_in_return
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="enterpriseId != null">
        enterprise_id,
      </if>
      <if test="parentId != null">
        parent_id,
      </if>
      <if test="orderType != null">
        order_type,
      </if>
      <if test="code != null">
        code,
      </if>
      <if test="inReturnDate != null">
        in_return_date,
      </if>
      <if test="baseOrderId != null">
        base_order_id,
      </if>
      <if test="baseOrderType != null">
        base_order_type,
      </if>
      <if test="baseOrderCode != null">
        base_order_code,
      </if>
      <if test="baseOrderDate != null">
        base_order_date,
      </if>
      <if test="distrUnitId != null">
        distr_unit_id,
      </if>
      <if test="distrUnitCode != null">
        distr_unit_code,
      </if>
      <if test="distrUnitName != null">
        distr_unit_name,
      </if>
      <if test="distrType != null">
        distr_type,
      </if>
      <if test="returnManId != null">
        return_man_id,
      </if>
      <if test="returnManCode != null">
        return_man_code,
      </if>
      <if test="returnManName != null">
        return_man_name,
      </if>
      <if test="quantityTotal != null">
        quantity_total,
      </if>
      <if test="varietiesQuantity != null">
        varieties_quantity,
      </if>
      <if test="amountTotal != null">
        amount_total,
      </if>
      <if test="wholeDiscount != null">
        whole_discount,
      </if>
      <if test="wholeDiscountAmount != null">
        whole_discount_amount,
      </if>
      <if test="realAmountTotal != null">
        real_amount_total,
      </if>
      <if test="notaxRealAmountTotal != null">
        notax_real_amount_total,
      </if>
      <if test="taxAmountTotal != null">
        tax_amount_total,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="remark != null">
        remark,
      </if>
      <if test="createrId != null">
        creater_id,
      </if>
      <if test="createrCode != null">
        creater_code,
      </if>
      <if test="createrName != null">
        creater_name,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="modifierId != null">
        modifier_id,
      </if>
      <if test="modifierCode != null">
        modifier_code,
      </if>
      <if test="modifierName != null">
        modifier_name,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="outboundUnitId != null">
        outbound_unit_id,
      </if>
      <if test="outboundUnitCode != null">
        outbound_unit_code,
      </if>
      <if test="outboundUnitName != null">
        outbound_unit_name,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="enterpriseId != null">
        #{enterpriseId,jdbcType=BIGINT},
      </if>
      <if test="parentId != null">
        #{parentId,jdbcType=BIGINT},
      </if>
      <if test="orderType != null">
        #{orderType,jdbcType=INTEGER},
      </if>
      <if test="code != null">
        #{code,jdbcType=VARCHAR},
      </if>
      <if test="inReturnDate != null">
        #{inReturnDate,jdbcType=TIMESTAMP},
      </if>
      <if test="baseOrderId != null">
        #{baseOrderId,jdbcType=BIGINT},
      </if>
      <if test="baseOrderType != null">
        #{baseOrderType,jdbcType=INTEGER},
      </if>
      <if test="baseOrderCode != null">
        #{baseOrderCode,jdbcType=VARCHAR},
      </if>
      <if test="baseOrderDate != null">
        #{baseOrderDate,jdbcType=TIMESTAMP},
      </if>
      <if test="distrUnitId != null">
        #{distrUnitId,jdbcType=BIGINT},
      </if>
      <if test="distrUnitCode != null">
        #{distrUnitCode,jdbcType=VARCHAR},
      </if>
      <if test="distrUnitName != null">
        #{distrUnitName,jdbcType=VARCHAR},
      </if>
      <if test="distrType != null">
        #{distrType,jdbcType=INTEGER},
      </if>
      <if test="returnManId != null">
        #{returnManId,jdbcType=BIGINT},
      </if>
      <if test="returnManCode != null">
        #{returnManCode,jdbcType=VARCHAR},
      </if>
      <if test="returnManName != null">
        #{returnManName,jdbcType=VARCHAR},
      </if>
      <if test="quantityTotal != null">
        #{quantityTotal,jdbcType=DECIMAL},
      </if>
      <if test="varietiesQuantity != null">
        #{varietiesQuantity,jdbcType=INTEGER},
      </if>
      <if test="amountTotal != null">
        #{amountTotal,jdbcType=DECIMAL},
      </if>
      <if test="wholeDiscount != null">
        #{wholeDiscount,jdbcType=DECIMAL},
      </if>
      <if test="wholeDiscountAmount != null">
        #{wholeDiscountAmount,jdbcType=DECIMAL},
      </if>
      <if test="realAmountTotal != null">
        #{realAmountTotal,jdbcType=DECIMAL},
      </if>
      <if test="notaxRealAmountTotal != null">
        #{notaxRealAmountTotal,jdbcType=DECIMAL},
      </if>
      <if test="taxAmountTotal != null">
        #{taxAmountTotal,jdbcType=DECIMAL},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="createrId != null">
        #{createrId,jdbcType=BIGINT},
      </if>
      <if test="createrCode != null">
        #{createrCode,jdbcType=VARCHAR},
      </if>
      <if test="createrName != null">
        #{createrName,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="modifierId != null">
        #{modifierId,jdbcType=BIGINT},
      </if>
      <if test="modifierCode != null">
        #{modifierCode,jdbcType=VARCHAR},
      </if>
      <if test="modifierName != null">
        #{modifierName,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="outboundUnitId != null">
        #{outboundUnitId,jdbcType=BIGINT},
      </if>
      <if test="outboundUnitCode != null">
        #{outboundUnitCode,jdbcType=VARCHAR},
      </if>
      <if test="outboundUnitName != null">
        #{outboundUnitName,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.rograndec.feijiayun.chain.business.distr.branch.entity.DistrInReturn">
    update saas_distr_in_return
    <set>
      <if test="enterpriseId != null">
        enterprise_id = #{enterpriseId,jdbcType=BIGINT},
      </if>
      <if test="parentId != null">
        parent_id = #{parentId,jdbcType=BIGINT},
      </if>
      <if test="orderType != null">
        order_type = #{orderType,jdbcType=INTEGER},
      </if>
      <if test="code != null">
        code = #{code,jdbcType=VARCHAR},
      </if>
      <if test="inReturnDate != null">
        in_return_date = #{inReturnDate,jdbcType=TIMESTAMP},
      </if>
      <if test="baseOrderId != null">
        base_order_id = #{baseOrderId,jdbcType=BIGINT},
      </if>
      <if test="baseOrderType != null">
        base_order_type = #{baseOrderType,jdbcType=INTEGER},
      </if>
      <if test="baseOrderCode != null">
        base_order_code = #{baseOrderCode,jdbcType=VARCHAR},
      </if>
      <if test="baseOrderDate != null">
        base_order_date = #{baseOrderDate,jdbcType=TIMESTAMP},
      </if>
      <if test="distrUnitId != null">
        distr_unit_id = #{distrUnitId,jdbcType=BIGINT},
      </if>
      <if test="distrUnitCode != null">
        distr_unit_code = #{distrUnitCode,jdbcType=VARCHAR},
      </if>
      <if test="distrUnitName != null">
        distr_unit_name = #{distrUnitName,jdbcType=VARCHAR},
      </if>
      <if test="distrType != null">
        distr_type = #{distrType,jdbcType=INTEGER},
      </if>
      <if test="returnManId != null">
        return_man_id = #{returnManId,jdbcType=BIGINT},
      </if>
      <if test="returnManCode != null">
        return_man_code = #{returnManCode,jdbcType=VARCHAR},
      </if>
      <if test="returnManName != null">
        return_man_name = #{returnManName,jdbcType=VARCHAR},
      </if>
      <if test="quantityTotal != null">
        quantity_total = #{quantityTotal,jdbcType=DECIMAL},
      </if>
      <if test="varietiesQuantity != null">
        varieties_quantity = #{varietiesQuantity,jdbcType=INTEGER},
      </if>
      <if test="amountTotal != null">
        amount_total = #{amountTotal,jdbcType=DECIMAL},
      </if>
      <if test="wholeDiscount != null">
        whole_discount = #{wholeDiscount,jdbcType=DECIMAL},
      </if>
      <if test="wholeDiscountAmount != null">
        whole_discount_amount = #{wholeDiscountAmount,jdbcType=DECIMAL},
      </if>
      <if test="realAmountTotal != null">
        real_amount_total = #{realAmountTotal,jdbcType=DECIMAL},
      </if>
      <if test="notaxRealAmountTotal != null">
        notax_real_amount_total = #{notaxRealAmountTotal,jdbcType=DECIMAL},
      </if>
      <if test="taxAmountTotal != null">
        tax_amount_total = #{taxAmountTotal,jdbcType=DECIMAL},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="createrId != null">
        creater_id = #{createrId,jdbcType=BIGINT},
      </if>
      <if test="createrCode != null">
        creater_code = #{createrCode,jdbcType=VARCHAR},
      </if>
      <if test="createrName != null">
        creater_name = #{createrName,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="modifierId != null">
        modifier_id = #{modifierId,jdbcType=BIGINT},
      </if>
      <if test="modifierCode != null">
        modifier_code = #{modifierCode,jdbcType=VARCHAR},
      </if>
      <if test="modifierName != null">
        modifier_name = #{modifierName,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="outboundUnitId != null">
        outbound_unit_id = #{outboundUnitId,jdbcType=BIGINT},
      </if>
      <if test="outboundUnitCode != null">
        outbound_unit_code = #{outboundUnitCode,jdbcType=VARCHAR},
      </if>
      <if test="outboundUnitName != null">
        outbound_unit_name = #{outboundUnitName,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.rograndec.feijiayun.chain.business.distr.branch.entity.DistrInReturn">
    update saas_distr_in_return
    set enterprise_id = #{enterpriseId,jdbcType=BIGINT},
      parent_id = #{parentId,jdbcType=BIGINT},
      order_type = #{orderType,jdbcType=INTEGER},
      code = #{code,jdbcType=VARCHAR},
      in_return_date = #{inReturnDate,jdbcType=TIMESTAMP},
      base_order_id = #{baseOrderId,jdbcType=BIGINT},
      base_order_type = #{baseOrderType,jdbcType=INTEGER},
      base_order_code = #{baseOrderCode,jdbcType=VARCHAR},
      base_order_date = #{baseOrderDate,jdbcType=TIMESTAMP},
      distr_unit_id = #{distrUnitId,jdbcType=BIGINT},
      distr_unit_code = #{distrUnitCode,jdbcType=VARCHAR},
      distr_unit_name = #{distrUnitName,jdbcType=VARCHAR},
      distr_type = #{distrType,jdbcType=INTEGER},
      return_man_id = #{returnManId,jdbcType=BIGINT},
      return_man_code = #{returnManCode,jdbcType=VARCHAR},
      return_man_name = #{returnManName,jdbcType=VARCHAR},
      quantity_total = #{quantityTotal,jdbcType=DECIMAL},
      varieties_quantity = #{varietiesQuantity,jdbcType=INTEGER},
      amount_total = #{amountTotal,jdbcType=DECIMAL},
      whole_discount = #{wholeDiscount,jdbcType=DECIMAL},
      whole_discount_amount = #{wholeDiscountAmount,jdbcType=DECIMAL},
      real_amount_total = #{realAmountTotal,jdbcType=DECIMAL},
      notax_real_amount_total = #{notaxRealAmountTotal,jdbcType=DECIMAL},
      tax_amount_total = #{taxAmountTotal,jdbcType=DECIMAL},
      status = #{status,jdbcType=INTEGER},
      remark = #{remark,jdbcType=VARCHAR},
      creater_id = #{createrId,jdbcType=BIGINT},
      creater_code = #{createrCode,jdbcType=VARCHAR},
      creater_name = #{createrName,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      modifier_id = #{modifierId,jdbcType=BIGINT},
      modifier_code = #{modifierCode,jdbcType=VARCHAR},
      modifier_name = #{modifierName,jdbcType=VARCHAR},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      outbound_unit_id = #{outboundUnitId,jdbcType=BIGINT},
      outbound_unit_code = #{outboundUnitCode,jdbcType=VARCHAR},
      outbound_unit_name = #{outboundUnitName,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
  
  <select id="getDistrReturnInOrderList" resultType="com.rograndec.feijiayun.chain.business.distr.branch.vo.ResponseDistrInVO">
  	SELECT 
	  disIn.id,
	  disIn.order_type AS orderType,
	  disIn.`code`,
	  disIn.in_date AS inDate,
	  disIn.`distr_unit_id` AS distrUnitId,
	  disIn.distr_unit_code AS distrUnitCode,
	  disIn.distr_unit_name AS distrUnitName,
	  disIn.`distr_type` AS distrType,
	  disIn.`storage_man_id` AS storageManId,
	  disIn.`storage_man_code` AS storageManCode,
	  disIn.storage_man_name AS storageManName,
	  disIn.`quantity_total` AS quantityTotal,
	  disIn.`varieties_quantity` AS varietiesQuantity,
	  disIn.`amount_total` AS amountTotal,
	  disIn.`whole_discount` AS wholeDiscount,
	  disIn.`whole_discount_amount` AS wholeDiscountAmount,
	  disIn.real_amount_total AS realAmountTotal,
	  disIn.notax_real_amount_total AS notaxRealAmountTotal,
	  disIn.tax_amount_total AS taxAmountTotal,
	  disIn.`outbound_unit_id` AS outboundUnitId,
	  disIn.`outbound_unit_code` AS outboundUnitCode,
	  disIn.`outbound_unit_name` AS outboundUnitName
	FROM
	  `saas_distr_in` disIn
	  LEFT JOIN `saas_distr_in_shelf` shelf ON disIn.`id`=shelf.`in_id` AND disIn.`enterprise_id`=shelf.`enterprise_id`
	  LEFT JOIN `saas_stock` stock ON stock.`enterprise_id`=shelf.`enterprise_id` AND stock.`goods_id`=shelf.`goods_id`
	  AND stock.`lot_num`=shelf.`lot_number`
	WHERE disIn.`enterprise_id` = #{enterpriseId}
	<if test="distributionManage == null">
	AND disIn.`distr_type` = #{distributionHead}
	</if>
	<if test="distributionManage != null">
	AND disIn.`distr_type` IN 
		<foreach collection="distrTypes" index="index" item="item" open="(" separator="," close=")">
	               #{item}       
	    </foreach> 
	</if>
	AND stock.`usable_quantity`>0
	AND stock.`inventory_status`=0
	AND disIn.id IN (
	SELECT a.inId FROM (
			SELECT 
			 det.`in_id` AS inId,det.`quantity`,SUM(IFNULL(detail.`quantity`,0)) AS returnQuantity,IFNULL(detail.`status`,0) AS detailStatus
			FROM
			  `saas_distr_in_detail` det
			  LEFT JOIN `saas_distr_in_return_detail` detail ON det.id=detail.`base_order_dtl_id` AND det.`enterprise_id` =detail.`enterprise_id`
			 WHERE 1=1 AND det.`enterprise_id`=#{enterpriseId}
			 GROUP BY det.`id`  
			  HAVING quantity > returnQuantity 
			  AND detailStatus IN 
				<foreach collection="orderStatus" index="index" item="item" open="(" separator="," close=")">
			               #{item}       
			    </foreach> 
	  	) a
	)
	<if test="startDate!=null and endDate!=null">
       AND (disIn.`in_date` BETWEEN #{startDate} 
	  AND #{endDate})
      </if>
	GROUP BY disIn.`id`	
	<if test="dateOrder==0 and codeOrder==0">
	ORDER BY disIn.`in_date` DESC,disIn.`code` DESC
	</if>
	<if test="dateOrder==1 and codeOrder==0">
	ORDER BY disIn.`in_date`,disIn.`code`DESC
	</if>
	<if test="dateOrder==0 and codeOrder==1">
	ORDER BY disIn.`in_date` DESC,disIn.`code`
	</if>
	<if test="dateOrder==1 and codeOrder==1">
	ORDER BY disIn.`in_date`,disIn.`code`
	</if>
	LIMIT #{start},#{pageSize}
  </select>
  
  <select id="getDistrReturnInOrderListTotalNum" resultType="java.lang.Integer">
  SELECT 
	 COUNT(DISTINCT(disIn.id))
	FROM
	  `saas_distr_in` disIn
	  LEFT JOIN `saas_distr_in_shelf` shelf ON disIn.`id`=shelf.`in_id` AND disIn.`enterprise_id`=shelf.`enterprise_id`
	  LEFT JOIN `saas_stock` stock ON stock.`enterprise_id`=shelf.`enterprise_id` AND stock.`goods_id`=shelf.`goods_id`
	  AND stock.`lot_num`=shelf.`lot_number`
	WHERE disIn.`enterprise_id` = #{enterpriseId}
	<if test="distributionManage == null">
	AND disIn.`distr_type` = #{distributionHead}
	</if>
	<if test="distributionManage != null">
	AND disIn.`distr_type` IN 
		<foreach collection="distrTypes" index="index" item="item" open="(" separator="," close=")">
	               #{item}       
	    </foreach> 
	</if>
	AND stock.`usable_quantity`>0
	AND stock.`inventory_status`=0
	AND disIn.id IN (
	SELECT a.inId FROM (
			SELECT 
			 det.`in_id` AS inId,det.`quantity`,SUM(IFNULL(detail.`quantity`,0)) AS returnQuantity,IFNULL(detail.`status`,0) AS detailStatus
			FROM
			  `saas_distr_in_detail` det
			  LEFT JOIN `saas_distr_in_return_detail` detail ON det.id=detail.`base_order_dtl_id` AND det.`enterprise_id` =detail.`enterprise_id`
			  WHERE 1=1 AND det.`enterprise_id`=#{enterpriseId}
			 GROUP BY det.`id`  
			  HAVING quantity > returnQuantity 
			  AND detailStatus IN 
				<foreach collection="orderStatus" index="index" item="item" open="(" separator="," close=")">
			               #{item}       
			    </foreach> 
	  	) a
	)
   <if test="startDate!=null and endDate!=null">
       AND (disIn.`in_date` BETWEEN #{startDate} 
	  AND #{endDate})
      </if>
  </select>
  
  <select id="getDistrReturnInOrderDtlList" resultType="com.rograndec.feijiayun.chain.business.distr.branch.vo.ResponseDistrInDetailVO">
	SELECT 
	  shelf.`lot_number` AS lotNumber,
	  shelf.`product_date` AS productDate,
	  shelf.`valid_date` AS validDate,
	 
	  lot.`id` AS lotId,
	  detail.`id` AS detailId,
	  detail.`in_id` AS inId,
	  detail.`order_type` AS orderType,
	  detail.`in_code` AS inCode,
	  detail.`in_date` AS inDate,
	  detail.`goods_id` AS goodsId,
	  detail.`goods_code` AS goodsCode,
	  detail.`barcode` AS barcode,
	  detail.`goods_name` AS goodsName,
	  detail.`goods_generic_name` AS goodsGenericName,
	  detail.`dosage_id` AS dosageId,
	  detail.`dosage_name` AS dosageName,
	  detail.`unit_id` AS unitId,
	  detail.`unit_name` AS unitName,
	  detail.`goods_specification` AS goodsSpecification,
	  detail.`manufacturer_id` AS manufacturerId,
	  detail.`manufacturer` AS manufacturer,
	  detail.`goods_place` AS goodsPlace,
	  SUM(shelf.`quantity`) AS quantity,
	  shelf.`unit_price` AS unitPrice,
	  shelf.`line_discount` AS lineDiscount,
	  SUM(shelf.`amount`) AS amount,
	  shelf.`line_discount_amount` AS lineDiscountAmount,
	  shelf.`real_price` AS realPrice,
	  SUM(shelf.`real_amount`) AS realAmount,
	  detail.`tax_rate_id` AS taxRateId,
	  detail.`tax_rate` AS taxRate,
	  shelf.`notax_real_price` AS notaxRealPrice,
	  SUM(shelf.`notax_real_amount`) AS notaxRealAmount,
	  SUM(shelf.`tax_amount`) AS taxAmount,
	  detail.`line_num` AS lineNum,
	  SUM(shelf.can_return_quantity) AS canReturnQuantity,
	  shelf.id AS shelfId
	FROM
	  `saas_distr_in_shelf` shelf 
	  LEFT JOIN `saas_distr_in_detail` detail 
	    ON shelf.`dtl_id` = detail.`id` 
    
    LEFT JOIN `saas_stock` stock  ON shelf.`goods_id` = stock.`goods_id`
	   AND stock.`lot_num` = shelf.`lot_number` AND stock.`enterprise_id`=shelf.`enterprise_id`
	   LEFT JOIN `saas_lot_number` lot ON lot.`lot_num`=shelf.`lot_number` AND lot.`enterprise_id`=shelf.`enterprise_id`
	   AND lot.`goods_id`=shelf.`goods_id`
	WHERE shelf.`enterprise_id` = #{enterpriseId} 
	  AND shelf.`in_id` = #{distrInId}
	  AND stock.`usable_quantity` > 0 
	  AND stock.`inventory_status`=0
	  AND shelf.can_return_quantity >0
	   AND detail.`id` IN(
			  SELECT a.id FROM (
		SELECT indtl.`quantity`,SUM(IFNULL(redtl.`quantity`,0)) AS returnQuantity,indtl.`id`,IFNULL(redtl.`status`,0) AS detailStatus
		FROM `saas_distr_in_detail` indtl
		LEFT JOIN `saas_distr_in_return_detail` redtl ON redtl.`base_order_dtl_id`=indtl.`id`
		 WHERE 1=1 AND indtl.`enterprise_id`=#{enterpriseId}
		GROUP BY indtl.`id`
		HAVING quantity>returnQuantity
		AND detailStatus IN 
				<foreach collection="orderStatus" index="index" item="item" open="(" separator="," close=")">
			               #{item}       
			    </foreach> ) a
	  )
	  <if test="startDate!=null and endDate!=null">
	      AND (detail.`in_date` BETWEEN #{startDate} 
	  AND #{endDate})
	     </if>
	GROUP BY shelf.`in_id`,shelf.`dtl_id`,shelf.`goods_id`,shelf.`lot_number`
	ORDER BY shelf.`id`
	<!-- <if test="dateOrder==0 and codeOrder==0">
	ORDER BY detail.`in_date` DESC,detail.`in_code` DESC
	</if>
	<if test="dateOrder==1 and codeOrder==0">
	ORDER BY detail.`in_date`,detail.`in_code`DESC
	</if>
	<if test="dateOrder==0 and codeOrder==1">
	ORDER BY detail.`in_date` DESC,detail.`in_code`
	</if>
	<if test="dateOrder==1 and codeOrder==1">
	ORDER BY detail.`in_date`,detail.`in_code`
	</if> -->
	LIMIT #{start},#{pageSize}
  </select>
  
  <select id="getDistrReturnInOrderDtlListTotalNum"  resultType="java.lang.Integer">
	  SELECT COUNT(a.id) FROM (
	SELECT
		shelf.`id` AS id
	FROM
	  `saas_distr_in_shelf` shelf 
	  LEFT JOIN `saas_distr_in_detail` detail 
	    ON shelf.`dtl_id` = detail.`id` 
	  LEFT JOIN `saas_stock` stock 
	    ON shelf.`goods_id` = stock.`goods_id` 
	    AND stock.`lot_num` = shelf.`lot_number` 
	    AND stock.`enterprise_id` = shelf.`enterprise_id` 
	  LEFT JOIN `saas_lot_number` lot 
	    ON lot.`lot_num` = shelf.`lot_number` 
	    AND lot.`enterprise_id` = shelf.`enterprise_id` 
	    AND lot.`goods_id` = shelf.`goods_id` 
	WHERE shelf.`enterprise_id` = #{enterpriseId} 
	  AND shelf.`in_id` = #{distrInId} 
	  AND stock.`usable_quantity` > 0 
	  AND stock.`inventory_status`=0
	   AND shelf.can_return_quantity >0
	    AND detail.`id` IN(
			  SELECT a.id FROM (
		SELECT indtl.`quantity`,SUM(IFNULL(redtl.`quantity`,0)) AS returnQuantity,indtl.`id`,IFNULL(redtl.`status`,0) AS detailStatus
		FROM `saas_distr_in_detail` indtl
		LEFT JOIN `saas_distr_in_return_detail` redtl ON redtl.`base_order_dtl_id`=indtl.`id`
		 WHERE 1=1 AND indtl.`enterprise_id`=#{enterpriseId}
		GROUP BY indtl.`id`
		HAVING quantity>returnQuantity
		AND detailStatus IN 
				<foreach collection="orderStatus" index="index" item="item" open="(" separator="," close=")">
			               #{item}       
			    </foreach> ) a
	  )
	   <if test="startDate!=null and endDate!=null">
	      AND (detail.`in_date` BETWEEN #{startDate} 
	  AND #{endDate})
	   </if>
	  GROUP BY shelf.`in_id`,shelf.`dtl_id`,shelf.`goods_id`,shelf.`lot_number`) a
 
  </select>
  
  <select id="getUsableQuantity" resultType="java.math.BigDecimal">
	  SELECT 
	  SUM(`usable_quantity`) 
	FROM
	  `saas_stock` 
	WHERE `enterprise_id` = #{enterpriseId} 
	  AND `goods_id` = #{goodsId} 
	  AND `lot_id` = #{lotId} 
  </select>
  
  <select id="getGoodsStockList" resultType="com.rograndec.feijiayun.chain.business.distr.branch.vo.ResponseDistrInDetailVO">
	SELECT
	goo.id AS goodsId,
	goo.code AS goodsCode,
	goo.name AS goodsName,
	goo.barcode AS barcode,
	goo.generic_name AS goodsGenericName,
	goo.dosage_id AS dosageId,
	goo.dosage_name AS dosageName,
	goo.specification AS goodsSpecification,
	goo.unit_id AS unitId,
	goo.unit_id AS unitName,
	goo.manufacturer_id AS manufacturerId,
	goo.manufacturer AS manufacturer,
	goo.place AS goodsPlace,
	goo.approval_number AS approvalNumber,
	goo.chain_type as chainType,
	lot.lot_num AS lotNumber,
	lot.id AS lotId,
	lot.product_date AS productDate,
	lot.valid_until AS validDate,
	SUM(st.`usable_quantity`) AS usableQuantity,
	goobus.`distr_tax_rate` AS taxRate,
	goobus.`distr_tax_rate_id` AS taxRateId
	FROM
	saas_stock st
	LEFT JOIN saas_goods goo ON goo.id = st.goods_id
	LEFT JOIN `saas_goods_business` goobus	ON goobus.`goods_id` = goo.`id`
	LEFT JOIN saas_lot_number lot	ON st.lot_id = lot.id
	WHERE st.usable_quantity > 0
	AND st.`inventory_status`=0
	AND goo.`goods_nature`=0
	and st.enterprise_id = #{enterpriseId}
	<if test="parentId != null ">
	AND goo.owner_id = #{parentId}
	</if>
	<if test="supplierId != null">
	AND EXISTS(SELECT 1 FROM saas_supplier supplier  INNER JOIN saas_supplier_business  buse
      WHERE supplier.id=#{supplierId} and buse.management_mode = goobus.management_mode
      AND FIND_IN_SET(goo.management_scope_id,supplier.business_scope_id))
	</if>
	
	  <if test="param != null">
	   AND (INSTR(goo.code,#{param}) OR 
			  INSTR(goo.barcode,#{param}) OR 
			  INSTR(goo.pinyin_code,#{param}) OR 
			  INSTR(goo.name,#{param}) OR 
			  INSTR(goo.generic_name,#{param}) OR 
			  INSTR(goo.approval_number,#{param}))
       </if>
	GROUP BY st.`goods_id`,st.`lot_id`,st.enterprise_id
	LIMIT 100
  </select>
  
  <select id="getDistrReturnOrderList" resultType="com.rograndec.feijiayun.chain.business.distr.branch.vo.ResponseDistrInReturnVO">
  	SELECT 
	  id ,`code`,in_return_date AS inReturnDate,distr_unit_id AS distrUnitId,
	  distr_unit_code AS distrUnitCode,distr_unit_name AS distrUnitName,
	  distr_type AS distrType,return_man_id AS returnManId,
	  return_man_code AS returnManCode,return_man_name AS returnManName,
	  real_amount_total AS realAmountTotal,notax_real_amount_total AS notaxRealAmountTotal,
	  tax_amount_total AS taxAmountTotal,`status`,
	  `outbound_unit_id` AS outboundUnitId,`outbound_unit_code` AS outboundUnitCode,`outbound_unit_name` AS outboundUnitName
	  FROM `saas_distr_in_return` WHERE `enterprise_id`=#{enterpriseId}
	  <if test="status!=null">
	  AND `status` IN 
				<foreach collection="list" index="index" item="item" open="(" separator="," close=")">
			               #{item}       
			    </foreach>
	  </if>
	  <if test="distrUnitCode!=null and distrUnitCode!='' ">
	  AND `distr_unit_code`=#{distrUnitCode}
	  </if>
	  <if test="distrUnitName!=null and distrUnitName!='' ">
	  AND `distr_unit_name` like concat('%', #{distrUnitName},'%')
	  </if>
	  <if test="distrType!=null">
	  AND `distr_type`=#{distrType}
	  </if>
	  <if test="returnManName!=null and returnManName!='' ">
	  AND `return_man_name`=#{returnManName}
	  </if>
	  <if test="code!=null and code!='' ">
	  AND `code`=#{code}
	  </if>
	  <if test="startTime!=null and endTime!=null">
	  AND (`in_return_date` BETWEEN #{startTime} AND #{endTime})
	  </if>
	  <if test="dateOrder==0 and codeOrder==0">
	  ORDER BY `in_return_date` DESC,`code`DESC
	  </if>
	   <if test="dateOrder==1 and codeOrder==0">
	  ORDER BY `in_return_date`,`code`DESC
	  </if>
	   <if test="dateOrder==0 and codeOrder==1">
	  ORDER BY `in_return_date` DESC,`code`
	  </if>
	   <if test="dateOrder==1 and codeOrder==1">
	  ORDER BY `in_return_date`,`code`
	  </if>
	  LIMIT #{start},#{pageSize} 
  </select>
  
  <select id="getDistrReturnOrderListTotalNum" resultType="java.lang.Integer">
  	SELECT 
	  COUNT(id)
	  FROM `saas_distr_in_return` WHERE `enterprise_id`=#{enterpriseId}
	  <if test="status!=null">
	  AND `status` IN 
				<foreach collection="list" index="index" item="item" open="(" separator="," close=")">
			               #{item}       
			    </foreach>
	  </if>
	  <if test="distrUnitCode!=null">
	  AND `distr_unit_code`=#{distrUnitCode}
	  </if>
	  <if test="distrUnitName!=null">
	  AND `distr_unit_name`=#{distrUnitName}
	  </if>
	  <if test="distrType!=null">
	  AND `distr_type`=#{distrType}
	  </if>
	  <if test="returnManName!=null">
	  AND `return_man_name`=#{returnManName}
	  </if>
	  <if test="code!=null">
	  AND `code`=#{code}
	  </if>
	  <if test="startTime!=null and endTime!=null">
	  AND (`in_return_date` BETWEEN #{startTime} AND #{endTime})
	  </if>
  </select>
  
  <select id="getDistrReturnOrderDtlList" resultMap="ResponseDistrInReturnDetailInfoVOMap">
  	SELECT 
	  dis.`id` ,`code`,dis.`in_return_date`,distr_unit_id,distr_unit_code,distr_unit_name,dis.`base_order_id` AS baseOrderId,
	  dis.base_order_code, distr_type,return_man_id,return_man_code,return_man_name,quantity_total, varieties_quantity, 
	  amount_total, dis.whole_discount AS wholeDiscount, whole_discount_amount, real_amount_total, notax_real_amount_total, 
	  tax_amount_total, dis.`status` AS `status`, dis.remark AS `remark`, 
	  `outbound_unit_id`,`outbound_unit_code`,`outbound_unit_name`,
	  detail.id AS detailId,detail.goods_id, detail.goods_code, detail.goods_name, goods_generic_name, dosage_id, dosage_name, 
	  unit_id, unit_name, goods_specification, manufacturer_id, manufacturer, goods_place, 
	  detail.lot_id, detail.lot_number, product_date, valid_date, detail.quantity, unit_price, line_discount, amount,
	  line_discount_amount, real_price, real_amount, 
	  tax_rate_id, tax_rate, notax_real_price, notax_real_amount, tax_amount,line_num,detail.remark AS detailRemark,
	  SUM(stock.`usable_quantity`) AS usableQuantity,detail.`base_order_dtl_id` AS detailBaseOrderId
	  FROM `saas_distr_in_return` dis
	  LEFT JOIN `saas_distr_in_return_detail` detail ON detail.`in_return_id`=dis.`id` AND detail.`enterprise_id`=dis.`enterprise_id`
	  LEFT JOIN `saas_stock` stock ON stock.`goods_id`=detail.`goods_id` AND stock.`lot_id`=detail.`lot_id` AND stock.`enterprise_id`=detail.`enterprise_id`
	   WHERE 1=1
	  AND dis.`id`=#{recordId}
	  GROUP BY detail.`id`
  </select> 
  
  <select id="getDistrInReturnDetailGoodsInfo" resultType="com.rograndec.feijiayun.chain.business.distr.branch.entity.DistrInReturnDetail">
	  SELECT 
	  goo.id AS goodsId,goo.code AS goodsCode, goo.name AS goodsName,
	  goo.barcode AS barcode, goo.generic_name AS goodsGenericName,
	  goo.dosage_id AS dosageId,goo.dosage_name AS dosageName,
	  goo.specification AS goodsSpecification,goo.unit_id AS unitId,
	  goo.unit_id AS unitName,goo.manufacturer_id AS manufacturerId,
	  goo.manufacturer AS manufacturer,goo.place AS goodsPlace,
	  goo.approval_number AS approvalNumber,lot.lot_num AS lotNumber,
	  lot.id AS lotId,lot.product_date AS productDate,
	  lot.valid_until AS validDate
	  FROM  saas_lot_number lot 
	  LEFT JOIN  saas_goods goo ON lot.`goods_id`=goo.`id`
	  WHERE goo.`id`=#{goodsId} AND lot.`id`=#{lotId}
  </select>
  
  <select id="getGoodsTaxrateId" resultType="java.math.BigDecimal">
  	SELECT `tax_rate` FROM `saas_goods_tax_rate` WHERE `id`=#{taxTateId}
  </select>
  
  <update id="cancelDistrReturnOrder">
  UPDATE `saas_distr_in_return` SET `status`=#{status} WHERE `enterprise_id`=#{enterpriseId} AND `id`=#{id}
  </update>
  
  <update id="cancelDistrReturnDetail">
  UPDATE `saas_distr_in_return_detail` SET `status`=#{status} WHERE `enterprise_id`=#{enterpriseId} AND `in_return_id`=#{id}
  </update>
  
  <select id="getDistrInReturnStatus" resultType="java.lang.Integer">
  SELECT `status` FROM `saas_distr_in_return` WHERE `id`=#{id}
  </select>
  
   <select id="getDisInDetailCanReturnQuantity" resultType="java.math.BigDecimal">
	  	SELECT 
	  SUM(`can_return_quantity`)
	FROM
	  `saas_distr_in_shelf` 
	WHERE 1=1
	AND `enterprise_id`=#{enterpriseId}
	AND `dtl_id`=#{detailId}
	AND `goods_id`=#{goodsId}
	AND `lot_number`=#{lotNumber}
  </select>
  
   <select id="getDisInReturnDetailReturnQuantity" resultType="java.math.BigDecimal">
  	SELECT `quantity` FROM `saas_distr_in_return_detail` WHERE `id`=#{detailId}
  </select>
  
  <select id="getDistrInDtlSlfCanReturnQuantity" resultType="com.rograndec.feijiayun.chain.business.distr.branch.vo.DistrInReturnShelfVO">
  	SELECT 
	inshelf.`id` AS id,inshelf.`can_return_quantity` AS canReturnQuantity,cargo.`job_type` AS jobType,cargo.`job_area` AS jobArea
	FROM
	  `saas_distr_in_shelf` inshelf
	  LEFT JOIN `saas_warehouse_shelf` shelf  ON shelf.`id`=inshelf.`shelf_id` AND shelf.`enterprise_id`=inshelf.`enterprise_id`
	  LEFT JOIN `saas_warehouse_cargo_area` cargo ON cargo.`id`=shelf.`cargo_area_id` AND cargo.`enterprise_id`=shelf.`enterprise_id`
	WHERE 1=1
	
	AND inshelf.`enterprise_id`=#{enterpriseId}
	AND inshelf.`dtl_id`=#{detailId}
	AND inshelf.`goods_id`=#{goodsId}
	AND inshelf.`lot_number`=#{lotNumber}
  </select>
  
   <select id="getDisInReturnDtlRetQuantity" resultType="java.math.BigDecimal">
	  	SELECT 
	  IFNULL(SUM(`quantity`),0) 
	FROM
	  `saas_distr_in_return_detail` 
	WHERE `enterprise_id` = #{enterpriseId}
	  AND `base_order_dtl_id` = #{detailId} 
	  AND `goods_id`=#{goodsId}
	  and base_order_type = #{baseOrderType}
	  AND `lot_id`=#{lotId}
	   AND `status` IN 
				<foreach collection="status" index="index" item="item" open="(" separator="," close=")">
			               #{item}       
			    </foreach>
  </select>
  
  <select id="getDistrInReturnOut" resultType="java.lang.Integer">
	  	SELECT COUNT(`id`) FROM `saas_distr_in_return_out` WHERE `base_order_id`=#{id}
  </select>
  
  <select id="getDistrReqPlanOrderListTotalNum"  resultType="java.lang.Integer">
  	SELECT COUNT(1) FROM saas_distr_req_plan req
    LEFT JOIN `saas_distr_in_return` ret ON req.`id`=ret.`base_order_id`  AND ret.`base_order_type`='5401'
    WHERE req.`outbound_unit_id` = #{enterpriseId}
    AND req.`status`=31
    AND ( ret.`status` IS NULL OR ret.`status` = 34)
    <if test="startDate!=null and endDate!=null">
       AND (req.plan_date BETWEEN #{startDate} AND #{endDate})
    </if>
  </select>
  
  <select id="getDistrReqPlanOrderList"  resultType="com.rograndec.feijiayun.chain.business.distr.branch.vo.DistrReqPlanVO">
  	SELECT
	    req.id,req.order_type AS orderType, req.code, req.plan_date AS planDate,req.planner_id AS plannerId, 
	    req.planner_code AS plannerCode, req.planner_name AS plannerName, req.request_type AS requestType, req.quantity_total AS quantityTotal, 
	    req.varieties_quantity AS varietiesQuantity, req.`status`, req.remark,
	    req.outbound_unit_id AS outboundUnitId,req.outbound_unit_code AS outboundUnitCode,req.outbound_unit_name AS outboundUnitName,
	    e.id AS distrUnitId,e.`code` AS distrUnitCode,e.`name` AS distrUnitName
    FROM saas_distr_req_plan req
    LEFT JOIN `saas_enterprise` e ON e.`id`= req.`enterprise_id`
    LEFT JOIN `saas_distr_in_return` ret ON req.`id`=ret.`base_order_id` AND ret.`base_order_type`='5401'
    WHERE req.`outbound_unit_id` = #{enterpriseId} AND req.request_type=3
    AND req.`status`=31
    AND ( ret.`status` IS NULL OR ret.`status` = 34)
    <if test="startDate!=null and endDate!=null">
       AND (req.plan_date BETWEEN #{startDate} 
	  AND #{endDate})
      </if>
	<if test="dateOrder==0 and codeOrder==0">
	ORDER BY req.plan_date DESC,req.`code` DESC
	</if>
	<if test="dateOrder==1 and codeOrder==0">
	ORDER BY req.plan_date,req.`code`DESC
	</if>
	<if test="dateOrder==0 and codeOrder==1">
	ORDER BY req.plan_date DESC,req.`code`
	</if>
	<if test="dateOrder==1 and codeOrder==1">
	ORDER BY req.plan_date,req.`code`
	</if>
	LIMIT #{start},#{pageSize}
  </select>
  
  <select id="getDistrReqPlanOrderDtlListTotalNum" resultType="java.lang.Integer">
   SELECT COUNT(1) FROM saas_distr_req_plan_detail detail WHERE detail.plan_id = #{distrInId}
  </select>
  
  <select id="getDistrReqPlanOrderDtlList" resultType="com.rograndec.feijiayun.chain.business.distr.branch.vo.DistrInReqPlanDetailVO">
   	SELECT 
	    detail.id, detail.plan_id AS planId, detail.order_type AS orderType,
	    detail.plan_code AS planCode, detail.plan_date AS planDate, detail.goods_id AS goodsId, 
	    detail.goods_code AS goodsCode, detail.barcode AS barcode, detail.goods_name AS goodsName,
	    detail.goods_generic_name AS goodsGenericName, detail.dosage_id AS dosageId,
	    detail.dosage_name AS dosageName, detail.unit_id AS unitId, 
	    detail.unit_name AS unitName, detail.goods_specification AS goodsSpecification,
	    detail.manufacturer_id AS manufacturerId, detail.manufacturer AS manufacturer, 
	    detail.goods_place AS goodsPlace, detail.approval_number AS approvalNumber, 
	    detail.quantity AS quantity, detail.line_num AS lineNum, detail.status, detail.remark,
	    bus.`distr_tax_rate_id` AS taxRateId,bus.`distr_tax_rate` AS taxRate
    FROM saas_distr_req_plan_detail detail 
    LEFT JOIN `saas_goods_business` bus ON bus.`goods_id`=detail.`goods_id`
    WHERE detail.plan_id =#{distrInId}
  </select>
  
  <select id="getGoodsLotNums" resultType="com.rograndec.feijiayun.chain.business.distr.branch.vo.DistrInLotNumVO">
  	SELECT 
	  	stock.`goods_id` AS goodsId,stock.`lot_id` AS lotId,stock.`lot_num` AS lotNum,
		lot.`product_date` AS productDate,lot.`valid_until` AS validDate,SUM(stock.`usable_quantity`) AS usableQuantity
		FROM `saas_stock` stock
	LEFT JOIN `saas_lot_number` lot ON lot.`id`=stock.`lot_id`
	WHERE stock.`enterprise_id`=#{enterpriseId}
	AND stock.`goods_id`= #{goodsId}
	GROUP BY stock.`lot_id`
	HAVING usableQuantity>0
  </select>
  
   <select id="getGoodsStockLotNums" resultType="com.rograndec.feijiayun.chain.business.distr.branch.vo.DistrInLotNumVO">
  	SELECT 
  		`goods_id` AS goodsId,`lot_id` AS lotId,SUM(`usable_quantity`) AS usableQuantity 
  	FROM `saas_stock` 
  	WHERE `enterprise_id`=#{enterpriseId}
	AND goods_id IN 
		<foreach collection="list" index="index" item="item" open="(" separator="," close=")">
	               #{item}       
	    </foreach> 
	AND lot_id IN 
		<foreach collection="lotIds" index="index" item="item" open="(" separator="," close=")">
	               #{item}       
	    </foreach> 
	GROUP BY goods_id,lot_id
  </select>
  
  <select id="getReqDtlList" resultType="com.rograndec.feijiayun.chain.business.distr.branch.entity.DistrReqPlanDetail">
    SELECT `id`,`quantity` FROM `saas_distr_req_plan_detail` WHERE `plan_id` =#{id}
  </select>
  
  
  <select id="getDistrReturnOrderById" resultType="com.rograndec.feijiayun.chain.business.distr.branch.vo.ResponseDistrInReturnVO">
  	SELECT 
	  id ,`code`,in_return_date AS inReturnDate,distr_unit_id AS distrUnitId,
	  distr_unit_code AS distrUnitCode,distr_unit_name AS distrUnitName,
	  distr_type AS distrType,return_man_id AS returnManId,
	  return_man_code AS returnManCode,return_man_name AS returnManName,
	  real_amount_total AS realAmountTotal,notax_real_amount_total AS notaxRealAmountTotal,
	  tax_amount_total AS taxAmountTotal,`status`,
	  `outbound_unit_id` AS outboundUnitId,`outbound_unit_code` AS outboundUnitCode,`outbound_unit_name` AS outboundUnitName
	  FROM `saas_distr_in_return` WHERE id=#{id}
	  LIMIT 1
  </select>
  
</mapper>