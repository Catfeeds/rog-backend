<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.rograndec.feijiayun.chain.business.distr.parent.dao.DistrReturnNoticeMapper">
  <resultMap id="BaseResultMap" type="com.rograndec.feijiayun.chain.business.distr.parent.entity.DistrReturnNotice">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="enterprise_id" jdbcType="BIGINT" property="enterpriseId" />
    <result column="parent_id" jdbcType="BIGINT" property="parentId" />
    <result column="order_type" jdbcType="INTEGER" property="orderType" />
    <result column="code" jdbcType="VARCHAR" property="code" />
    <result column="notice_date" jdbcType="TIMESTAMP" property="noticeDate" />
    <result column="base_order_id" jdbcType="BIGINT" property="baseOrderId" />
    <result column="base_order_type" jdbcType="INTEGER" property="baseOrderType" />
    <result column="base_order_code" jdbcType="VARCHAR" property="baseOrderCode" />
    <result column="base_order_date" jdbcType="TIMESTAMP" property="baseOrderDate" />
    <result column="request_unit_id" jdbcType="BIGINT" property="requestUnitId" />
    <result column="request_unit_code" jdbcType="VARCHAR" property="requestUnitCode" />
    <result column="request_unit_name" jdbcType="VARCHAR" property="requestUnitName" />
    <result column="distr_type" jdbcType="INTEGER" property="distrType" />
    <result column="quantity_total" jdbcType="DECIMAL" property="quantityTotal" />
    <result column="varieties_quantity" jdbcType="INTEGER" property="varietiesQuantity" />
    <result column="amount_total" jdbcType="DECIMAL" property="amountTotal" />
    <result column="whole_discount" jdbcType="DECIMAL" property="wholeDiscount" />
    <result column="whole_discount_amount" jdbcType="DECIMAL" property="wholeDiscountAmount" />
    <result column="real_amount_total" jdbcType="DECIMAL" property="realAmountTotal" />
    <result column="notax_real_amount_total" jdbcType="DECIMAL" property="notaxRealAmountTotal" />
    <result column="tax_amount_total" jdbcType="DECIMAL" property="taxAmountTotal" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
    <result column="creater_id" jdbcType="BIGINT" property="createrId" />
    <result column="creater_code" jdbcType="VARCHAR" property="createrCode" />
    <result column="creater_name" jdbcType="VARCHAR" property="createrName" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="modifier_id" jdbcType="BIGINT" property="modifierId" />
    <result column="modifier_code" jdbcType="VARCHAR" property="modifierCode" />
    <result column="modifier_name" jdbcType="VARCHAR" property="modifierName" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <sql id="Base_Column_List">
    id, enterprise_id, parent_id, order_type, code, notice_date, base_order_id, base_order_type, 
    base_order_code, base_order_date, request_unit_id, request_unit_code, request_unit_name, 
    distr_type, quantity_total, varieties_quantity, amount_total, whole_discount, whole_discount_amount, 
    real_amount_total, notax_real_amount_total, tax_amount_total, status, remark, creater_id, 
    creater_code, creater_name, create_time, modifier_id, modifier_code, modifier_name, 
    update_time
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from saas_distr_return_notice
    where id = #{id,jdbcType=BIGINT}
  </select>
  <select id="getReturnNoticePage"
          resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from saas_distr_return_notice
    where enterprise_id = #{enterpriseId}
    <if test="startTime != null and endTime != null">
      and notice_date between #{startTime} and #{endTime}
    </if>
    <if test="requestUnitCode != null">
      and INSTR(request_unit_code,#{requestUnitCode})
    </if>
    <if test="requestUnitName != null">
      and INSTR(request_unit_name,#{requestUnitName})
    </if>
    <if test="code != null">
      and INSTR(code,#{code})
    </if>
    <if test="distrType != null">
      and distr_type = #{distrType}
    </if>
    <if test="status != null">
      <choose>
        <when test="status != null and statueList != null">
          and status IN
          <foreach collection="statueList" index="index" item="item" open="(" separator="," close=")">
                #{item}       
          </foreach> 
        </when >
        <otherwise>
          and status = #{status}
        </otherwise>
      </choose>
    </if>
    <choose>
      <when test="order != null and sort != null">
        order by ${order} ${sort}
      </when>
      <otherwise>
        order by id desc
      </otherwise>
    </choose>
    <if test="pageSize != null">
      limit #{start},#{pageSize}
    </if>
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from saas_distr_return_notice
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.rograndec.feijiayun.chain.business.distr.parent.entity.DistrReturnNotice">
    insert into saas_distr_return_notice (id, enterprise_id, parent_id, 
      order_type, code, notice_date, 
      base_order_id, base_order_type, base_order_code, 
      base_order_date, request_unit_id, request_unit_code, 
      request_unit_name, distr_type, quantity_total, 
      varieties_quantity, amount_total, whole_discount, 
      whole_discount_amount, real_amount_total, notax_real_amount_total, 
      tax_amount_total, status, remark, 
      creater_id, creater_code, creater_name, 
      create_time, modifier_id, modifier_code, 
      modifier_name, update_time)
    values (#{id,jdbcType=BIGINT}, #{enterpriseId,jdbcType=BIGINT}, #{parentId,jdbcType=BIGINT}, 
      #{orderType,jdbcType=INTEGER}, #{code,jdbcType=VARCHAR}, #{noticeDate,jdbcType=TIMESTAMP}, 
      #{baseOrderId,jdbcType=BIGINT}, #{baseOrderType,jdbcType=INTEGER}, #{baseOrderCode,jdbcType=VARCHAR}, 
      #{baseOrderDate,jdbcType=TIMESTAMP}, #{requestUnitId,jdbcType=BIGINT}, #{requestUnitCode,jdbcType=VARCHAR}, 
      #{requestUnitName,jdbcType=VARCHAR}, #{distrType,jdbcType=INTEGER}, #{quantityTotal,jdbcType=DECIMAL}, 
      #{varietiesQuantity,jdbcType=INTEGER}, #{amountTotal,jdbcType=DECIMAL}, #{wholeDiscount,jdbcType=DECIMAL}, 
      #{wholeDiscountAmount,jdbcType=DECIMAL}, #{realAmountTotal,jdbcType=DECIMAL}, #{notaxRealAmountTotal,jdbcType=DECIMAL}, 
      #{taxAmountTotal,jdbcType=DECIMAL}, #{status,jdbcType=INTEGER}, #{remark,jdbcType=VARCHAR}, 
      #{createrId,jdbcType=BIGINT}, #{createrCode,jdbcType=VARCHAR}, #{createrName,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=TIMESTAMP}, #{modifierId,jdbcType=BIGINT}, #{modifierCode,jdbcType=VARCHAR}, 
      #{modifierName,jdbcType=VARCHAR}, #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.rograndec.feijiayun.chain.business.distr.parent.entity.DistrReturnNotice" useGeneratedKeys="true" keyProperty="id">
    insert into saas_distr_return_notice
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="enterpriseId != null">
        enterprise_id,
      </if>
      <if test="parentId != null">
        parent_id,
      </if>
      <if test="orderType != null">
        order_type,
      </if>
      <if test="code != null">
        code,
      </if>
      <if test="noticeDate != null">
        notice_date,
      </if>
      <if test="baseOrderId != null">
        base_order_id,
      </if>
      <if test="baseOrderType != null">
        base_order_type,
      </if>
      <if test="baseOrderCode != null">
        base_order_code,
      </if>
      <if test="baseOrderDate != null">
        base_order_date,
      </if>
      <if test="requestUnitId != null">
        request_unit_id,
      </if>
      <if test="requestUnitCode != null">
        request_unit_code,
      </if>
      <if test="requestUnitName != null">
        request_unit_name,
      </if>
      <if test="distrType != null">
        distr_type,
      </if>
      <if test="quantityTotal != null">
        quantity_total,
      </if>
      <if test="varietiesQuantity != null">
        varieties_quantity,
      </if>
      <if test="amountTotal != null">
        amount_total,
      </if>
      <if test="wholeDiscount != null">
        whole_discount,
      </if>
      <if test="wholeDiscountAmount != null">
        whole_discount_amount,
      </if>
      <if test="realAmountTotal != null">
        real_amount_total,
      </if>
      <if test="notaxRealAmountTotal != null">
        notax_real_amount_total,
      </if>
      <if test="taxAmountTotal != null">
        tax_amount_total,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="remark != null">
        remark,
      </if>
      <if test="createrId != null">
        creater_id,
      </if>
      <if test="createrCode != null">
        creater_code,
      </if>
      <if test="createrName != null">
        creater_name,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="modifierId != null">
        modifier_id,
      </if>
      <if test="modifierCode != null">
        modifier_code,
      </if>
      <if test="modifierName != null">
        modifier_name,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="enterpriseId != null">
        #{enterpriseId,jdbcType=BIGINT},
      </if>
      <if test="parentId != null">
        #{parentId,jdbcType=BIGINT},
      </if>
      <if test="orderType != null">
        #{orderType,jdbcType=INTEGER},
      </if>
      <if test="code != null">
        #{code,jdbcType=VARCHAR},
      </if>
      <if test="noticeDate != null">
        #{noticeDate,jdbcType=TIMESTAMP},
      </if>
      <if test="baseOrderId != null">
        #{baseOrderId,jdbcType=BIGINT},
      </if>
      <if test="baseOrderType != null">
        #{baseOrderType,jdbcType=INTEGER},
      </if>
      <if test="baseOrderCode != null">
        #{baseOrderCode,jdbcType=VARCHAR},
      </if>
      <if test="baseOrderDate != null">
        #{baseOrderDate,jdbcType=TIMESTAMP},
      </if>
      <if test="requestUnitId != null">
        #{requestUnitId,jdbcType=BIGINT},
      </if>
      <if test="requestUnitCode != null">
        #{requestUnitCode,jdbcType=VARCHAR},
      </if>
      <if test="requestUnitName != null">
        #{requestUnitName,jdbcType=VARCHAR},
      </if>
      <if test="distrType != null">
        #{distrType,jdbcType=INTEGER},
      </if>
      <if test="quantityTotal != null">
        #{quantityTotal,jdbcType=DECIMAL},
      </if>
      <if test="varietiesQuantity != null">
        #{varietiesQuantity,jdbcType=INTEGER},
      </if>
      <if test="amountTotal != null">
        #{amountTotal,jdbcType=DECIMAL},
      </if>
      <if test="wholeDiscount != null">
        #{wholeDiscount,jdbcType=DECIMAL},
      </if>
      <if test="wholeDiscountAmount != null">
        #{wholeDiscountAmount,jdbcType=DECIMAL},
      </if>
      <if test="realAmountTotal != null">
        #{realAmountTotal,jdbcType=DECIMAL},
      </if>
      <if test="notaxRealAmountTotal != null">
        #{notaxRealAmountTotal,jdbcType=DECIMAL},
      </if>
      <if test="taxAmountTotal != null">
        #{taxAmountTotal,jdbcType=DECIMAL},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="createrId != null">
        #{createrId,jdbcType=BIGINT},
      </if>
      <if test="createrCode != null">
        #{createrCode,jdbcType=VARCHAR},
      </if>
      <if test="createrName != null">
        #{createrName,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="modifierId != null">
        #{modifierId,jdbcType=BIGINT},
      </if>
      <if test="modifierCode != null">
        #{modifierCode,jdbcType=VARCHAR},
      </if>
      <if test="modifierName != null">
        #{modifierName,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.rograndec.feijiayun.chain.business.distr.parent.entity.DistrReturnNotice">
    update saas_distr_return_notice
    <set>
      <if test="enterpriseId != null">
        enterprise_id = #{enterpriseId,jdbcType=BIGINT},
      </if>
      <if test="parentId != null">
        parent_id = #{parentId,jdbcType=BIGINT},
      </if>
      <if test="orderType != null">
        order_type = #{orderType,jdbcType=INTEGER},
      </if>
      <if test="code != null">
        code = #{code,jdbcType=VARCHAR},
      </if>
      <if test="noticeDate != null">
        notice_date = #{noticeDate,jdbcType=TIMESTAMP},
      </if>
      <if test="baseOrderId != null">
        base_order_id = #{baseOrderId,jdbcType=BIGINT},
      </if>
      <if test="baseOrderType != null">
        base_order_type = #{baseOrderType,jdbcType=INTEGER},
      </if>
      <if test="baseOrderCode != null">
        base_order_code = #{baseOrderCode,jdbcType=VARCHAR},
      </if>
      <if test="baseOrderDate != null">
        base_order_date = #{baseOrderDate,jdbcType=TIMESTAMP},
      </if>
      <if test="requestUnitId != null">
        request_unit_id = #{requestUnitId,jdbcType=BIGINT},
      </if>
      <if test="requestUnitCode != null">
        request_unit_code = #{requestUnitCode,jdbcType=VARCHAR},
      </if>
      <if test="requestUnitName != null">
        request_unit_name = #{requestUnitName,jdbcType=VARCHAR},
      </if>
      <if test="distrType != null">
        distr_type = #{distrType,jdbcType=INTEGER},
      </if>
      <if test="quantityTotal != null">
        quantity_total = #{quantityTotal,jdbcType=DECIMAL},
      </if>
      <if test="varietiesQuantity != null">
        varieties_quantity = #{varietiesQuantity,jdbcType=INTEGER},
      </if>
      <if test="amountTotal != null">
        amount_total = #{amountTotal,jdbcType=DECIMAL},
      </if>
      <if test="wholeDiscount != null">
        whole_discount = #{wholeDiscount,jdbcType=DECIMAL},
      </if>
      <if test="wholeDiscountAmount != null">
        whole_discount_amount = #{wholeDiscountAmount,jdbcType=DECIMAL},
      </if>
      <if test="realAmountTotal != null">
        real_amount_total = #{realAmountTotal,jdbcType=DECIMAL},
      </if>
      <if test="notaxRealAmountTotal != null">
        notax_real_amount_total = #{notaxRealAmountTotal,jdbcType=DECIMAL},
      </if>
      <if test="taxAmountTotal != null">
        tax_amount_total = #{taxAmountTotal,jdbcType=DECIMAL},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="createrId != null">
        creater_id = #{createrId,jdbcType=BIGINT},
      </if>
      <if test="createrCode != null">
        creater_code = #{createrCode,jdbcType=VARCHAR},
      </if>
      <if test="createrName != null">
        creater_name = #{createrName,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="modifierId != null">
        modifier_id = #{modifierId,jdbcType=BIGINT},
      </if>
      <if test="modifierCode != null">
        modifier_code = #{modifierCode,jdbcType=VARCHAR},
      </if>
      <if test="modifierName != null">
        modifier_name = #{modifierName,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.rograndec.feijiayun.chain.business.distr.parent.entity.DistrReturnNotice">
    update saas_distr_return_notice
    set enterprise_id = #{enterpriseId,jdbcType=BIGINT},
      parent_id = #{parentId,jdbcType=BIGINT},
      order_type = #{orderType,jdbcType=INTEGER},
      code = #{code,jdbcType=VARCHAR},
      notice_date = #{noticeDate,jdbcType=TIMESTAMP},
      base_order_id = #{baseOrderId,jdbcType=BIGINT},
      base_order_type = #{baseOrderType,jdbcType=INTEGER},
      base_order_code = #{baseOrderCode,jdbcType=VARCHAR},
      base_order_date = #{baseOrderDate,jdbcType=TIMESTAMP},
      request_unit_id = #{requestUnitId,jdbcType=BIGINT},
      request_unit_code = #{requestUnitCode,jdbcType=VARCHAR},
      request_unit_name = #{requestUnitName,jdbcType=VARCHAR},
      distr_type = #{distrType,jdbcType=INTEGER},
      quantity_total = #{quantityTotal,jdbcType=DECIMAL},
      varieties_quantity = #{varietiesQuantity,jdbcType=INTEGER},
      amount_total = #{amountTotal,jdbcType=DECIMAL},
      whole_discount = #{wholeDiscount,jdbcType=DECIMAL},
      whole_discount_amount = #{wholeDiscountAmount,jdbcType=DECIMAL},
      real_amount_total = #{realAmountTotal,jdbcType=DECIMAL},
      notax_real_amount_total = #{notaxRealAmountTotal,jdbcType=DECIMAL},
      tax_amount_total = #{taxAmountTotal,jdbcType=DECIMAL},
      status = #{status,jdbcType=INTEGER},
      remark = #{remark,jdbcType=VARCHAR},
      creater_id = #{createrId,jdbcType=BIGINT},
      creater_code = #{createrCode,jdbcType=VARCHAR},
      creater_name = #{createrName,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      modifier_id = #{modifierId,jdbcType=BIGINT},
      modifier_code = #{modifierCode,jdbcType=VARCHAR},
      modifier_name = #{modifierName,jdbcType=VARCHAR},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateStatus">
    update saas_distr_return_notice set status = #{status,jdbcType=INTEGER}
    where id = #{id,jdbcType=BIGINT}
  </update>
  
  <select id="getDistrReturnNoticeReport" parameterType="com.rograndec.feijiayun.chain.business.report.quality.distr.vo.RequestDistrReturnNoticeVO" resultType="com.rograndec.feijiayun.chain.business.report.quality.distr.vo.DistrReturnNoticeReportVO">
	SELECT
	detail.`id`,notice.`notice_date` AS noticeDate,notice.`code`,notice.`request_unit_id` AS requestUnitId,
	notice.`request_unit_code` AS requestUnitCode,notice.`request_unit_name`AS requestUnitName,notice.`distr_type` AS distrType,

	a.code AS baseOrderCode,b.code AS distrInReturn,

	detail.`goods_id` AS goodsId,detail.`goods_code` AS goodsCode,detail.`barcode` AS barcode,detail.`goods_name` AS goodsName,
	detail.`goods_generic_name` AS goodsGenericName,detail.`dosage_id` AS dosageId,detail.`dosage_name` AS dosageName,
	detail.`unit_id` AS unitId,detail.`unit_name` AS unitName,detail.`goods_specification` AS goodsSpecification,
	detail.`manufacturer_id` AS manufacturerId,detail.`manufacturer` AS manufacturer,detail.`goods_place` AS goodsPlace,
	detail.`approval_number` AS approvalNumber,	detail.`quantity` AS quantity,
	detail.`unit_price`AS unitPrice,detail.`line_discount` AS lineDiscount,detail.`amount` AS amount,detail.`whole_discount` AS wholeDiscount,
	detail.`line_discount_amount` AS lineDiscountAmount,detail.`real_price`AS realPrice,detail.`real_amount` AS realAmount,
	detail.`tax_rate_id` AS taxRateId,detail.`tax_rate` AS taxRate,detail.`notax_real_price` AS notaxRealPrice,
	detail.`notax_real_amount` AS notaxRealAmount,detail.`tax_amount` AS taxAmount,detail.`status`AS `status`,

	goods.`business_variety` AS businessVariety,cate.id AS categoryId,cate.name AS categoryName,
	goods.`goods_attribute` AS goodsAttribute,goods.`prescription_drug` AS prescriptionDrug,goods.`otc_type` AS otcType,
	goods.`domestic_import` AS domesticImport,goods.`management_scope_id` AS managemenScopeId,
	goods.`management_scope_name` AS managementScopeName,goods.`special_drug` AS specialDrug,
	goods.`in_charge_drug` AS inChargeDrug,goods.`limit_quantity` AS limitQuantity,
	goods.`storage_temp` AS storageTemp,goods.`storage_condition_name` AS storageConditionName,
	goods.`quality_period` AS qualityPeriod,goods.`quality_period_unit` AS qualityPeriodUnit,
	goods.`spirit_drug_type` AS spiritDrugType,goods.`formulation_type` AS formulationType,goods.`cosmetics`
	FROM `saas_distr_return_notice_detail` detail
    INNER JOIN `saas_distr_return_notice` notice ON notice.`id`=detail.`notice_id`
    INNER JOIN `saas_distr_in_return_out` a ON a.`id`=notice.`base_order_id`
    INNER JOIN `saas_distr_in_return` b ON b.`id`=a.`base_order_id`
    INNER JOIN `saas_goods` goods ON goods.`id`=detail.`goods_id`
    INNER JOIN `saas_goods_category` cate ON cate.id=goods.`category_id`
	WHERE 1=1 
	AND detail.`enterprise_id`=#{enterpriseId}
	<include refid="GoodsNearEffectParams"/>
	 <if test="dateOrder==0 and codeOrder==0">
	 ORDER BY notice.`notice_date` DESC , notice.`code` DESC   
	 </if>
	  <if test="dateOrder==0 and codeOrder==1">
	 ORDER BY notice.`notice_date` DESC , notice.`code`   
	 </if>
	  <if test="dateOrder==1 and codeOrder==0">
	 ORDER BY notice.`notice_date`, notice.`code` DESC   
	 </if>
	  <if test="dateOrder==1 and codeOrder==1">
	 ORDER BY notice.`notice_date`, notice.`code` 
	 </if>
	 <if test="start!=null and pageSize!=null">
	 LIMIT #{start},#{pageSize}
	 </if>
  </select>
  <sql id="GoodsNearEffectParams">
  	<if test="param != null and param != ''">
  	  AND (
      INSTR(detail.`goods_name`,#{param})
      OR INSTR(detail.`goods_code`,#{param})
      OR INSTR(detail.`approval_number`,#{param})
      OR INSTR(detail.`barcode`,#{param})
      OR INSTR(detail.`goods_generic_name`,#{param})
      )
    </if>
    <if test="categoryId != null">
      AND goods.category_id = #{categoryId}
    </if>
     <if test="businessVariety != null">
      AND goods.`business_variety` = #{businessVariety}
    </if>
    <if test="domesticImport != null">
      AND goods.domestic_import = #{domesticImport}
    </if>
     <if test="storageTemp != null">
      AND goods.storage_temp = #{storageTemp}
    </if>
     <if test="storageConditionName != null and storageConditionName!='' ">
      AND goods.`storage_condition_name` like concat('%', #{storageConditionName},'%')
    </if>
    <if test="registeredTrademark != null and registeredTrademark!='' ">
      AND goods.registered_trademark = #{registeredTrademark}
    </if>
    <if test="brand != null and brand!='' ">
      AND goods.brand = #{brand}
    </if>
    <if test="goodsAttribute != null">
      AND goods.goods_attribute = #{goodsAttribute}
    </if>
     <if test="prescriptionDrug != null">
      AND goods.prescription_drug = #{prescriptionDrug}
    </if>
     <if test="otcType != null">
      AND goods.otc_type = #{otcType}
    </if>
    <if test="cosmetics != null">
      AND goods.cosmetics = #{cosmetics}
    </if>
     <if test="managementScopeId != null">
      AND goods.management_scope_id = #{managementScopeId}
    </if>
     <if test="specialDrug != null">
      AND goods.special_drug = #{specialDrug}
    </if>
    <if test="inChargeDrug != null">
      AND goods.in_charge_drug = #{inChargeDrug}
    </if>
    
    <if test="spiritDrugType != null">
	  AND goods.spirit_drug_type = #{spiritDrugType}
	</if>
    <if test="formulationType != null">
	  AND goods.formulation_type = #{formulationType}
	</if>
    
    <if test="startDate!=null and endDate!=null">
    AND (notice.`notice_date` BETWEEN #{startDate} AND #{endDate} )
    </if>
    <if test="startDate!=null and endDate==null">
    AND notice.`notice_date` <![CDATA[>=]]> #{startDate}
    </if>
    <if test="startDate==null and endDate!=null">
    AND notice.`notice_date` <![CDATA[<=]]> #{endDate}
    </if>
    
    <if test="requestUnitCode!=null and requestUnitCode!='' ">
    AND notice.`request_unit_code`=#{requestUnitCode}
    </if>
    <if test="requestUnitName!=null and requestUnitName!='' ">
    AND notice.`request_unit_name` like concat('%', #{requestUnitName},'%')
    </if>
    
    <if test="distrType!=null">
     AND notice.`distr_type`=#{distrType}
    </if>
    <if test="status!=null">
     AND detail.`status`=#{status}
    </if>
    <if test="code!=null and code!=''">
     AND notice.`code`=#{code}
    </if>
  </sql>
  
  <select id="getDistrReturnNoticeReportTotalNum" parameterType="com.rograndec.feijiayun.chain.business.report.quality.distr.vo.RequestDistrReturnNoticeVO" resultType="java.lang.Integer">
	SELECT COUNT(detail.`id`)
	FROM `saas_distr_return_notice_detail` detail
    INNER JOIN `saas_distr_return_notice` notice ON notice.`id`=detail.`notice_id`
    INNER JOIN `saas_distr_in_return_out` a ON a.`id`=notice.`base_order_id`
    INNER JOIN `saas_distr_in_return` b ON b.`id`=a.`base_order_id`
    INNER JOIN `saas_goods` goods ON goods.`id`=detail.`goods_id`
    INNER JOIN `saas_goods_category` cate ON cate.id=goods.`category_id`
	WHERE 1=1 
	AND detail.`enterprise_id`=#{enterpriseId}
	<include refid="GoodsNearEffectParams"/>
  </select>
  
   <select id="getDistrReportVo" parameterType="com.rograndec.feijiayun.chain.business.report.quality.distr.vo.RequestDistrReturnNoticeVO" resultType="com.rograndec.feijiayun.chain.business.report.quality.distr.vo.DistrReportVo">
		SELECT 
	  SUM(detail.`quantity`) AS quantity,
	  SUM(detail.`amount`) AS amount,
	  SUM(detail.`real_amount`) AS realAmount,
	  SUM(detail.`notax_real_amount`) AS notaxRealAmount,
	  SUM(detail.`tax_amount`) AS taxAmount 
	FROM
	  `saas_distr_return_notice_detail` detail
     INNER JOIN `saas_distr_return_notice` notice ON notice.`id` = detail.`notice_id`
     INNER JOIN `saas_distr_in_return_out` a ON a.`id` = notice.`base_order_id`
     INNER JOIN `saas_distr_in_return` b ON b.`id` = a.`base_order_id`
     INNER JOIN `saas_goods` goods ON goods.`id` = detail.`goods_id`
     INNER JOIN `saas_goods_category` cate ON cate.id = goods.`category_id`
	WHERE 1 = 1 
	AND detail.`enterprise_id`=#{enterpriseId}
	<include refid="GoodsNearEffectParams"/>
  </select>
    <select id="getTotalRecord" resultType="java.lang.Integer">
      select
      COUNT(*)
      from saas_distr_return_notice
      where enterprise_id = #{enterpriseId}
      <if test="startTime != null and endTime != null">
        and notice_date between #{startTime} and #{endTime}
      </if>
      <if test="requestUnitCode != null">
        and INSTR(request_unit_code,#{requestUnitCode})
      </if>
      <if test="requestUnitName != null">
        and INSTR(request_unit_name,#{requestUnitName})
      </if>
      <if test="code != null">
        and INSTR(code,#{code})
      </if>
      <if test="distrType != null">
        and distr_type = #{distrType}
      </if>
      <if test="status != null">
        <choose>
           <when test="status != null and statueList != null">
	          and status IN
	          <foreach collection="statueList" index="index" item="item" open="(" separator="," close=")">
	                #{item}       
	          </foreach> 
	      </when >
          <otherwise>
            and status = #{status}
          </otherwise>
        </choose>
      </if>
      <choose>
        <when test="order != null and sort != null">
          order by ${order} ${sort}
        </when>
        <otherwise>
          order by id desc
        </otherwise>
      </choose>
    </select>
  <select id="selectReturnNoticeStastic"
          resultType="com.rograndec.feijiayun.chain.business.distr.parent.vo.DistrReturnNoticeStasticVO">
    select
    sum(real_amount_total) AS stasticRealAmountTotal,
    sum(notax_real_amount_total) AS stasticNotaxRealAmountTotal,
    sum(tax_amount_total) AS stasticTaxAmountTotal
    from saas_distr_return_notice
    where enterprise_id = #{enterpriseId}
    <if test="startTime != null and endTime != null">
      and notice_date between #{startTime} and #{endTime}
    </if>
    <if test="requestUnitCode != null">
      and INSTR(request_unit_code,#{requestUnitCode})
    </if>
    <if test="requestUnitName != null">
      and INSTR(request_unit_name,#{requestUnitName})
    </if>
    <if test="code != null">
      and INSTR(code,#{code})
    </if>
    <if test="distrType != null">
      and distr_type = #{distrType}
    </if>
    <if test="status != null">
      <choose>
        <when test="status != null and statueList != null">
	          and status IN
	          <foreach collection="statueList" index="index" item="item" open="(" separator="," close=")">
	                #{item}       
	          </foreach> 
	    </when >
        <otherwise>
          and status = #{status}
        </otherwise>
      </choose>
    </if>
    <choose>
      <when test="order != null and sort != null">
        order by ${order} ${sort}
      </when>
      <otherwise>
        order by id desc
      </otherwise>
    </choose>
  </select>



  <select id="getDistrReturnNoticeList" resultType="com.rograndec.feijiayun.chain.business.distr.parent.vo.DistrReturnNoticePageVO">

    SELECT
    id, code, notice_date as noticeDate, request_unit_id as requestUnitId , request_unit_code as requestUnitCode,
    request_unit_name requestUnitName,distr_type distrType,
    real_amount_total realAmountTotal, notax_real_amount_total notaxRealAmountTotal, tax_amount_total taxAmountTotal,status
    FROM  saas_distr_return_notice
    WHERE enterprise_id = #{enterpriseId}
    AND  distr_type in(0,1)
    <if test="startTime != null and endTime != null">
      AND notice_date between #{startTime} and #{endTime}
    </if>
    <if test="status != null">
      AND status = #{status}
    </if>

    <choose>
      <when test="order != null and sort != null">
        order by ${order} ${sort}
      </when>
      <otherwise>
        order by id desc
      </otherwise>
    </choose>
  </select>

</mapper>