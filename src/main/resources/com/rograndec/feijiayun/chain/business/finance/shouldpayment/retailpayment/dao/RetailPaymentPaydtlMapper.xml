<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.rograndec.feijiayun.chain.business.finance.shouldpayment.retailpayment.dao.RetailPaymentPaydtlMapper">
  <resultMap id="BaseResultMap" type="com.rograndec.feijiayun.chain.business.finance.shouldpayment.retailpayment.entity.RetailPaymentPaydtl">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="enterprise_id" jdbcType="BIGINT" property="enterpriseId" />
    <result column="parent_id" jdbcType="BIGINT" property="parentId" />
    <result column="dtl_id" jdbcType="BIGINT" property="dtlId" />
    <result column="item_id" jdbcType="BIGINT" property="itemId" />
    <result column="doc_id" jdbcType="BIGINT" property="docId" />
    <result column="pay_type_id" jdbcType="BIGINT" property="payTypeId" />
    <result column="pay_type_name" jdbcType="VARCHAR" property="payTypeName" />
    <result column="pay_amount" jdbcType="DECIMAL" property="payAmount" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
    <result column="creater_id" jdbcType="BIGINT" property="createrId" />
    <result column="creater_code" jdbcType="VARCHAR" property="createrCode" />
    <result column="creater_name" jdbcType="VARCHAR" property="createrName" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="modifier_id" jdbcType="BIGINT" property="modifierId" />
    <result column="modifier_code" jdbcType="VARCHAR" property="modifierCode" />
    <result column="modifier_name" jdbcType="VARCHAR" property="modifierName" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <resultMap id="RetailPaymentPaydtlVO" type="com.rograndec.feijiayun.chain.business.finance.shouldpayment.retailpayment.vo.RetailPaymentPaydtlVO">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="dtl_id" jdbcType="BIGINT" property="dtlId" />
    <result column="item_id" jdbcType="BIGINT" property="itemId" />
    <result column="doc_id" jdbcType="BIGINT" property="docId" />
    <result column="pay_type_id" jdbcType="BIGINT" property="payTypeId" />
    <result column="pay_type_name" jdbcType="VARCHAR" property="payTypeName" />
    <result column="pay_amount" jdbcType="DECIMAL" property="payAmount" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
  </resultMap>
  <sql id="Base_Column_List">
    id, enterprise_id, parent_id, dtl_id, item_id, doc_id, pay_type_id, pay_type_name, 
    pay_amount, status, remark, creater_id, creater_code, creater_name, create_time, 
    modifier_id, modifier_code, modifier_name, update_time
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from saas_retail_payment_paydtl
    where id = #{id,jdbcType=BIGINT}
  </select>
  <select id="selectRetailPaymentPaydtlVOByDetailId" parameterType="java.lang.Long" resultMap="RetailPaymentPaydtlVO">
    select
    <include refid="Base_Column_List" />
    from saas_retail_payment_paydtl
    where dtl_id = #{dtlId,jdbcType=BIGINT}
  </select>
  <select id="selectByDetailId" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from saas_retail_payment_paydtl
    where dtl_id = #{dtlId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from saas_retail_payment_paydtl
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.rograndec.feijiayun.chain.business.finance.shouldpayment.retailpayment.entity.RetailPaymentPaydtl" useGeneratedKeys="true" keyProperty="id">
    insert into saas_retail_payment_paydtl (id, enterprise_id, parent_id, 
      dtl_id, item_id, doc_id, 
      pay_type_id, pay_type_name, pay_amount, 
      status, remark, creater_id, 
      creater_code, creater_name, create_time, 
      modifier_id, modifier_code, modifier_name, 
      update_time)
    values (#{id,jdbcType=BIGINT}, #{enterpriseId,jdbcType=BIGINT}, #{parentId,jdbcType=BIGINT}, 
      #{dtlId,jdbcType=BIGINT}, #{itemId,jdbcType=BIGINT}, #{docId,jdbcType=BIGINT}, 
      #{payTypeId,jdbcType=BIGINT}, #{payTypeName,jdbcType=VARCHAR}, #{payAmount,jdbcType=DECIMAL}, 
      #{status,jdbcType=INTEGER}, #{remark,jdbcType=VARCHAR}, #{createrId,jdbcType=BIGINT}, 
      #{createrCode,jdbcType=VARCHAR}, #{createrName,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, 
      #{modifierId,jdbcType=BIGINT}, #{modifierCode,jdbcType=VARCHAR}, #{modifierName,jdbcType=VARCHAR}, 
      #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.rograndec.feijiayun.chain.business.finance.shouldpayment.retailpayment.entity.RetailPaymentPaydtl" useGeneratedKeys="true" keyProperty="id">
    insert into saas_retail_payment_paydtl
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="enterpriseId != null">
        enterprise_id,
      </if>
      <if test="parentId != null">
        parent_id,
      </if>
      <if test="dtlId != null">
        dtl_id,
      </if>
      <if test="itemId != null">
        item_id,
      </if>
      <if test="docId != null">
        doc_id,
      </if>
      <if test="payTypeId != null">
        pay_type_id,
      </if>
      <if test="payTypeName != null">
        pay_type_name,
      </if>
      <if test="payAmount != null">
        pay_amount,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="remark != null">
        remark,
      </if>
      <if test="createrId != null">
        creater_id,
      </if>
      <if test="createrCode != null">
        creater_code,
      </if>
      <if test="createrName != null">
        creater_name,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="modifierId != null">
        modifier_id,
      </if>
      <if test="modifierCode != null">
        modifier_code,
      </if>
      <if test="modifierName != null">
        modifier_name,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="enterpriseId != null">
        #{enterpriseId,jdbcType=BIGINT},
      </if>
      <if test="parentId != null">
        #{parentId,jdbcType=BIGINT},
      </if>
      <if test="dtlId != null">
        #{dtlId,jdbcType=BIGINT},
      </if>
      <if test="itemId != null">
        #{itemId,jdbcType=BIGINT},
      </if>
      <if test="docId != null">
        #{docId,jdbcType=BIGINT},
      </if>
      <if test="payTypeId != null">
        #{payTypeId,jdbcType=BIGINT},
      </if>
      <if test="payTypeName != null">
        #{payTypeName,jdbcType=VARCHAR},
      </if>
      <if test="payAmount != null">
        #{payAmount,jdbcType=DECIMAL},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="createrId != null">
        #{createrId,jdbcType=BIGINT},
      </if>
      <if test="createrCode != null">
        #{createrCode,jdbcType=VARCHAR},
      </if>
      <if test="createrName != null">
        #{createrName,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="modifierId != null">
        #{modifierId,jdbcType=BIGINT},
      </if>
      <if test="modifierCode != null">
        #{modifierCode,jdbcType=VARCHAR},
      </if>
      <if test="modifierName != null">
        #{modifierName,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.rograndec.feijiayun.chain.business.finance.shouldpayment.retailpayment.entity.RetailPaymentPaydtl">
    update saas_retail_payment_paydtl
    <set>
      <if test="enterpriseId != null">
        enterprise_id = #{enterpriseId,jdbcType=BIGINT},
      </if>
      <if test="parentId != null">
        parent_id = #{parentId,jdbcType=BIGINT},
      </if>
      <if test="dtlId != null">
        dtl_id = #{dtlId,jdbcType=BIGINT},
      </if>
      <if test="itemId != null">
        item_id = #{itemId,jdbcType=BIGINT},
      </if>
      <if test="docId != null">
        doc_id = #{docId,jdbcType=BIGINT},
      </if>
      <if test="payTypeId != null">
        pay_type_id = #{payTypeId,jdbcType=BIGINT},
      </if>
      <if test="payTypeName != null">
        pay_type_name = #{payTypeName,jdbcType=VARCHAR},
      </if>
      <if test="payAmount != null">
        pay_amount = #{payAmount,jdbcType=DECIMAL},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="createrId != null">
        creater_id = #{createrId,jdbcType=BIGINT},
      </if>
      <if test="createrCode != null">
        creater_code = #{createrCode,jdbcType=VARCHAR},
      </if>
      <if test="createrName != null">
        creater_name = #{createrName,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="modifierId != null">
        modifier_id = #{modifierId,jdbcType=BIGINT},
      </if>
      <if test="modifierCode != null">
        modifier_code = #{modifierCode,jdbcType=VARCHAR},
      </if>
      <if test="modifierName != null">
        modifier_name = #{modifierName,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.rograndec.feijiayun.chain.business.finance.shouldpayment.retailpayment.entity.RetailPaymentPaydtl">
    update saas_retail_payment_paydtl
    set enterprise_id = #{enterpriseId,jdbcType=BIGINT},
      parent_id = #{parentId,jdbcType=BIGINT},
      dtl_id = #{dtlId,jdbcType=BIGINT},
      item_id = #{itemId,jdbcType=BIGINT},
      doc_id = #{docId,jdbcType=BIGINT},
      pay_type_id = #{payTypeId,jdbcType=BIGINT},
      pay_type_name = #{payTypeName,jdbcType=VARCHAR},
      pay_amount = #{payAmount,jdbcType=DECIMAL},
      status = #{status,jdbcType=INTEGER},
      remark = #{remark,jdbcType=VARCHAR},
      creater_id = #{createrId,jdbcType=BIGINT},
      creater_code = #{createrCode,jdbcType=VARCHAR},
      creater_name = #{createrName,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      modifier_id = #{modifierId,jdbcType=BIGINT},
      modifier_code = #{modifierCode,jdbcType=VARCHAR},
      modifier_name = #{modifierName,jdbcType=VARCHAR},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateStatus">
    update saas_retail_payment_paydtl set status = #{status} where item_id = #{itemId}
  </update>
  <select id="selectByShiftId" resultMap="RetailPaymentPaydtlVO">
    <!--select a.pay_type_id ,a.pay_type_name ,sum(if(e.sale_type = 0,a.amount,-a.amount)) as pay_amount
    from saas_receipt_detail a,saas_receipt b, saas_sale c, saas_payee_opening_shift_detail d, ,saas_sale e
    where a.receipt_id = b.id
    and b.base_order_id = c.id
    and c.id = d.base_order_id
    and b.base_order_id = e.id
    and d.doc_id = #{shiftId}
    group by a.pay_type_id,a.pay_type_name-->
    select a.pay_type_id ,a.pay_type_name ,sum(a.amount) as pay_amount
    from
    (
      select a.pay_type_id ,a.pay_type_name ,a.amount
      from saas_receipt_detail a,saas_receipt b, saas_sale c, saas_payee_opening_shift_detail d,saas_sale e
      where a.receipt_id = b.id
      and b.base_order_id = c.id
      and c.id = d.base_order_id
      and b.base_order_id = e.id
      and e.sale_type = 0
      and d.doc_id = #{shiftId}
      union all
      select a.pay_type_id ,a.pay_type_name ,-a.amount
      from saas_receipt_detail a,saas_receipt b, saas_sale c, saas_payee_opening_shift_detail d,saas_sale e
      where a.receipt_id = b.id
      and b.base_order_id = c.id
      and c.id = d.base_order_id
      and b.base_order_id = e.id
      and e.sale_type = 1
      and d.doc_id = #{shiftId}
    ) as a
    group by a.pay_type_id,a.pay_type_name;

  </select>
</mapper>