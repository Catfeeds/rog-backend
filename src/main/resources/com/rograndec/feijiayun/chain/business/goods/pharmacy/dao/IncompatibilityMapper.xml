<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.rograndec.feijiayun.chain.business.goods.pharmacy.dao.IncompatibilityMapper">
  <resultMap id="BaseResultMap" type="com.rograndec.feijiayun.chain.business.goods.pharmacy.entity.Incompatibility">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="enterprise_id" jdbcType="BIGINT" property="enterpriseId" />
    <result column="parent_id" jdbcType="BIGINT" property="parentId" />
    <result column="varity" jdbcType="VARCHAR" property="varity" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
    <result column="creater_id" jdbcType="BIGINT" property="createrId" />
    <result column="creater_code" jdbcType="VARCHAR" property="createrCode" />
    <result column="creater_name" jdbcType="VARCHAR" property="createrName" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="modifier_id" jdbcType="BIGINT" property="modifierId" />
    <result column="modifier_code" jdbcType="VARCHAR" property="modifierCode" />
    <result column="modifier_name" jdbcType="VARCHAR" property="modifierName" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <resultMap type="com.rograndec.feijiayun.chain.business.goods.pharmacy.vo.SelectGoodsVO" id="SelectGoodsMap">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result property="code" column="code"/>
    <result property="genericName" column="generic_name"/>
    <result property="dosageName" column="dosage_name"/>
    <result property="dosageId" column="dosage_id"/>
    <result property="specification" column="specification"/>
    <result property="manufacturer" column="manufacturer"/>
    <result property="manufacturerId" column="manufacturer_id"/>
    <result property="unitName" column="unit_name"/>
    <result property="unitId" column="unit_id"/>
    <result property="ownerId" column="owner_id"/>
  </resultMap>
  <resultMap id="IncompatibilityGoodsVOMap" type="com.rograndec.feijiayun.chain.business.goods.pharmacy.vo.IncompatibilityGoodsVO">
    <result column="goods_id" jdbcType="VARCHAR" property="compatibilityGoodsId" />
    <result column="result" jdbcType="VARCHAR" property="compatibilityResult" />
  </resultMap>
  <sql id="Base_Column_List">
    id, enterprise_id, parent_id, varity,  status, remark, creater_id, creater_code,
    creater_name, create_time, modifier_id, modifier_code, modifier_name, update_time
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from saas_incompatibility
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from saas_incompatibility
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.rograndec.feijiayun.chain.business.goods.pharmacy.entity.Incompatibility" useGeneratedKeys="true" keyProperty="id">
    insert into saas_incompatibility (id, enterprise_id, parent_id, 
      varity, status, remark,
      creater_id, creater_code, creater_name, 
      create_time, modifier_id, modifier_code, 
      modifier_name, update_time)
    values (#{id,jdbcType=BIGINT}, #{enterpriseId,jdbcType=BIGINT}, #{parentId,jdbcType=BIGINT}, 
      #{varity,jdbcType=VARCHAR},  #{status,jdbcType=INTEGER}, #{remark,jdbcType=VARCHAR},
      #{createrId,jdbcType=BIGINT}, #{createrCode,jdbcType=VARCHAR}, #{createrName,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=TIMESTAMP}, #{modifierId,jdbcType=BIGINT}, #{modifierCode,jdbcType=VARCHAR},
      #{modifierName,jdbcType=VARCHAR}, #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.rograndec.feijiayun.chain.business.goods.pharmacy.entity.Incompatibility" useGeneratedKeys="true" keyProperty="id">
    insert into saas_incompatibility
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="enterpriseId != null">
        enterprise_id,
      </if>
      <if test="parentId != null">
        parent_id,
      </if>
      <if test="varity != null">
        varity,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="remark != null">
        remark,
      </if>
      <if test="createrId != null">
        creater_id,
      </if>
      <if test="createrCode != null">
        creater_code,
      </if>
      <if test="createrName != null">
        creater_name,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="modifierId != null">
        modifier_id,
      </if>
      <if test="modifierCode != null">
        modifier_code,
      </if>
      <if test="modifierName != null">
        modifier_name,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="enterpriseId != null">
        #{enterpriseId,jdbcType=BIGINT},
      </if>
      <if test="parentId != null">
        #{parentId,jdbcType=BIGINT},
      </if>
      <if test="varity != null">
        #{varity,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="createrId != null">
        #{createrId,jdbcType=BIGINT},
      </if>
      <if test="createrCode != null">
        #{createrCode,jdbcType=VARCHAR},
      </if>
      <if test="createrName != null">
        #{createrName,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="modifierId != null">
        #{modifierId,jdbcType=BIGINT},
      </if>
      <if test="modifierCode != null">
        #{modifierCode,jdbcType=VARCHAR},
      </if>
      <if test="modifierName != null">
        #{modifierName,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.rograndec.feijiayun.chain.business.goods.pharmacy.entity.Incompatibility">
    update saas_incompatibility
    <set>
      <if test="enterpriseId != null">
        enterprise_id = #{enterpriseId,jdbcType=BIGINT},
      </if>
      <if test="parentId != null">
        parent_id = #{parentId,jdbcType=BIGINT},
      </if>
      <if test="varity != null">
        varity = #{varity,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="createrId != null">
        creater_id = #{createrId,jdbcType=BIGINT},
      </if>
      <if test="createrCode != null">
        creater_code = #{createrCode,jdbcType=VARCHAR},
      </if>
      <if test="createrName != null">
        creater_name = #{createrName,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="modifierId != null">
        modifier_id = #{modifierId,jdbcType=BIGINT},
      </if>
      <if test="modifierCode != null">
        modifier_code = #{modifierCode,jdbcType=VARCHAR},
      </if>
      <if test="modifierName != null">
        modifier_name = #{modifierName,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.rograndec.feijiayun.chain.business.goods.pharmacy.entity.Incompatibility">
    update saas_incompatibility
    set enterprise_id = #{enterpriseId,jdbcType=BIGINT},
      parent_id = #{parentId,jdbcType=BIGINT},
      varity = #{varity,jdbcType=VARCHAR},
      status = #{status,jdbcType=INTEGER},
      remark = #{remark,jdbcType=VARCHAR},
      creater_id = #{createrId,jdbcType=BIGINT},
      creater_code = #{createrCode,jdbcType=VARCHAR},
      creater_name = #{createrName,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      modifier_id = #{modifierId,jdbcType=BIGINT},
      modifier_code = #{modifierCode,jdbcType=VARCHAR},
      modifier_name = #{modifierName,jdbcType=VARCHAR},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <cache />
  <select id="queryCountByParams" resultType ="java.lang.Long">
    select
    count(1)
    from saas_goods
    where 1=1
    <choose>
      <when test="paramVO.chainType == 1">
        <if test="paramVO.enterpriseId != null">
          and enterprise_id = #{paramVO.enterpriseId}
          and owner_id = #{paramVO.enterpriseId}
        </if>
      </when>
      <when test="paramVO.chainType == 2">
        <if test="paramVO.enterpriseId != null and paramVO.parentId != null">
          and enterprise_id = #{paramVO.parentId}
          and owner_id in (#{paramVO.enterpriseId})
        </if>
      </when>
      <otherwise>
        <if test="paramVO.enterpriseId != null">
          and enterprise_id = #{paramVO.enterpriseId}
        </if>
      </otherwise>
    </choose>
    AND `goods_nature`=0
	AND `status`=1
	AND `valid_flag`=1
    <if test="key != null and key != ''">
      AND (
      INSTR(code ,#{key})
      OR INSTR(barcode ,#{key})
      OR INSTR(pinyin_code ,#{key})
      OR INSTR(name ,#{key})
      OR INSTR(generic_name ,#{key})
      OR INSTR(approval_number ,#{key})
      )
    </if>
  </select>
  <select id="selectGoodsVoByParams" resultMap="SelectGoodsMap">
    select
    id,code,generic_name,dosage_name,dosage_id,specification,manufacturer,manufacturer_id,unit_name,unit_id,owner_id
    from saas_goods
    where 1=1
    <choose>
      <when test="paramVO.chainType == 1">
        <if test="paramVO.enterpriseId != null">
          and enterprise_id = #{paramVO.enterpriseId}
          and owner_id = #{paramVO.enterpriseId}
        </if>
      </when>
      <when test="paramVO.chainType == 2">
        <if test="paramVO.enterpriseId != null and paramVO.parentId != null">
          and enterprise_id = #{paramVO.parentId}
          and owner_id in ( #{paramVO.enterpriseId})
        </if>
      </when>
      <otherwise>
        <if test="paramVO.enterpriseId != null">
          and enterprise_id = #{paramVO.enterpriseId}
        </if>
      </otherwise>
    </choose>
    AND `goods_nature`=0
	AND `status`=1
	AND `valid_flag`=1
    <if test="key != null and key != ''">
      AND (
      INSTR(code ,#{key})
      OR INSTR(barcode ,#{key})
      OR INSTR(pinyin_code ,#{key})
      OR INSTR(name ,#{key})
      OR INSTR(generic_name ,#{key})
      OR INSTR(approval_number ,#{key})
      )
    </if>
    limit #{start},#{pageSize}
  </select>
  <select id="queryCountByParam" resultType ="java.lang.Long">
    select
    COUNT(DISTINCT(si.id))
    FROM
    saas_incompatibility si
    LEFT JOIN saas_incompatibility_goods_one sigo ON sigo.incompatibility_id = si.id
    WHERE 1=1
    <if test="parentId == null">
    AND (si.enterprise_id =  #{enterpriseId}  OR  si.parent_id = #{enterpriseId})
    </if>
    <if test="parentId !=null">
    AND (si.enterprise_id =  #{enterpriseId} OR si.enterprise_id =  #{parentId})
    </if>
    <if test="type == 1">
      <if test="key != null and key != ''">
        AND (INSTR(si.varity ,#{key})
        )
      </if>
    </if>
    <if test="type == 0">
      <if test="key != null and key != ''">
        and concat(',',sigo.goods_ids,',') regexp concat(',(',replace(((SELECT
        GROUP_CONCAT(id)
        FROM
        saas_goods sg
        WHERE
        (
        INSTR(code ,#{key})
        OR INSTR(barcode ,#{key})
        OR INSTR(name ,#{key})
        OR INSTR(generic_name ,#{key})
        OR INSTR(approval_number ,#{key})
        )
        and sg.enterprise_id = #{enterpriseId})),',','|'),'),')
      </if>
    </if>
  </select>
  <select id="IncompatibilityVo3ByParam" resultType="com.rograndec.feijiayun.chain.business.goods.pharmacy.vo.IncompatibilityVO3">
    select
    DISTINCT(si.id) AS id, si.varity, si.status,si.`enterprise_id` AS enterpriseId
    FROM
    saas_incompatibility si
    LEFT JOIN saas_incompatibility_goods_one sigo ON sigo.incompatibility_id = si.id
    WHERE 1=1
    <if test="parentId == null">
    AND (si.enterprise_id =  #{enterpriseId}  OR  si.parent_id = #{enterpriseId})
    </if>
    <if test="parentId !=null">
    AND (si.enterprise_id =  #{enterpriseId} OR si.enterprise_id =  #{parentId})
    </if>
    <if test="type == 1">
      <if test="key != null and key != ''">
        AND (INSTR(si.varity ,#{key}))
      </if>
    </if>
    <if test="type == 0">
      <if test="key != null and key != ''">
        and concat(',',sigo.goods_ids,',') regexp concat(',(',replace(((SELECT
        GROUP_CONCAT(id)
        FROM
        saas_goods sg
        WHERE
        (
        INSTR(code ,#{key})
        OR INSTR(barcode ,#{key})
        OR INSTR(name ,#{key})
        OR INSTR(generic_name ,#{key})
        OR INSTR(approval_number ,#{key})
        )
        and sg.enterprise_id = #{enterpriseId})),',','|'),'),')
      </if>
    </if>
    <if test="orderType != '' and orderType!=null">
      ORDER BY  si.varity ${orderType}
    </if>
    limit #{start},#{pageSize}
  </select>

  <select id="selectByCode" parameterType="hashMap" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from saas_incompatibility
    where varity= #{varityName} and enterprise_id = #{enterpriseId}
    <if test="id!=null">
     AND `id` !=#{id}
    </if>
  </select>
  
  
  <delete id="deleteFormGoodsOne">
	  DELETE FROM 
	  	`saas_incompatibility_goods_one` 
	  WHERE 
	  	`enterprise_id`=#{enterpriseId} 
	  	AND `incompatibility_id`=#{id} 
	  	<if test="list!=null">
	  	AND `id` NOT IN
	  	    <foreach collection="list" item="oneId" index="index" open="(" close=")" separator=",">
	            #{oneId}
	        </foreach>
	  	</if>
  </delete>
  
  <delete id="deleteFormGoodsTwo">
	  DELETE FROM 
	  	`saas_incompatibility_goods_two` 
	  WHERE 
	  	`enterprise_id`=#{enterpriseId} 
	  	AND `incompatibility_id`=#{id}
	  	<if test="list!=null">
	  	AND `id` NOT IN
	  	    <foreach collection="list" item="twoId" index="index" open="(" close=")" separator=",">
	            #{twoId}
	        </foreach>
	  	</if>
  </delete>

  <select id="getIncompatibilityGoodsByGoodsId" parameterType="hashMap" resultMap="IncompatibilityGoodsVOMap">
    select sigt.compatibility_goods_ids as goods_id,sigt.compatibility_result as result
    FROM
    saas_incompatibility si
    LEFT JOIN saas_incompatibility_goods_one sigo
    ON sigo.incompatibility_id = si.id
    left JOIN saas_incompatibility_goods_two sigt
    on sigt.one_id=sigo.id
    where
      (si.enterprise_id =#{enterpriseId}
        <if test="parentId!=null and parentId!=''">
          or si.enterprise_id =#{parentId}
        </if>
      )
      and
      INSTR(sigo.goods_ids ,#{goodsId})
    UNION
    select sigo.goods_ids as goods_id,sigt.compatibility_result as result
    FROM
    saas_incompatibility si
    LEFT JOIN saas_incompatibility_goods_one sigo
    ON sigo.incompatibility_id = si.id
    left JOIN saas_incompatibility_goods_two sigt
    on sigt.one_id=sigo.id
    where
      (si.enterprise_id =#{enterpriseId}
      <if test="parentId!=null and parentId!=''">
        or si.enterprise_id =#{parentId}
      </if>
      )
      and
      INSTR(sigt.compatibility_goods_ids ,#{goodsId})
  </select>
</mapper>