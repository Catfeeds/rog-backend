<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.rograndec.feijiayun.chain.business.retail.payment.dao.SalePaymentMapper">
  <resultMap id="BaseResultMap" type="com.rograndec.feijiayun.chain.business.retail.payment.entity.SalePayment">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="enterprise_id" jdbcType="BIGINT" property="enterpriseId" />
    <result column="parent_id" jdbcType="BIGINT" property="parentId" />
    <result column="order_type" jdbcType="INTEGER" property="orderType" />
    <result column="payment_date" jdbcType="TIMESTAMP" property="paymentDate" />
    <result column="code" jdbcType="VARCHAR" property="code" />
    <result column="base_order_id" jdbcType="BIGINT" property="baseOrderId" />
    <result column="base_order_type" jdbcType="INTEGER" property="baseOrderType" />
    <result column="base_order_code" jdbcType="VARCHAR" property="baseOrderCode" />
    <result column="base_order_date" jdbcType="TIMESTAMP" property="baseOrderDate" />
    <result column="payment_man_id" jdbcType="BIGINT" property="paymentManId" />
    <result column="payment_man_code" jdbcType="VARCHAR" property="paymentManCode" />
    <result column="payment_man_name" jdbcType="VARCHAR" property="paymentManName" />
    <result column="pay_amount_total" jdbcType="DECIMAL" property="payAmountTotal" />
    <result column="real_amount_total" jdbcType="DECIMAL" property="realAmountTotal" />
    <result column="diff_amount_total" jdbcType="DECIMAL" property="diffAmountTotal" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
    <result column="creater_id" jdbcType="BIGINT" property="createrId" />
    <result column="creater_code" jdbcType="VARCHAR" property="createrCode" />
    <result column="creater_name" jdbcType="VARCHAR" property="createrName" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="modifier_id" jdbcType="BIGINT" property="modifierId" />
    <result column="modifier_code" jdbcType="VARCHAR" property="modifierCode" />
    <result column="modifier_name" jdbcType="VARCHAR" property="modifierName" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <resultMap id="StoreAlreadyPageVOMap" type="com.rograndec.feijiayun.chain.business.retail.payment.vo.StoreAlreadyPageVO">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="payment_time" jdbcType="TIMESTAMP" property="paymentTime" />
    <result column="payment_date" jdbcType="VARCHAR" property="paymentDate" />
    <result column="code" jdbcType="VARCHAR" property="salePaymentCode" />
    <result column="creater_name" jdbcType="VARCHAR" property="createrName" />
    <result column="payment_man_name" jdbcType="VARCHAR" property="paymentManName" />
    <result column="opening_time" jdbcType="TIMESTAMP" property="openingTime" />
    <result column="shift_time" jdbcType="TIMESTAMP" property="shiftTime" />
    <result column="pay_amount_total" jdbcType="VARCHAR" property="payAmountTotal" />
    <result column="real_amount_total" jdbcType="TIMESTAMP" property="realAmountTotal" />
    <result column="diff_amount_total" jdbcType="BIGINT" property="diffAmountTotal" />
  </resultMap>
  <resultMap id="HeadquartersAlreadyPageVOMap" type="com.rograndec.feijiayun.chain.business.retail.payment.vo.HeadquartersAlreadyPageVO">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="payment_time" jdbcType="TIMESTAMP" property="paymentTime" />
    <result column="payment_date" jdbcType="VARCHAR" property="paymentDate" />
    <result column="store_code" jdbcType="VARCHAR" property="storeCode" />
    <result column="store_name" jdbcType="VARCHAR" property="storeName" />
    <result column="code" jdbcType="VARCHAR" property="salePaymentCode" />
    <result column="creater_name" jdbcType="VARCHAR" property="createrName" />
    <result column="payment_man_name" jdbcType="VARCHAR" property="paymentManName" />
    <result column="opening_time" jdbcType="TIMESTAMP" property="openingTime" />
    <result column="shift_time" jdbcType="TIMESTAMP" property="shiftTime" />
    <result column="pay_amount_total" jdbcType="VARCHAR" property="payAmountTotal" />
    <result column="real_amount_total" jdbcType="TIMESTAMP" property="realAmountTotal" />
    <result column="diff_amount_total" jdbcType="BIGINT" property="diffAmountTotal" />
  </resultMap>
  <sql id="Base_Column_List">
    id, enterprise_id, parent_id, order_type, payment_date, code, base_order_id, base_order_type, 
    base_order_code, base_order_date, payment_man_id, payment_man_code, payment_man_name, 
    pay_amount_total, real_amount_total, diff_amount_total, status, remark, creater_id, 
    creater_code, creater_name, create_time, modifier_id, modifier_code, modifier_name, 
    update_time
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from saas_sale_payment
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from saas_sale_payment
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.rograndec.feijiayun.chain.business.retail.payment.entity.SalePayment" useGeneratedKeys="true" keyProperty="id">
    insert into saas_sale_payment (id, enterprise_id, parent_id, 
      order_type, payment_date, code, 
      base_order_id, base_order_type, base_order_code, 
      base_order_date, payment_man_id, payment_man_code, 
      payment_man_name, pay_amount_total, real_amount_total, 
      diff_amount_total, status, remark, 
      creater_id, creater_code, creater_name, 
      create_time, modifier_id, modifier_code, 
      modifier_name, update_time)
    values (#{id,jdbcType=BIGINT}, #{enterpriseId,jdbcType=BIGINT}, #{parentId,jdbcType=BIGINT}, 
      #{orderType,jdbcType=INTEGER}, #{paymentDate,jdbcType=TIMESTAMP}, #{code,jdbcType=VARCHAR}, 
      #{baseOrderId,jdbcType=BIGINT}, #{baseOrderType,jdbcType=INTEGER}, #{baseOrderCode,jdbcType=VARCHAR}, 
      #{baseOrderDate,jdbcType=TIMESTAMP}, #{paymentManId,jdbcType=BIGINT}, #{paymentManCode,jdbcType=VARCHAR}, 
      #{paymentManName,jdbcType=VARCHAR}, #{payAmountTotal,jdbcType=DECIMAL}, #{realAmountTotal,jdbcType=DECIMAL}, 
      #{diffAmountTotal,jdbcType=DECIMAL}, #{status,jdbcType=INTEGER}, #{remark,jdbcType=VARCHAR}, 
      #{createrId,jdbcType=BIGINT}, #{createrCode,jdbcType=VARCHAR}, #{createrName,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=TIMESTAMP}, #{modifierId,jdbcType=BIGINT}, #{modifierCode,jdbcType=VARCHAR}, 
      #{modifierName,jdbcType=VARCHAR}, #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.rograndec.feijiayun.chain.business.retail.payment.entity.SalePayment" useGeneratedKeys="true" keyProperty="id">
    insert into saas_sale_payment
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="enterpriseId != null">
        enterprise_id,
      </if>
      <if test="parentId != null">
        parent_id,
      </if>
      <if test="orderType != null">
        order_type,
      </if>
      <if test="paymentDate != null">
        payment_date,
      </if>
      <if test="code != null">
        code,
      </if>
      <if test="baseOrderId != null">
        base_order_id,
      </if>
      <if test="baseOrderType != null">
        base_order_type,
      </if>
      <if test="baseOrderCode != null">
        base_order_code,
      </if>
      <if test="baseOrderDate != null">
        base_order_date,
      </if>
      <if test="paymentManId != null">
        payment_man_id,
      </if>
      <if test="paymentManCode != null">
        payment_man_code,
      </if>
      <if test="paymentManName != null">
        payment_man_name,
      </if>
      <if test="payAmountTotal != null">
        pay_amount_total,
      </if>
      <if test="realAmountTotal != null">
        real_amount_total,
      </if>
      <if test="diffAmountTotal != null">
        diff_amount_total,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="remark != null">
        remark,
      </if>
      <if test="createrId != null">
        creater_id,
      </if>
      <if test="createrCode != null">
        creater_code,
      </if>
      <if test="createrName != null">
        creater_name,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="modifierId != null">
        modifier_id,
      </if>
      <if test="modifierCode != null">
        modifier_code,
      </if>
      <if test="modifierName != null">
        modifier_name,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="enterpriseId != null">
        #{enterpriseId,jdbcType=BIGINT},
      </if>
      <if test="parentId != null">
        #{parentId,jdbcType=BIGINT},
      </if>
      <if test="orderType != null">
        #{orderType,jdbcType=INTEGER},
      </if>
      <if test="paymentDate != null">
        #{paymentDate,jdbcType=TIMESTAMP},
      </if>
      <if test="code != null">
        #{code,jdbcType=VARCHAR},
      </if>
      <if test="baseOrderId != null">
        #{baseOrderId,jdbcType=BIGINT},
      </if>
      <if test="baseOrderType != null">
        #{baseOrderType,jdbcType=INTEGER},
      </if>
      <if test="baseOrderCode != null">
        #{baseOrderCode,jdbcType=VARCHAR},
      </if>
      <if test="baseOrderDate != null">
        #{baseOrderDate,jdbcType=TIMESTAMP},
      </if>
      <if test="paymentManId != null">
        #{paymentManId,jdbcType=BIGINT},
      </if>
      <if test="paymentManCode != null">
        #{paymentManCode,jdbcType=VARCHAR},
      </if>
      <if test="paymentManName != null">
        #{paymentManName,jdbcType=VARCHAR},
      </if>
      <if test="payAmountTotal != null">
        #{payAmountTotal,jdbcType=DECIMAL},
      </if>
      <if test="realAmountTotal != null">
        #{realAmountTotal,jdbcType=DECIMAL},
      </if>
      <if test="diffAmountTotal != null">
        #{diffAmountTotal,jdbcType=DECIMAL},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="createrId != null">
        #{createrId,jdbcType=BIGINT},
      </if>
      <if test="createrCode != null">
        #{createrCode,jdbcType=VARCHAR},
      </if>
      <if test="createrName != null">
        #{createrName,jdbcType=VARCHAR},
      </if>
      now(),
      <if test="modifierId != null">
        #{modifierId,jdbcType=BIGINT},
      </if>
      <if test="modifierCode != null">
        #{modifierCode,jdbcType=VARCHAR},
      </if>
      <if test="modifierName != null">
        #{modifierName,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.rograndec.feijiayun.chain.business.retail.payment.entity.SalePayment">
    update saas_sale_payment
    <set>
      <if test="enterpriseId != null">
        enterprise_id = #{enterpriseId,jdbcType=BIGINT},
      </if>
      <if test="parentId != null">
        parent_id = #{parentId,jdbcType=BIGINT},
      </if>
      <if test="orderType != null">
        order_type = #{orderType,jdbcType=INTEGER},
      </if>
      <if test="paymentDate != null">
        payment_date = #{paymentDate,jdbcType=TIMESTAMP},
      </if>
      <if test="code != null">
        code = #{code,jdbcType=VARCHAR},
      </if>
      <if test="baseOrderId != null">
        base_order_id = #{baseOrderId,jdbcType=BIGINT},
      </if>
      <if test="baseOrderType != null">
        base_order_type = #{baseOrderType,jdbcType=INTEGER},
      </if>
      <if test="baseOrderCode != null">
        base_order_code = #{baseOrderCode,jdbcType=VARCHAR},
      </if>
      <if test="baseOrderDate != null">
        base_order_date = #{baseOrderDate,jdbcType=TIMESTAMP},
      </if>
      <if test="paymentManId != null">
        payment_man_id = #{paymentManId,jdbcType=BIGINT},
      </if>
      <if test="paymentManCode != null">
        payment_man_code = #{paymentManCode,jdbcType=VARCHAR},
      </if>
      <if test="paymentManName != null">
        payment_man_name = #{paymentManName,jdbcType=VARCHAR},
      </if>
      <if test="payAmountTotal != null">
        pay_amount_total = #{payAmountTotal,jdbcType=DECIMAL},
      </if>
      <if test="realAmountTotal != null">
        real_amount_total = #{realAmountTotal,jdbcType=DECIMAL},
      </if>
      <if test="diffAmountTotal != null">
        diff_amount_total = #{diffAmountTotal,jdbcType=DECIMAL},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="createrId != null">
        creater_id = #{createrId,jdbcType=BIGINT},
      </if>
      <if test="createrCode != null">
        creater_code = #{createrCode,jdbcType=VARCHAR},
      </if>
      <if test="createrName != null">
        creater_name = #{createrName,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="modifierId != null">
        modifier_id = #{modifierId,jdbcType=BIGINT},
      </if>
      <if test="modifierCode != null">
        modifier_code = #{modifierCode,jdbcType=VARCHAR},
      </if>
      <if test="modifierName != null">
        modifier_name = #{modifierName,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.rograndec.feijiayun.chain.business.retail.payment.entity.SalePayment">
    update saas_sale_payment
    set enterprise_id = #{enterpriseId,jdbcType=BIGINT},
      parent_id = #{parentId,jdbcType=BIGINT},
      order_type = #{orderType,jdbcType=INTEGER},
      payment_date = #{paymentDate,jdbcType=TIMESTAMP},
      code = #{code,jdbcType=VARCHAR},
      base_order_id = #{baseOrderId,jdbcType=BIGINT},
      base_order_type = #{baseOrderType,jdbcType=INTEGER},
      base_order_code = #{baseOrderCode,jdbcType=VARCHAR},
      base_order_date = #{baseOrderDate,jdbcType=TIMESTAMP},
      payment_man_id = #{paymentManId,jdbcType=BIGINT},
      payment_man_code = #{paymentManCode,jdbcType=VARCHAR},
      payment_man_name = #{paymentManName,jdbcType=VARCHAR},
      pay_amount_total = #{payAmountTotal,jdbcType=DECIMAL},
      real_amount_total = #{realAmountTotal,jdbcType=DECIMAL},
      diff_amount_total = #{diffAmountTotal,jdbcType=DECIMAL},
      status = #{status,jdbcType=INTEGER},
      remark = #{remark,jdbcType=VARCHAR},
      creater_id = #{createrId,jdbcType=BIGINT},
      creater_code = #{createrCode,jdbcType=VARCHAR},
      creater_name = #{createrName,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      modifier_id = #{modifierId,jdbcType=BIGINT},
      modifier_code = #{modifierCode,jdbcType=VARCHAR},
      modifier_name = #{modifierName,jdbcType=VARCHAR},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
  
  <select id="queryAlreadyPaymentByParams" resultType ="java.lang.Long">
    select 
    count(1)
    from saas_sale_payment
    where enterprise_id = #{enterpriseId}
    <if test="startDate != null">  
    	and payment_date >= #{startDate}
    </if>
    <if test="endDate != null">  
    	and date_format(payment_date, '%Y-%m-%d') &lt;= #{endDate}
    </if>
    <if test="salePaymentCode != null">  
    	and code like '%${salePaymentCode}%'
    </if>
    <if test="createrName != null">  
    	and creater_name like '%${createrName}%'
    </if>
    <if test="paymentManName != null">  
    	and payment_man_name like '%${paymentManName}%'
    </if>
    
  </select>	
  
  <select id="selectAlreadyPaymentByParams" resultMap="StoreAlreadyPageVOMap">
    select 
	    p.id, p.payment_date as payment_time, DATE_FORMAT(p.payment_date,'%Y-%m-%d') as payment_date,
	    p.code, p.creater_name, p.payment_man_name, s.opening_time, s.shift_time,
	    p.pay_amount_total, p.real_amount_total, p.diff_amount_total
	    from saas_sale_payment p left join saas_payee_opening_shift s
	    on p.base_order_id = s.id
	    where p.enterprise_id = #{enterpriseId}
    <if test="startDate != null">  
    	and p.payment_date >= #{startDate}
    </if>
    <if test="endDate != null">  
    	and date_format(p.payment_date, '%Y-%m-%d') &lt;= #{endDate}
    </if>
    <if test="salePaymentCode != null and salePaymentCode != ''">  
    	and p.code like '%${salePaymentCode}%'
    </if>
    <if test="createrName != null and createrName != ''">  
    	and p.creater_name like '%${createrName}%'
    </if>
    <if test="paymentManName != null and paymentManName != ''">  
    	and p.payment_man_name like '%${paymentManName}%'
    </if>
    <if test="order != null and order != ''">  
    	order by ${order} ${sort}
    </if>
		limit #{start}, #{pageSize}
  </select>
  
  <select id="querySumAlreadyPaymentByParams" resultMap="StoreAlreadyPageVOMap">
    select 
    sum(pay_amount_total) as pay_amount_total, 
    sum(real_amount_total) as real_amount_total,
    sum(diff_amount_total) as diff_amount_total
    from saas_sale_payment
    where enterprise_id = #{enterpriseId}
    <if test="startDate != null">  
    	and payment_date >= #{startDate}
    </if>
    <if test="endDate != null">  
    	and date_format(payment_date, '%Y-%m-%d') &lt;= #{endDate}
    </if>
    <if test="salePaymentCode != null">  
    	and code like '%${salePaymentCode}%'
    </if>
    <if test="createrName != null">  
    	and creater_name like '%${createrName}%'
    </if>
    <if test="paymentManName != null">  
    	and payment_man_name like '%${paymentManName}%'
    </if>
    
  </select>	
  
  <select id="queryHeadquartersAlreadyPaymentByParams" resultType ="java.lang.Long">
    select 
    count(1)
    from saas_sale_payment p left join saas_enterprise e
		on p.enterprise_id = e.id    
    where p.parent_id = #{enterpriseId}
    and p.enterprise_id in (select id from saas_enterprise where chain_type=1)
    <if test="startDate != null">  
    	and p.payment_date >= #{startDate}
    </if>
    <if test="endDate != null">  
    	and date_format(p.payment_date, '%Y-%m-%d') &lt;= #{endDate}
    </if>
    <if test="chainType != null and chainType != ''">  
    	and e.chain_type = #{chainType}
    </if>
    <if test="storeCode != null and storeCode != ''">  
    	and (e.code like '%${storeCode}%' or e.pinyin like '%${storeCode}%')
    </if>
    <if test="storeName != null and storeName != ''">  
    	and e.name like '%${storeName}%'
    </if>
    <if test="salePaymentCode != null and salePaymentCode != ''">  
    	and p.code like '%${salePaymentCode}%'
    </if>
    <if test="createrName != null and createrName != ''">  
    	and p.creater_name like '%${createrName}%'
    </if>
    <if test="paymentManName != null and paymentManName != ''">  
    	and p.payment_man_name like '%${paymentManName}%'
    </if>
  </select>	
  <!--总店的零售缴款-->
  <select id="selectHeadquartersAlreadyPaymentByParams" resultMap="HeadquartersAlreadyPageVOMap">
    select 
    	p.id, p.payment_date as payment_time, DATE_FORMAT(p.payment_date,'%Y-%m-%d') as payment_date,
    	e.code as store_code, e.name as store_name,
	    p.code, p.creater_name, p.payment_man_name, s.opening_time, s.shift_time,
	    p.pay_amount_total, p.real_amount_total, p.diff_amount_total
    from saas_sale_payment p left join saas_enterprise e
		on p.enterprise_id = e.id
	left join saas_payee_opening_shift s
	    on p.base_order_id = s.id
    where p.parent_id = #{enterpriseId}
    and p.enterprise_id in (select id from saas_enterprise where chain_type=1)
    <if test="startDate != null">
    	and p.payment_date >= #{startDate}
    </if>
    <if test="endDate != null">  
    	and date_format(p.payment_date, '%Y-%m-%d') &lt;= #{endDate}
    </if>
    <if test="chainType != null and chainType != ''">  
    	and e.chain_type = #{chainType}
    </if>
    <if test="storeCode != null and storeCode != ''">  
    	and (e.code like '%${storeCode}%' or e.pinyin like '%${storeCode}%')
    </if>
    <if test="storeName != null and storeName != ''">  
    	and e.name like '%${storeName}%'
    </if>
    <if test="salePaymentCode != null and salePaymentCode != ''">  
    	and p.code like '%${salePaymentCode}%'
    </if>
    <if test="createrName != null and createrName != ''">  
    	and p.creater_name like '%${createrName}%'
    </if>
    <if test="paymentManName != null and paymentManName != ''">  
    	and p.payment_man_name like '%${paymentManName}%'
    </if>
    <if test="order != null and order != ''">  
    	order by ${order} ${sort}
    </if>
		limit #{start}, #{pageSize}
  </select>	
</mapper>