<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.rograndec.feijiayun.chain.business.retail.pricing.dao.SalePricingMapper">
  <resultMap id="BaseResultMap" type="com.rograndec.feijiayun.chain.business.retail.pricing.entity.SalePricing">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="enterprise_id" jdbcType="BIGINT" property="enterpriseId" />
    <result column="parent_id" jdbcType="BIGINT" property="parentId" />
    <result column="order_type" jdbcType="INTEGER" property="orderType" />
    <result column="pricing_date" jdbcType="TIMESTAMP" property="pricingDate" />
    <result column="code" jdbcType="VARCHAR" property="code" />
    <result column="sale_code" jdbcType="VARCHAR" property="saleCode" />
    <result column="member_card_code" jdbcType="VARCHAR" property="memberCardCode" />
    <result column="consumer_name" jdbcType="VARCHAR" property="consumerName" />
    <result column="dose" jdbcType="DECIMAL" property="dose" />
    <result column="quantity_total" jdbcType="DECIMAL" property="quantityTotal" />
    <result column="varieties_quantity" jdbcType="INTEGER" property="varietiesQuantity" />
    <result column="amount_total" jdbcType="DECIMAL" property="amountTotal" />
    <result column="whole_discount" jdbcType="DECIMAL" property="wholeDiscount" />
    <result column="whole_discount_amount" jdbcType="DECIMAL" property="wholeDiscountAmount" />
    <result column="real_amount_total" jdbcType="DECIMAL" property="realAmountTotal" />
    <result column="notax_real_amount_total" jdbcType="DECIMAL" property="notaxRealAmountTotal" />
    <result column="tax_amount_total" jdbcType="DECIMAL" property="taxAmountTotal" />
    <result column="profit_total" jdbcType="DECIMAL" property="profitTotal" />
    <result column="notax_profit_total" jdbcType="DECIMAL" property="notaxProfitTotal" />
    <result column="profit_rate" jdbcType="DECIMAL" property="profitRate" />
    <result column="notax_profit_rate" jdbcType="DECIMAL" property="notaxProfitRate" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
    <result column="creater_id" jdbcType="BIGINT" property="createrId" />
    <result column="creater_code" jdbcType="VARCHAR" property="createrCode" />
    <result column="creater_name" jdbcType="VARCHAR" property="createrName" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="modifier_id" jdbcType="BIGINT" property="modifierId" />
    <result column="modifier_code" jdbcType="VARCHAR" property="modifierCode" />
    <result column="modifier_name" jdbcType="VARCHAR" property="modifierName" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  
  <resultMap id="BaseResultMapVO" type="com.rograndec.feijiayun.chain.business.retail.pricing.vo.SalePricingVO">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="pricing_date" jdbcType="TIMESTAMP" property="pricingDate" />
    <result column="code" jdbcType="VARCHAR" property="code" />
    <result column="creater_name" jdbcType="VARCHAR" property="createrName" />
    <result column="consumer_name" jdbcType="VARCHAR" property="consumerName" />
    <result column="dose" jdbcType="DECIMAL" property="dose" />
    <result column="amount_total" jdbcType="DECIMAL" property="amountTotal" />
    <result column="notax_real_amount_total" jdbcType="DECIMAL" property="notaxRealAmountTotal" />
    <result column="tax_amount_total" jdbcType="DECIMAL" property="taxAmountTotal" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="sale_code" jdbcType="VARCHAR" property="saleCode" />
  </resultMap>
  
  <resultMap id="POSSalePricingResultMap" type="com.rograndec.feijiayun.chain.inf.pos.pricing.vo.POSSalePricingVO">
  	  <result column="id" jdbcType="BIGINT" property="id" />
  	  <result column="renterprise_id" jdbcType="BIGINT" property="enterpriseId" />
  	  <result column="rparent_id" jdbcType="BIGINT" property="parentId" />
  	  <result column="pricing_date" jdbcType="TIMESTAMP" property="pricingDate" />
  	  <result column="code" jdbcType="VARCHAR" property="code" />
  	  <result column="member_card_code" jdbcType="VARCHAR" property="memberCardCode" />
      <result column="consumer_name" jdbcType="VARCHAR" property="consumerName" />
  	  <result column="dose" jdbcType="DECIMAL" property="dose" />
  	  
  	  <result column="quantity_total" jdbcType="DECIMAL" property="quantityTotal" />
      <result column="amount_total" jdbcType="DECIMAL" property="amountTotal" />
      <result column="whole_discount" jdbcType="DECIMAL" property="wholeDiscount" />
      <result column="whole_discount_amount" jdbcType="DECIMAL" property="wholeDiscountAmount" />
      <result column="real_amount_total" jdbcType="DECIMAL" property="realAmountTotal" />
  	  
      <collection property="detailList" ofType="com.rograndec.feijiayun.chain.inf.pos.prescription.vo.PrescriptionDetailVO">
        <result column="detail_id" jdbcType="BIGINT" property="detailId" />
        <result column="shelf_table_id" jdbcType="BIGINT" property="shelfTableId" />
        <result column="shelf_id" jdbcType="BIGINT" property="shelfId" />
        <result column="senterprise_id" jdbcType="BIGINT" property="enterpriseId" />
  	    <result column="sparent_id" jdbcType="BIGINT" property="parentId" />
  	    <result column="goods_id" jdbcType="BIGINT" property="goodsId" />
        <result column="goods_code" jdbcType="VARCHAR" property="goodsCode" />
        <result column="goods_name" jdbcType="VARCHAR" property="goodsName" />
        <result column="goods_generic_name" jdbcType="VARCHAR" property="goodsGenericName" />
        <result column="dosage_name" jdbcType="VARCHAR" property="dosageName" />
        <result column="unit_name" jdbcType="VARCHAR" property="unitName" />
        <result column="goods_specification" jdbcType="VARCHAR" property="goodsSpecification" />
        <result column="manufacturer" jdbcType="VARCHAR" property="manufacturer" />
        <result column="single_dose" jdbcType="DECIMAL" property="singleDose" />
        <result column="quantity" jdbcType="DECIMAL" property="quantity" />
        <result column="unit_price" jdbcType="DECIMAL" property="unitPrice" />
        <result column="line_discount" jdbcType="DECIMAL" property="lineDiscount" />
        <result column="amount" jdbcType="DECIMAL" property="amount" />
        <result column="lot_number" jdbcType="VARCHAR" property="lotNumber" />
        <result column="product_date" jdbcType="TIMESTAMP" property="productDate" />
        <result column="valid_date" jdbcType="TIMESTAMP" property="validDate" />
        
        <result column="shelf_id" jdbcType="BIGINT" property="shelfId" />
        <result column="shelf_name" jdbcType="VARCHAR" property="shelfName" />
      </collection>
  </resultMap>
  
  <sql id="Base_Column_List">
    id, enterprise_id, parent_id, order_type, pricing_date, code,sale_code, member_card_code, consumer_name, 
    dose, quantity_total, varieties_quantity, amount_total, whole_discount, whole_discount_amount, 
    real_amount_total, notax_real_amount_total, tax_amount_total, profit_total, notax_profit_total, 
    profit_rate, notax_profit_rate, status, remark, creater_id, creater_code, creater_name, 
    create_time, modifier_id, modifier_code, modifier_name, update_time
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from saas_sale_pricing
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from saas_sale_pricing
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.rograndec.feijiayun.chain.business.retail.pricing.entity.SalePricing">
    insert into saas_sale_pricing (id, enterprise_id, parent_id, 
      order_type, pricing_date, code, 
      member_card_code, consumer_name, dose, 
      quantity_total, varieties_quantity, amount_total, 
      whole_discount, whole_discount_amount, real_amount_total, 
      notax_real_amount_total, tax_amount_total, profit_total, 
      notax_profit_total, profit_rate, notax_profit_rate, 
      status, remark, creater_id, 
      creater_code, creater_name, create_time, 
      modifier_id, modifier_code, modifier_name, 
      update_time)
    values (#{id,jdbcType=BIGINT}, #{enterpriseId,jdbcType=BIGINT}, #{parentId,jdbcType=BIGINT}, 
      #{orderType,jdbcType=INTEGER}, #{pricingDate,jdbcType=TIMESTAMP}, #{code,jdbcType=VARCHAR}, 
      #{memberCardCode,jdbcType=VARCHAR}, #{consumerName,jdbcType=VARCHAR}, #{dose,jdbcType=DECIMAL}, 
      #{quantityTotal,jdbcType=DECIMAL}, #{varietiesQuantity,jdbcType=INTEGER}, #{amountTotal,jdbcType=DECIMAL}, 
      #{wholeDiscount,jdbcType=DECIMAL}, #{wholeDiscountAmount,jdbcType=DECIMAL}, #{realAmountTotal,jdbcType=DECIMAL}, 
      #{notaxRealAmountTotal,jdbcType=DECIMAL}, #{taxAmountTotal,jdbcType=DECIMAL}, #{profitTotal,jdbcType=DECIMAL}, 
      #{notaxProfitTotal,jdbcType=DECIMAL}, #{profitRate,jdbcType=DECIMAL}, #{notaxProfitRate,jdbcType=DECIMAL}, 
      #{status,jdbcType=INTEGER}, #{remark,jdbcType=VARCHAR}, #{createrId,jdbcType=BIGINT}, 
      #{createrCode,jdbcType=VARCHAR}, #{createrName,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, 
      #{modifierId,jdbcType=BIGINT}, #{modifierCode,jdbcType=VARCHAR}, #{modifierName,jdbcType=VARCHAR}, 
      #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.rograndec.feijiayun.chain.business.retail.pricing.entity.SalePricing" useGeneratedKeys="true" keyProperty="id">
    insert into saas_sale_pricing
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="enterpriseId != null">
        enterprise_id,
      </if>
      <if test="parentId != null">
        parent_id,
      </if>
      <if test="orderType != null">
        order_type,
      </if>
      <if test="pricingDate != null">
        pricing_date,
      </if>
      <if test="code != null">
        code,
      </if>
      <if test="saleCode != null">
        sale_code,
      </if>
      <if test="memberCardCode != null">
        member_card_code,
      </if>
      <if test="consumerName != null">
        consumer_name,
      </if>
      <if test="dose != null">
        dose,
      </if>
      <if test="quantityTotal != null">
        quantity_total,
      </if>
      <if test="varietiesQuantity != null">
        varieties_quantity,
      </if>
      <if test="amountTotal != null">
        amount_total,
      </if>
      <if test="wholeDiscount != null">
        whole_discount,
      </if>
      <if test="wholeDiscountAmount != null">
        whole_discount_amount,
      </if>
      <if test="realAmountTotal != null">
        real_amount_total,
      </if>
      <if test="notaxRealAmountTotal != null">
        notax_real_amount_total,
      </if>
      <if test="taxAmountTotal != null">
        tax_amount_total,
      </if>
      <if test="profitTotal != null">
        profit_total,
      </if>
      <if test="notaxProfitTotal != null">
        notax_profit_total,
      </if>
      <if test="profitRate != null">
        profit_rate,
      </if>
      <if test="notaxProfitRate != null">
        notax_profit_rate,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="remark != null">
        remark,
      </if>
      <if test="createrId != null">
        creater_id,
      </if>
      <if test="createrCode != null">
        creater_code,
      </if>
      <if test="createrName != null">
        creater_name,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="modifierId != null">
        modifier_id,
      </if>
      <if test="modifierCode != null">
        modifier_code,
      </if>
      <if test="modifierName != null">
        modifier_name,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="enterpriseId != null">
        #{enterpriseId,jdbcType=BIGINT},
      </if>
      <if test="parentId != null">
        #{parentId,jdbcType=BIGINT},
      </if>
      <if test="orderType != null">
        #{orderType,jdbcType=INTEGER},
      </if>
      <if test="pricingDate != null">
        #{pricingDate,jdbcType=TIMESTAMP},
      </if>
      <if test="code != null">
        #{code,jdbcType=VARCHAR},
      </if>
      <if test="saleCode != null">
         #{saleCode,jdbcType=VARCHAR},
      </if>
      <if test="memberCardCode != null">
        #{memberCardCode,jdbcType=VARCHAR},
      </if>
      <if test="consumerName != null">
        #{consumerName,jdbcType=VARCHAR},
      </if>
      <if test="dose != null">
        #{dose,jdbcType=DECIMAL},
      </if>
      <if test="quantityTotal != null">
        #{quantityTotal,jdbcType=DECIMAL},
      </if>
      <if test="varietiesQuantity != null">
        #{varietiesQuantity,jdbcType=INTEGER},
      </if>
      <if test="amountTotal != null">
        #{amountTotal,jdbcType=DECIMAL},
      </if>
      <if test="wholeDiscount != null">
        #{wholeDiscount,jdbcType=DECIMAL},
      </if>
      <if test="wholeDiscountAmount != null">
        #{wholeDiscountAmount,jdbcType=DECIMAL},
      </if>
      <if test="realAmountTotal != null">
        #{realAmountTotal,jdbcType=DECIMAL},
      </if>
      <if test="notaxRealAmountTotal != null">
        #{notaxRealAmountTotal,jdbcType=DECIMAL},
      </if>
      <if test="taxAmountTotal != null">
        #{taxAmountTotal,jdbcType=DECIMAL},
      </if>
      <if test="profitTotal != null">
        #{profitTotal,jdbcType=DECIMAL},
      </if>
      <if test="notaxProfitTotal != null">
        #{notaxProfitTotal,jdbcType=DECIMAL},
      </if>
      <if test="profitRate != null">
        #{profitRate,jdbcType=DECIMAL},
      </if>
      <if test="notaxProfitRate != null">
        #{notaxProfitRate,jdbcType=DECIMAL},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="createrId != null">
        #{createrId,jdbcType=BIGINT},
      </if>
      <if test="createrCode != null">
        #{createrCode,jdbcType=VARCHAR},
      </if>
      <if test="createrName != null">
        #{createrName,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="modifierId != null">
        #{modifierId,jdbcType=BIGINT},
      </if>
      <if test="modifierCode != null">
        #{modifierCode,jdbcType=VARCHAR},
      </if>
      <if test="modifierName != null">
        #{modifierName,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.rograndec.feijiayun.chain.business.retail.pricing.entity.SalePricing">
    update saas_sale_pricing
    <set>
      <if test="enterpriseId != null">
        enterprise_id = #{enterpriseId,jdbcType=BIGINT},
      </if>
      <if test="parentId != null">
        parent_id = #{parentId,jdbcType=BIGINT},
      </if>
      <if test="orderType != null">
        order_type = #{orderType,jdbcType=INTEGER},
      </if>
      <if test="pricingDate != null">
        pricing_date = #{pricingDate,jdbcType=TIMESTAMP},
      </if>
      <if test="code != null">
        code = #{code,jdbcType=VARCHAR},
      </if>
      <if test="saleCode != null">
        sale_code = #{saleCode,jdbcType=VARCHAR},
      </if>
      <if test="memberCardCode != null">
        member_card_code = #{memberCardCode,jdbcType=VARCHAR},
      </if>
      <if test="consumerName != null">
        consumer_name = #{consumerName,jdbcType=VARCHAR},
      </if>
      <if test="dose != null">
        dose = #{dose,jdbcType=DECIMAL},
      </if>
      <if test="quantityTotal != null">
        quantity_total = #{quantityTotal,jdbcType=DECIMAL},
      </if>
      <if test="varietiesQuantity != null">
        varieties_quantity = #{varietiesQuantity,jdbcType=INTEGER},
      </if>
      <if test="amountTotal != null">
        amount_total = #{amountTotal,jdbcType=DECIMAL},
      </if>
      <if test="wholeDiscount != null">
        whole_discount = #{wholeDiscount,jdbcType=DECIMAL},
      </if>
      <if test="wholeDiscountAmount != null">
        whole_discount_amount = #{wholeDiscountAmount,jdbcType=DECIMAL},
      </if>
      <if test="realAmountTotal != null">
        real_amount_total = #{realAmountTotal,jdbcType=DECIMAL},
      </if>
      <if test="notaxRealAmountTotal != null">
        notax_real_amount_total = #{notaxRealAmountTotal,jdbcType=DECIMAL},
      </if>
      <if test="taxAmountTotal != null">
        tax_amount_total = #{taxAmountTotal,jdbcType=DECIMAL},
      </if>
      <if test="profitTotal != null">
        profit_total = #{profitTotal,jdbcType=DECIMAL},
      </if>
      <if test="notaxProfitTotal != null">
        notax_profit_total = #{notaxProfitTotal,jdbcType=DECIMAL},
      </if>
      <if test="profitRate != null">
        profit_rate = #{profitRate,jdbcType=DECIMAL},
      </if>
      <if test="notaxProfitRate != null">
        notax_profit_rate = #{notaxProfitRate,jdbcType=DECIMAL},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="createrId != null">
        creater_id = #{createrId,jdbcType=BIGINT},
      </if>
      <if test="createrCode != null">
        creater_code = #{createrCode,jdbcType=VARCHAR},
      </if>
      <if test="createrName != null">
        creater_name = #{createrName,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="modifierId != null">
        modifier_id = #{modifierId,jdbcType=BIGINT},
      </if>
      <if test="modifierCode != null">
        modifier_code = #{modifierCode,jdbcType=VARCHAR},
      </if>
      <if test="modifierName != null">
        modifier_name = #{modifierName,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.rograndec.feijiayun.chain.business.retail.pricing.entity.SalePricing">
    update saas_sale_pricing
    set enterprise_id = #{enterpriseId,jdbcType=BIGINT},
      parent_id = #{parentId,jdbcType=BIGINT},
      order_type = #{orderType,jdbcType=INTEGER},
      pricing_date = #{pricingDate,jdbcType=TIMESTAMP},
      code = #{code,jdbcType=VARCHAR},
      member_card_code = #{memberCardCode,jdbcType=VARCHAR},
      consumer_name = #{consumerName,jdbcType=VARCHAR},
      dose = #{dose,jdbcType=DECIMAL},
      quantity_total = #{quantityTotal,jdbcType=DECIMAL},
      varieties_quantity = #{varietiesQuantity,jdbcType=INTEGER},
      amount_total = #{amountTotal,jdbcType=DECIMAL},
      whole_discount = #{wholeDiscount,jdbcType=DECIMAL},
      whole_discount_amount = #{wholeDiscountAmount,jdbcType=DECIMAL},
      real_amount_total = #{realAmountTotal,jdbcType=DECIMAL},
      notax_real_amount_total = #{notaxRealAmountTotal,jdbcType=DECIMAL},
      tax_amount_total = #{taxAmountTotal,jdbcType=DECIMAL},
      profit_total = #{profitTotal,jdbcType=DECIMAL},
      notax_profit_total = #{notaxProfitTotal,jdbcType=DECIMAL},
      profit_rate = #{profitRate,jdbcType=DECIMAL},
      notax_profit_rate = #{notaxProfitRate,jdbcType=DECIMAL},
      status = #{status,jdbcType=INTEGER},
      remark = #{remark,jdbcType=VARCHAR},
      creater_id = #{createrId,jdbcType=BIGINT},
      creater_code = #{createrCode,jdbcType=VARCHAR},
      creater_name = #{createrName,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      modifier_id = #{modifierId,jdbcType=BIGINT},
      modifier_code = #{modifierCode,jdbcType=VARCHAR},
      modifier_name = #{modifierName,jdbcType=VARCHAR},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
	
  <!-- 获取划价主表数据 -->	
  <select id="findByEnterpriseIdSalePricing" parameterType="com.rograndec.feijiayun.chain.business.retail.pricing.vo.SalePricingParamVO" resultMap="BaseResultMapVO">
    select 
    <include refid="Base_Column_List" />
    from saas_sale_pricing
    where enterprise_id = #{enterpriseId}
    
    <if test="status != null and status != '' ">
    	and status = #{status}
    </if>
    <if test="(startTime != null and endTime != null) and (startTime != '' and endTime != '')">
    	and DATE_FORMAT(pricing_date,'%Y-%m-%d') between #{startTime} and #{endTime}
    </if>
    <if test="code != null and code != '' ">
    	and code like CONCAT('%',TRIM(#{code}),'%')
    </if>
    <if test="createrName != null and createrName != '' ">
    	and creater_name like CONCAT('%',TRIM(#{createrName}),'%')
    </if>
    <if test="consumerName != null and consumerName != '' ">
    	and consumer_name like CONCAT('%',TRIM(#{consumerName}),'%')
    </if>
    <if test="(order != null and sort != null) and (order != '' and sort != '') ">
      ORDER BY ${order} ${sort}
    </if>
    <if test="(order == null and sort == null) or (order == '' and sort == '')">
      ORDER BY id desc
    </if>
    <if test="pageSize != null and pageSize != '' ">
      limit #{start},#{pageSize}
    </if>
   </select> 
    
   <select id="countEnterpriseIdSalePricing" parameterType="com.rograndec.feijiayun.chain.business.retail.pricing.vo.SalePricingParamVO" resultType ="java.lang.Integer">
    select 
    count(1)
    from saas_sale_pricing
    where enterprise_id = #{enterpriseId}
    
    <if test="status != null and status != '' ">
    	and status = #{status}
    </if>
    <if test="(startTime != null and endTime != null) and (startTime != '' and endTime != '')">
    	and DATE_FORMAT(pricing_date,'%Y-%m-%d') between #{startTime} and #{endTime}
    </if>
    <if test="code != null and code != '' ">
    	and code like CONCAT('%',TRIM(#{code}),'%')
    </if>
    <if test="createrName != null and createrName != '' ">
    	and creater_name like CONCAT('%',TRIM(#{createrName}),'%')
    </if>
    <if test="consumerName != null and consumerName != '' ">
    	and consumer_name like CONCAT('%',TRIM(#{consumerName}),'%')
    </if>
    
  </select>	
  
  <select id="countSalePricingData" parameterType="com.rograndec.feijiayun.chain.business.retail.pricing.vo.SalePricingParamVO" resultType ="com.rograndec.feijiayun.chain.business.retail.pricing.vo.SalePricingTotalVO">
    select 
    sum(quantity_total) as quantityTotal,
    sum(amount_total) as amountTotal,
    sum(notax_real_amount_total) as notaxRealAmountTotal,
    sum(tax_amount_total) as taxAmountTotal
    from saas_sale_pricing
    where enterprise_id = #{enterpriseId}
    
    <if test="status != null and status != '' ">
    	and status = #{status}
    </if>
    <if test="(startTime != null and endTime != null) and (startTime != '' and endTime != '')">
    	and DATE_FORMAT(pricing_date,'%Y-%m-%d') between #{startTime} and #{endTime}
    </if>
    <if test="code != null and code != '' ">
    	and code like CONCAT('%',TRIM(#{code}),'%')
    </if>
    <if test="createrName != null and createrName != '' ">
    	and creater_name like CONCAT('%',TRIM(#{createrName}),'%')
    </if>
    <if test="consumerName != null and consumerName != '' ">
    	and consumer_name like CONCAT('%',TRIM(#{consumerName}),'%')
    </if>
    
  </select>
  
  <!-- 查看获取主单数据 -->
  <select id="findByIdSalePricing" parameterType="java.lang.Long" resultType="com.rograndec.feijiayun.chain.business.retail.pricing.vo.SalePricingViewVO">
    select 
    id,
    order_type AS orderType,
    pricing_date AS pricingDate,
    CODE,
    creater_name AS createrName,
    creater_id as createrId,
    member_card_code AS memberCardCode,
    consumer_name AS consumerName,
    dose,
    quantity_total AS quantityTotal,
    varieties_quantity AS varietiesQuantity,
    amount_total AS amountTotal,
    whole_discount AS wholeDiscount,
    whole_discount_amount AS wholeDiscountAmount,
    real_amount_total AS realAmountTotal,
    notax_real_amount_total AS notaxRealAmountTotal,
    tax_amount_total AS taxAmountTotal,
    profit_total AS profitTotal,
    notax_profit_total AS notaxProfitTotal,
    profit_rate AS profitRate,
    notax_profit_rate AS notaxProfitRate
    from saas_sale_pricing
    where id = #{id}
  </select>
  <!--划价单搜索商品-->
  <select id="selectGoods" resultType="com.rograndec.feijiayun.chain.business.retail.pricing.vo.SelectPricingGoodsVO">
	  SELECT 
	  goods.id AS goodsId,
	  goods.code AS goodsCode,
	  goods.name as goodsName,
	  goods.barcode as barcode,
	  goods.generic_name AS goodsGenericName,
	  goods.specification AS goodsSpecification,
	  goods.manufacturer_id AS manufacturerId,
	  goods.manufacturer AS manufacturer,
	  goods.place as goodsPlace,
	  goods.unit_id as unitId,
	  goods.unit_id as unitName,
	  goods.approval_number as approvalNumber,
	  goods.dosage_id as dosageId,
	  goods.dosage_name as dosageName,
	  lot.lot_num as lotNumber,
	  lot.id as lotNumberId,
      lot.product_date as productDate,
      lot.valid_until as validUntil,
	  pod.retail_price AS retailPrice,
	  pod.member_price AS memberPrice,
      str.tax_rate AS taxRate,
      str.id as taxRateId,
	  st.usable_quantity as usableQuantity,
	  st.shelf_id as shelfId,
	  st.shelf_name as shelfName,
	  st.shelf_status_desc shelfStatusDesc,
	  st.id as stId
	  
	  FROM
	  saas_stock st
	  JOIN saas_goods goods
	  	ON goods.id = st.goods_id 
	  	AND goods.`status`=1 AND goods.valid_flag=1
	  	AND goods.approve_status=1
	  	AND business_variety =0
	  	AND goods.goods_attribute IN (1,2)
	  LEFT JOIN saas_lot_number lot 
	  	ON goods.id = lot.goods_id and lot.enterprise_id = st.enterprise_id
	  LEFT JOIN saas_price_order_detail pod 
		ON goods.id = pod.goods_id and pod.status = 1 AND st.enterprise_id = pod.enterprise_id
	  LEFT JOIN saas_goods_tax_rate str ON pod.`sale_tax_rate_id` = str.id	
	  LEFT JOIN saas_warehouse_shelf ws ON ws.id=st.shelf_id
      LEFT JOIN saas_warehouse_cargo_area wca ON wca.id=ws.cargo_area_id
	  WHERE st.enterprise_id =#{enterpriseId}
	  AND st.`lot_id` = lot.id
	  AND st.inventory_status=0
	  AND wca.job_type=0
      AND wca.job_area=0
      AND date_format(lot.valid_until, '%Y-%m-%d') >= date_format(now(), '%Y-%m-%d')

    <if test="param != null and param != ''">
        AND (
            INSTR(goods.name ,#{param})
            OR INSTR(goods.code ,#{param})
            OR INSTR(goods.pinyin_code ,#{param})
            OR INSTR(goods.approval_number ,#{param})
            OR INSTR(goods.barcode ,#{param})
            OR INSTR(goods.generic_name ,#{param})
        )
      </if>

	  GROUP BY st.goods_id,lot.id,st.shelf_id
	  HAVING st.usable_quantity > 0 
	  <!-- <if test="pageSize != null and pageSize != '' ">
      limit #{pageNo},#{pageSize}
      </if> -->
      limit 100
  </select>

  <!--<select id="selectGoodsByParam" parameterType="com.rograndec.feijiayun.chain.common.vo.GoodsParamStockVO" resultType="com.rograndec.feijiayun.chain.business.retail.pricing.vo.SelectPricingGoodsVO">
	  SELECT
	  goods.id AS goodsId,
	  goods.code AS goodsCode,
	  goods.name as goodsName,
	  goods.barcode as barcode,
	  goods.generic_name AS goodsGenericName,
	  goods.specification AS goodsSpecification,
	  goods.manufacturer_id AS manufacturerId,
	  goods.manufacturer AS manufacturer,
	  goods.place as goodsPlace,
	  goods.unit_id as unitId,
	  goods.unit_id as unitName,
	  goods.approval_number as approvalNumber,
	  goods.dosage_id as dosageId,
	  goods.dosage_name as dosageName,
	  lot.lot_num as lotNumber,
	  lot.id as lotNumberId,
	  lot.product_date as productDate,
	  lot.valid_until as validUntil,
	  pod.retail_price AS retailPrice,
	  pod.member_price AS memberPrice,
	  pod.sale_tax_rate AS taxRate,
	  pod.sale_tax_rate_id as taxRateId,
	  st.usable_quantity as usableQuantity,
      st.lock_quantity  as lockQuantity,
	  st.shelf_id as shelfId,
	  st.shelf_name as shelfName,
	  st.id as stId,
      st.shelf_status_desc as shelfStatusDesc

	  FROM
	  saas_stock st
	  LEFT JOIN saas_goods goods
	  ON goods.id = st.goods_id
	  AND goods.`status`=1 AND valid_flag=1
	  LEFT JOIN saas_lot_number lot
	  ON goods.id = lot.goods_id and lot.enterprise_id = st.enterprise_id
	  RIGHT JOIN saas_price_order_detail pod
	  ON goods.id = pod.goods_id and pod.status = 1 AND st.enterprise_id = pod.enterprise_id
	  WHERE st.enterprise_id =#{enterpriseId}
	  AND st.`lot_id` = lot.id
      AND date_format(lot.valid_until, '%Y-%m-%d') >= date_format(now(), '%Y-%m-%d')

	  <if test="param != null and param != ''">
        AND (
            INSTR(goods.name ,#{param})
            OR INSTR(goods.code ,#{param})
            OR INSTR(goods.pinyin_code ,#{param})
            OR INSTR(goods.approval_number ,#{param})
            OR INSTR(goods.barcode ,#{param})
            OR INSTR(goods.generic_name ,#{param})
        )
      </if>
      <if test="isInChargeDrug==1">
        AND  goods.in_charge_drug is not null
      </if>
      <if test="lockQuantity==1">
        AND  st.lock_quantity>0
      </if>
	  GROUP BY st.goods_id,lot.id,st.shelf_id
      <if test="lockQuantity==0">
        HAVING st.usable_quantity > 0
      </if>
  </select>-->



  <select id="countSelectGoods" resultType="java.lang.Integer">
	  select count(1) from (
	  	SELECT 
		  goods.id
		  FROM
		  saas_goods goods 
		  LEFT JOIN saas_stock st
		  	ON goods.id = st.goods_id and goods.enterprise_id = st.enterprise_id
		  LEFT JOIN saas_lot_number lot 
		  	ON goods.id = lot.goods_id
		  RIGHT JOIN saas_price_order_detail pod 
			ON goods.id = pod.goods_id and pod.status = 1 AND goods.enterprise_id = pod.enterprise_id
		  WHERE goods.enterprise_id =#{enterpriseId}
		  AND st.`lot_id` = lot.id
		  <if test="param != null and param != ''">
		    AND (
	            INSTR(goods.name ,#{param})
	            OR INSTR(goods.code ,#{param})
	            OR INSTR(goods.pinyin_code ,#{param})
	            OR INSTR(goods.approval_number ,#{param})
	            OR INSTR(goods.barcode ,#{param})
	            OR INSTR(goods.generic_name ,#{param})
        	)
		  </if>
		  
		  GROUP BY st.goods_id,lot.id,st.shelf_id
	  ) total
  </select>
  
  
  <!-- 查询商品的批号有库存的货位 -->
  <select id="selectGoodsLotShelf" resultType="com.rograndec.feijiayun.chain.business.retail.pricing.vo.SelectPricingGoodsLotShelfVO">
  	SELECT 
	  lot.`goods_id` AS goodsId,
	  lot.lot_num AS lotNumber,
	  lot.id AS lotId,
	  lot.product_date AS productDate,
	  lot.valid_until AS validUntil,
	  stock.usable_quantity AS usableQuantity,
	  stock.shelf_id AS shelfId,
	  stock.shelf_name AS shelfName,
	  stock.id AS stId,
	  stock.shelf_status_desc shelfStatusDesc
	FROM
        saas_stock stock
        left join saas_lot_number lot on lot.id=stock.lot_id
        left join saas_warehouse_shelf ws on ws.id=stock.shelf_id
        left join saas_warehouse_cargo_area wca on wca.id=ws.cargo_area_id
        WHERE
        stock.enterprise_id = #{enterpriseId}
        AND stock.goods_id = lot.goods_id
        AND stock.goods_id = #{goodsId}
        and stock.inventory_status=0
        AND stock.usable_quantity>0
        AND date_format(lot.valid_until, '%Y-%m-%d') >= date_format(now(), '%Y-%m-%d')

        AND wca.job_type=0
        and wca.job_area=0
	ORDER BY lot.valid_until , lot.id  DESC
  </select>
  
  <!-- 查询商品的批号有库存的货位 -->
  <select id="selectGoodsLotShelfId" resultType="com.rograndec.feijiayun.chain.business.retail.pricing.vo.SelectPricingGoodsLotShelfVO">
  	SELECT 
	  lot.`goods_id` AS goodsId,
	  lot.lot_num AS lotNumber,
	  lot.id AS lotId,
	  lot.product_date AS productDate,
	  lot.valid_until AS validUntil,
	  stock.usable_quantity AS usableQuantity,
	  stock.shelf_id AS shelfId,
	  stock.shelf_name AS shelfName,
	  stock.id AS stId,
	  stock.shelf_status_desc shelfStatusDesc
	FROM
        saas_stock stock
        left join saas_lot_number lot on lot.id=stock.lot_id
        left join saas_warehouse_shelf ws on ws.id=stock.shelf_id
        left join saas_warehouse_cargo_area wca on wca.id=ws.cargo_area_id
        WHERE
        stock.enterprise_id = #{enterpriseId}
        AND stock.goods_id = lot.goods_id
        AND stock.goods_id = #{goodsId}
        AND stock.shelf_id = #{shelfId}
        and stock.inventory_status=0
        AND stock.usable_quantity>0
        AND wca.job_type=0
        and wca.job_area=0
	ORDER BY lot.id DESC 
  </select>
  
  <select id="selectMemberType" resultType="com.rograndec.feijiayun.chain.business.retail.pricing.vo.SelectMemberTypeVO">
  	SELECT 
	  smi.id,
	  smi.card_code as cardCode,
	  smi.member_name as memberName,
	  smi.mobile_phone as mobilePhone,
	  smct.price_strategy as priceStrategy,
	  smct.discount_strategy as discountStrategy
	FROM
	  saas_member_info smi 
	  INNER JOIN saas_member_card_type smct 
	  ON smct.id = smi.card_type_id 
	WHERE smi.enterprise_id = #{enterpriseId}
	<if test="param != null and param != ''">
		    and (
		    smi.member_name like concat('%', #{param},'%') 
		    or smi.card_code like concat('%', #{param},'%')
		    or smi.mobile_phone like concat('%', #{param},'%')
		    )
	</if>
  </select>
  
  <select id="selectGoodsMemberPrice" resultType="com.rograndec.feijiayun.chain.business.retail.pricing.vo.SelectGoodsMemberPrice">
  	SELECT 
	  pod.id,
	  pod.goods_id as goodsId,
	  pod.retail_price as retailPrice,
	  pod.member_price as memberPrice
	FROM
	  saas_price_order_detail pod
	WHERE pod.enterprise_id = #{enterpriseId}
	and pod.status = 1 and pod.goods_id = #{goodsId}
	ORDER BY update_time DESC LIMIT 1
  </select>
  
  <select id="selectSalePricingDataByEnterpriseId" resultMap="POSSalePricingResultMap">
    select 
    	r.id, r.enterprise_id as renterprise_id, r.parent_id as rparent_id, r.pricing_date, r.member_card_code,
    	r.code, r.consumer_name, r.dose, 
    	r.quantity_total, r.amount_total, r.whole_discount, r.whole_discount_amount, r.real_amount_total,
    	d.id as detail_id, s.id as shelf_table_id, s.enterprise_id as senterprise_id,
    	s.parent_id as sparent_id, d.goods_id, d.goods_code, d.goods_name,
    	d.goods_generic_name, d.dosage_name, d.unit_name, d.goods_specification,
    	d.manufacturer, d.single_dose, d.quantity, d.unit_price,
    	d.line_discount, d.amount, s.lot_number, s.product_date,
    	s.valid_date, s.shelf_id, s.shelf_name
    from saas_sale_pricing_shelf s 
    	left join saas_sale_pricing_detail d
    		on s.pricing_dtl_id = d.id
    	left join saas_sale_pricing r
    		on s.pricing_id = r.id
    where r.enterprise_id = #{enterpriseId,jdbcType=BIGINT}
    	and r.status = #{status}
  </select>
    
   <select id="getSalePricingReportList" parameterType="com.rograndec.feijiayun.chain.business.report.quality.retail.vo.RequestSalePricingVO" resultType="com.rograndec.feijiayun.chain.business.report.quality.retail.vo.SalePricingShelfVO">
		SELECT shelf.`id`,e.`id` AS enterpriseId,e.`code` AS enterpriseCode,e.`name` AS enterpriseName,
		pri.`code` AS pricingCode,pri.`pricing_date` AS pricingDate,pri.`creater_id` AS createrId,pri.`creater_name` AS createrName,
		pri.`member_card_code` AS memberCardCode,pri.`consumer_name` AS consumerName,pri.`sale_code` AS saleCode,
		detail.`goods_id` AS goodsId,detail.`goods_code` AS goodsCode,detail.`barcode` AS barcode,detail.`goods_name` AS goodsName,
		detail.`goods_generic_name` AS goodsGenericName,detail.`dosage_id` AS dosageId,detail.`dosage_name` AS dosageName,
		detail.`unit_id` AS unitId,detail.`unit_name` AS unitName,detail.`goods_specification` AS goodsSpecification,
		detail.`manufacturer_id` AS manufacturerId,detail.`manufacturer` AS manufacturer,detail.`goods_place` AS goodsPlace,
		detail.`approval_number` AS approvalNumber,
		shelf.lot_id AS lotId,shelf.`lot_number` AS lotNumber,shelf.`product_date` AS productDate,
		shelf.`valid_date` AS validUntil,shelf.`shelf_id` AS shelfId,shelf.`shelf_name` AS shelfName,
		cargo.`job_type` AS jobType,cargo.`job_area` AS jobArea,
		pri.`dose` AS dose,shelf.`single_dose` AS singleDose,shelf.`total_quantity` AS totalQuantity,
		shelf.`unit_price` AS unitPrice,shelf.`line_discount` AS lineDiscount,shelf.`amount` AS amount,
		shelf.`whole_discount` AS wholeDiscount,shelf.`line_discount_amount` AS lineDiscountAmount,shelf.`real_price` AS realPrice,
		shelf.`real_amount` AS realAmount,shelf.`tax_rate_id` AS taxRateId,shelf.`tax_rate` AS taxRate,shelf.`notax_real_price` AS notaxRealPrice,
		shelf.`notax_real_amount` AS notaxRealAmount,shelf.`tax_amount` AS taxAmount,shelf.`status` AS `status`,
		goods.`business_variety` AS businessVariety,cate.id AS categoryId,
		cate.name AS categoryName,goods.`goods_attribute` AS goodsAttribute,goods.`prescription_drug` AS prescriptionDrug,
		goods.`otc_type` AS otcType,goods.`domestic_import` AS domesticImport, goods.`management_scope_id` AS managemenScopeId,
		goods.`management_scope_name` AS managementScopeName,goods.`special_drug` AS specialDrug,
		goods.`in_charge_drug` AS inChargeDrug, goods.`limit_quantity` AS limitQuantity,
		goods.`storage_temp` AS storageTemp,
		goods.`storage_condition_name` AS storageConditionName,goods.`quality_period` AS qualityPeriod, 
		CASE goods.`quality_period_unit` WHEN 0 THEN '天' WHEN 1 THEN '月' WHEN 2 THEN '年' END AS qualityPeriodUnit
		,goods.`spirit_drug_type` AS spiritDrugType,goods.`formulation_type` AS formulationType,goods.`cosmetics`
		FROM `saas_sale_pricing_shelf` shelf 
		LEFT JOIN `saas_sale_pricing_detail` detail ON detail.`id`=shelf.`pricing_dtl_id`
		LEFT JOIN `saas_sale_pricing` pri ON pri.`id`=shelf.`pricing_id`
		LEFT JOIN `saas_enterprise` e ON e.`id`=shelf.`enterprise_id`
		LEFT JOIN `saas_warehouse_shelf` wf ON wf.`id`=shelf.`shelf_id`
		LEFT JOIN `saas_warehouse_cargo_area` cargo ON cargo.`id`=wf.`cargo_area_id`
		LEFT JOIN `saas_goods` goods ON goods.`id`=detail.`goods_id`
		LEFT JOIN `saas_goods_category` cate ON cate.id=goods.`category_id`
		WHERE 1=1
		AND (shelf.`enterprise_id`= #{enterpriseId} OR shelf.`parent_id`=#{enterpriseId})
	<include refid="GoodsNearEffectParams"/>
	 <if test="dateOrder==0 and codeOrder==0">
	 ORDER BY pri.`pricing_date` DESC , pri.`code` DESC   
	 </if>
	  <if test="dateOrder==0 and codeOrder==1">
	 ORDER BY pri.`pricing_date` DESC , pri.`code`   
	 </if>
	  <if test="dateOrder==1 and codeOrder==0">
	 ORDER BY pri.`pricing_date`, pri.`code` DESC   
	 </if>
	  <if test="dateOrder==1 and codeOrder==1">
	 ORDER BY pri.`pricing_date`, pri.`code` 
	 </if>
	 <if test="start!=null and pageSize!=null">
	 LIMIT #{start},#{pageSize}
	 </if>
  </select>
  <sql id="GoodsNearEffectParams">
  	<if test="param != null and param != ''">
          AND (
      INSTR(detail.`goods_name`,#{param})
      OR INSTR(detail.`goods_code`,#{param})
      OR INSTR(detail.`approval_number`,#{param})
      OR INSTR(detail.`barcode`,#{param})
      OR INSTR(detail.`goods_generic_name`,#{param})
      )
    </if>
     <if test="businessVariety != null">
      AND goods.`business_variety` = #{businessVariety}
    </if>
    <if test="categoryId != null">
      AND goods.category_id = #{categoryId}
    </if>
    <if test="domesticImport != null">
      AND goods.domestic_import = #{domesticImport}
    </if>
     <if test="storageTemp != null">
      AND goods.storage_temp = #{storageTemp}
    </if>
     <if test="storageConditionName != null and storageConditionName!='' ">
      AND goods.`storage_condition_name` like concat('%', #{storageConditionName},'%')
    </if>
    <if test="registeredTrademark != null and registeredTrademark!='' ">
      AND goods.registered_trademark = #{registeredTrademark}
    </if>
    <if test="brand != null and brand!='' ">
      AND goods.brand = #{brand}
    </if>
    <if test="goodsAttribute != null">
      AND goods.goods_attribute = #{goodsAttribute}
    </if>
     <if test="prescriptionDrug != null">
      AND goods.prescription_drug = #{prescriptionDrug}
    </if>
     <if test="otcType != null">
      AND goods.otc_type = #{otcType}
    </if>
     <if test="cosmetics != null">
      AND goods.cosmetics = #{cosmetics}
    </if>
     <if test="managementScopeId != null">
      AND goods.management_scope_id = #{managementScopeId}
    </if>
     <if test="specialDrug != null">
      AND goods.special_drug = #{specialDrug}
    </if>
    <if test="inChargeDrug != null">
      AND goods.in_charge_drug = #{inChargeDrug}
    </if>
    
    <if test="spiritDrugType != null">
	  AND goods.spirit_drug_type = #{spiritDrugType}
	</if>
	<if test="formulationType != null">
	  AND goods.formulation_type = #{formulationType}
	</if>
    
    
    <if test="startDate!=null and endDate!=null">
    AND ( pri.`pricing_date` BETWEEN #{startDate} AND #{endDate} )
    </if>
    <if test="startDate!=null and endDate==null">
    AND pri.`pricing_date` <![CDATA[>=]]> #{startDate}
    </if>
    <if test="startDate==null and endDate!=null">
    AND pri.`pricing_date` <![CDATA[<=]]> #{endDate}
    </if>
    
    <if test="pricingCode!=null and pricingCode!='' ">
    AND pri.`code`=#{pricingCode}
    </if>
    <if test="createrName!=null and createrName!='' ">
    AND pri.`creater_name`=#{createrName}
    </if>
     <if test="memberCardCode!=null and memberCardCode!='' ">
    AND pri.`member_card_code`=#{memberCardCode}
    </if>
     <if test="consumerName!=null and consumerName!='' ">
    AND pri.`consumer_name`=#{consumerName}
    </if>
    
    <if test="status!=null">
     AND shelf.`status`=#{status}
    </if>
    
    <if test="chainType != null">
      AND e.chain_type = #{chainType}
    </if>
    <if test="enterpriseCode != null and enterpriseCode!='' ">
      AND e.code = #{enterpriseCode}
    </if>
    <if test="enterpriseName != null and enterpriseName!='' ">
      AND e.name like concat('%', #{enterpriseName},'%')
    </if>
  </sql>
  
  <select id="getSalePricingReportListTotal" parameterType="com.rograndec.feijiayun.chain.business.report.quality.retail.vo.RequestSalePricingVO" resultType="java.lang.Integer">
	SELECT COUNT(shelf.`id`)
	FROM `saas_sale_pricing_shelf` shelf 
		LEFT JOIN `saas_sale_pricing_detail` detail ON detail.`id`=shelf.`pricing_dtl_id`
		LEFT JOIN `saas_sale_pricing` pri ON pri.`id`=shelf.`pricing_id`
		LEFT JOIN `saas_enterprise` e ON e.`id`=shelf.`enterprise_id`
		LEFT JOIN `saas_warehouse_shelf` wf ON wf.`id`=shelf.`shelf_id`
		LEFT JOIN `saas_warehouse_cargo_area` cargo ON cargo.`id`=wf.`cargo_area_id`
		LEFT JOIN `saas_goods` goods ON goods.`id`=detail.`goods_id`
		LEFT JOIN `saas_goods_category` cate ON cate.id=goods.`category_id`
		WHERE 1=1
		AND (shelf.`enterprise_id`= #{enterpriseId} OR shelf.`parent_id`=#{enterpriseId})
	<include refid="GoodsNearEffectParams"/>
  </select>
  
  <select id="getPrescriptionReportVo"  parameterType="com.rograndec.feijiayun.chain.business.report.quality.retail.vo.RequestSalePricingVO" resultType="com.rograndec.feijiayun.chain.business.report.quality.retail.vo.PrescriptionReportVO">
	  SELECT 
	  SUM(shelf.`total_quantity`) AS totalQuantity,SUM(shelf.`amount`) AS amount,
	  SUM(shelf.`real_amount`) AS realAmountTotal,SUM(shelf.`notax_real_amount`) AS notaxRealAmountTotal,
	  SUM(shelf.`tax_amount`) AS taxAmountTotal
	FROM
	  `saas_sale_pricing_shelf` shelf 
	  LEFT JOIN `saas_sale_pricing_detail` detail  ON detail.`id` = shelf.`pricing_dtl_id` 
	  LEFT JOIN `saas_sale_pricing` pri  ON pri.`id` = shelf.`pricing_id` 
	  LEFT JOIN `saas_enterprise` e  ON e.`id` = shelf.`enterprise_id` 
	  LEFT JOIN `saas_warehouse_shelf` wf ON wf.`id` = shelf.`shelf_id` 
	  LEFT JOIN `saas_warehouse_cargo_area` cargo ON cargo.`id` = wf.`cargo_area_id` 
	  LEFT JOIN `saas_goods` goods ON goods.`id` = detail.`goods_id` 
	  LEFT JOIN `saas_goods_category` cate ON cate.id = goods.`category_id` 
	WHERE 1 = 1 
	  AND (shelf.`enterprise_id` = #{enterpriseId} OR shelf.`parent_id`=#{enterpriseId}) 
  <include refid="GoodsNearEffectParams"/>
  </select>
  <select id="selectLockGoodsByParam" parameterType="com.rograndec.feijiayun.chain.common.vo.GoodsParamStockVO" resultType="com.rograndec.feijiayun.chain.business.retail.pricing.vo.SelectPricingGoodsVO">

    SELECT
    goods.id AS goodsId,
    goods. CODE AS goodsCode,
    goods. NAME AS goodsName,
    goods.barcode AS barcode,
    goods.generic_name AS goodsGenericName,
    goods.specification AS goodsSpecification,
    goods.manufacturer_id AS manufacturerId,
    goods.manufacturer AS manufacturer,
    goods.place AS goodsPlace,
    goods.unit_id AS unitId,
    goods.unit_name AS unitName,
    goods.approval_number AS approvalNumber,
    goods.dosage_id AS dosageId,
    goods.dosage_name AS dosageName,
    lot.lot_num AS lotNumber,
    lot.id AS lotNumberId,
    lot.product_date AS productDate,
    lot.valid_until AS validUntil,
    slr.lock_quantity AS lockQuantity,
    slr.shelf_id AS shelfId,
    slr.shelf_name AS shelfName,
    slr.base_order_id AS lockId
    FROM
    saas_stock_lock_record slr,saas_goods goods ,saas_lot_number lot
    where slr.enterprise_id = #{enterpriseId} and slr.base_order_type = 5311  and slr.lot_id = lot.id and goods.id = slr.goods_id
    <if test="param != null and param != ''">
      AND (
            INSTR(goods.name ,#{param})
            OR INSTR(goods.code ,#{param})
            OR INSTR(goods.pinyin_code ,#{param})
            OR INSTR(goods.approval_number ,#{param})
            OR INSTR(goods.barcode ,#{param})
            OR INSTR(goods.generic_name ,#{param})
        )
    </if>
    <if test="isInChargeDrug==1">
      AND  goods.in_charge_drug is not null
    </if>
  </select>
</mapper>