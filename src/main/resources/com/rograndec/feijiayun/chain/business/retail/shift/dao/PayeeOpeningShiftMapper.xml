<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.rograndec.feijiayun.chain.business.retail.shift.dao.PayeeOpeningShiftMapper">
    <resultMap id="BaseResultMap" type="com.rograndec.feijiayun.chain.business.retail.shift.entity.PayeeOpeningShift">
        <id column="id" jdbcType="BIGINT" property="id"/>
        <result column="enterprise_id" jdbcType="BIGINT" property="enterpriseId"/>
        <result column="parent_id" jdbcType="BIGINT" property="parentId"/>
        <result column="opening_account" jdbcType="VARCHAR" property="openingAccount"/>
        <result column="payee_id" jdbcType="BIGINT" property="payeeId"/>
        <result column="payee_code" jdbcType="VARCHAR" property="payeeCode"/>
        <result column="payee_name" jdbcType="VARCHAR" property="payeeName"/>
        <result column="opening_time" jdbcType="TIMESTAMP" property="openingTime"/>
        <result column="shift_time" jdbcType="TIMESTAMP" property="shiftTime"/>
        <result column="sale_pens" jdbcType="INTEGER" property="salePens"/>
        <result column="sale_amount" jdbcType="DECIMAL" property="saleAmount"/>
        <result column="return_pens" jdbcType="INTEGER" property="returnPens"/>
        <result column="return_amount" jdbcType="DECIMAL" property="returnAmount"/>
        <result column="accept_spare_money" jdbcType="DECIMAL" property="acceptSpareMoney"/>
        <result column="payable_cash" jdbcType="DECIMAL" property="payableCash"/>
        <result column="cash" jdbcType="DECIMAL" property="cash"/>
        <result column="send_spare_money" jdbcType="DECIMAL" property="sendSpareMoney"/>
        <result column="daily_settle_flag" jdbcType="INTEGER" property="dailySettleFlag"/>
        <result column="status" jdbcType="INTEGER" property="status"/>
        <result column="remark" jdbcType="VARCHAR" property="remark"/>
        <result column="creater_id" jdbcType="BIGINT" property="createrId"/>
        <result column="creater_code" jdbcType="VARCHAR" property="createrCode"/>
        <result column="creater_name" jdbcType="VARCHAR" property="createrName"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="modifier_id" jdbcType="BIGINT" property="modifierId"/>
        <result column="modifier_code" jdbcType="VARCHAR" property="modifierCode"/>
        <result column="modifier_name" jdbcType="VARCHAR" property="modifierName"/>
        <result column="update_time" jdbcType="TIMESTAMP" property="updateTime"/>
        <result column="payment_flag" jdbcType="INTEGER" property="paymentFlag"/>
    </resultMap>

    <resultMap id="PaymentListVOMap" type="com.rograndec.feijiayun.chain.business.retail.payment.vo.PaymentListVO">
        <result column="pay_type_id" jdbcType="BIGINT" property="payTypeId"/>
        <result column="pay_type_name" jdbcType="VARCHAR" property="payTypeName"/>
        <result column="amount" jdbcType="DECIMAL" property="payAmount"/>
        <result column="real_amount" jdbcType="DECIMAL" property="realAmount"/>
        <result column="diff_amount" jdbcType="DECIMAL" property="diffAmount"/>
    </resultMap>

  <sql id="Base_Column_List">
    id, enterprise_id, parent_id, opening_account, payee_id, payee_code, payee_name, 
    opening_time, shift_time, sale_pens, sale_amount, return_pens, return_amount, accept_spare_money, 
    payable_cash, cash, send_spare_money, daily_settle_flag, status, remark, creater_id, 
    creater_code, creater_name, create_time, modifier_id, modifier_code, modifier_name, 
    update_time,payment_flag
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from saas_payee_opening_shift
        where id = #{id,jdbcType=BIGINT}
    </select>
  <select id="selectByEnterpriseId" parameterType="java.lang.Long" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from saas_payee_opening_shift
        where enterprise_id = #{enterpriseId,jdbcType=BIGINT}
        and daily_settle_flag = 0
        and status = 1
        and shift_time is not null
    </select>
  <select id="selectByIds"  resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from saas_payee_opening_shift a
        where id IN
        <foreach item="item" index="index" collection="list"
               open="(" separator="," close=")">
          #{item}
        </foreach>
    </select>
  <select id="selectByEnterpriseIdByPayeeId" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from saas_payee_opening_shift
        where enterprise_id = #{enterpriseId,jdbcType=BIGINT}
        and payee_id = #{payeeId,jdbcType=BIGINT}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from saas_payee_opening_shift
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.rograndec.feijiayun.chain.business.retail.shift.entity.PayeeOpeningShift" useGeneratedKeys="true" keyProperty="id">
    insert into saas_payee_opening_shift (id, enterprise_id, parent_id, 
      opening_account, payee_id, payee_code, 
      payee_name, opening_time, shift_time, 
      sale_pens, sale_amount, return_pens, 
      return_amount, accept_spare_money, payable_cash, 
      cash, send_spare_money, daily_settle_flag, 
      status, remark, creater_id, 
      creater_code, creater_name, create_time, 
      modifier_id, modifier_code, modifier_name, 
      update_time,payment_flag)
    values (#{id,jdbcType=BIGINT}, #{enterpriseId,jdbcType=BIGINT}, #{parentId,jdbcType=BIGINT}, 
      #{openingAccount,jdbcType=VARCHAR}, #{payeeId,jdbcType=BIGINT}, #{payeeCode,jdbcType=VARCHAR}, 
      #{payeeName,jdbcType=VARCHAR}, #{openingTime,jdbcType=TIMESTAMP}, #{shiftTime,jdbcType=TIMESTAMP}, 
      #{salePens,jdbcType=INTEGER}, #{saleAmount,jdbcType=DECIMAL}, #{returnPens,jdbcType=INTEGER}, 
      #{returnAmount,jdbcType=DECIMAL}, #{acceptSpareMoney,jdbcType=DECIMAL}, #{payableCash,jdbcType=DECIMAL}, 
      #{cash,jdbcType=DECIMAL}, #{sendSpareMoney,jdbcType=DECIMAL}, #{dailySettleFlag,jdbcType=INTEGER}, 
      #{status,jdbcType=INTEGER}, #{remark,jdbcType=VARCHAR}, #{createrId,jdbcType=BIGINT}, 
      #{createrCode,jdbcType=VARCHAR}, #{createrName,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, 
      #{modifierId,jdbcType=BIGINT}, #{modifierCode,jdbcType=VARCHAR}, #{modifierName,jdbcType=VARCHAR}, 
      #{updateTime,jdbcType=TIMESTAMP},#{paymentFlag,jdbcType=INTEGER})
  </insert>
    <insert id="insertSelective"
            parameterType="com.rograndec.feijiayun.chain.business.retail.shift.entity.PayeeOpeningShift" useGeneratedKeys="true" keyProperty="id">
        insert into saas_payee_opening_shift
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="enterpriseId != null">
                enterprise_id,
            </if>
            <if test="parentId != null">
                parent_id,
            </if>
            <if test="openingAccount != null">
                opening_account,
            </if>
            <if test="payeeId != null">
                payee_id,
            </if>
            <if test="payeeCode != null">
                payee_code,
            </if>
            <if test="payeeName != null">
                payee_name,
            </if>
            <if test="openingTime != null">
                opening_time,
            </if>
            <if test="shiftTime != null">
                shift_time,
            </if>
            <if test="salePens != null">
                sale_pens,
            </if>
            <if test="saleAmount != null">
                sale_amount,
            </if>
            <if test="returnPens != null">
                return_pens,
            </if>
            <if test="returnAmount != null">
                return_amount,
            </if>
            <if test="acceptSpareMoney != null">
                accept_spare_money,
            </if>
            <if test="payableCash != null">
                payable_cash,
            </if>
            <if test="cash != null">
                cash,
            </if>
            <if test="sendSpareMoney != null">
                send_spare_money,
            </if>
            <if test="dailySettleFlag != null">
                daily_settle_flag,
            </if>
            <if test="status != null">
                status,
            </if>
            <if test="remark != null">
                remark,
            </if>
            <if test="createrId != null">
                creater_id,
            </if>
            <if test="createrCode != null">
                creater_code,
            </if>
            <if test="createrName != null">
                creater_name,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="modifierId != null">
                modifier_id,
            </if>
            <if test="modifierCode != null">
                modifier_code,
            </if>
            <if test="modifierName != null">
                modifier_name,
            </if>
            <if test="updateTime != null">
                update_time,
            </if>
            <if test="paymentFlag != null">
                payment_flag,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=BIGINT},
            </if>
            <if test="enterpriseId != null">
                #{enterpriseId,jdbcType=BIGINT},
            </if>
            <if test="parentId != null">
                #{parentId,jdbcType=BIGINT},
            </if>
            <if test="openingAccount != null">
                #{openingAccount,jdbcType=VARCHAR},
            </if>
            <if test="payeeId != null">
                #{payeeId,jdbcType=BIGINT},
            </if>
            <if test="payeeCode != null">
                #{payeeCode,jdbcType=VARCHAR},
            </if>
            <if test="payeeName != null">
                #{payeeName,jdbcType=VARCHAR},
            </if>
            <if test="openingTime != null">
                #{openingTime,jdbcType=TIMESTAMP},
            </if>
            <if test="shiftTime != null">
                #{shiftTime,jdbcType=TIMESTAMP},
            </if>
            <if test="salePens != null">
                #{salePens,jdbcType=INTEGER},
            </if>
            <if test="saleAmount != null">
                #{saleAmount,jdbcType=DECIMAL},
            </if>
            <if test="returnPens != null">
                #{returnPens,jdbcType=INTEGER},
            </if>
            <if test="returnAmount != null">
                #{returnAmount,jdbcType=DECIMAL},
            </if>
            <if test="acceptSpareMoney != null">
                #{acceptSpareMoney,jdbcType=DECIMAL},
            </if>
            <if test="payableCash != null">
                #{payableCash,jdbcType=DECIMAL},
            </if>
            <if test="cash != null">
                #{cash,jdbcType=DECIMAL},
            </if>
            <if test="sendSpareMoney != null">
                #{sendSpareMoney,jdbcType=DECIMAL},
            </if>
            <if test="dailySettleFlag != null">
                #{dailySettleFlag,jdbcType=INTEGER},
            </if>
            <if test="status != null">
                #{status,jdbcType=INTEGER},
            </if>
            <if test="remark != null">
                #{remark,jdbcType=VARCHAR},
            </if>
            <if test="createrId != null">
                #{createrId,jdbcType=BIGINT},
            </if>
            <if test="createrCode != null">
                #{createrCode,jdbcType=VARCHAR},
            </if>
            <if test="createrName != null">
                #{createrName,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="modifierId != null">
                #{modifierId,jdbcType=BIGINT},
            </if>
            <if test="modifierCode != null">
                #{modifierCode,jdbcType=VARCHAR},
            </if>
            <if test="modifierName != null">
                #{modifierName,jdbcType=VARCHAR},
            </if>
            <if test="updateTime != null">
                #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="paymentFlag != null">
                #{paymentFlag,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective"
            parameterType="com.rograndec.feijiayun.chain.business.retail.shift.entity.PayeeOpeningShift">
        update saas_payee_opening_shift
        <set>
            <if test="enterpriseId != null">
                enterprise_id = #{enterpriseId,jdbcType=BIGINT},
            </if>
            <if test="parentId != null">
                parent_id = #{parentId,jdbcType=BIGINT},
            </if>
            <if test="openingAccount != null">
                opening_account = #{openingAccount,jdbcType=VARCHAR},
            </if>
            <if test="payeeId != null">
                payee_id = #{payeeId,jdbcType=BIGINT},
            </if>
            <if test="payeeCode != null">
                payee_code = #{payeeCode,jdbcType=VARCHAR},
            </if>
            <if test="payeeName != null">
                payee_name = #{payeeName,jdbcType=VARCHAR},
            </if>
            <if test="openingTime != null">
                opening_time = #{openingTime,jdbcType=TIMESTAMP},
            </if>
            <if test="shiftTime != null">
                shift_time = #{shiftTime,jdbcType=TIMESTAMP},
            </if>
            <if test="salePens != null">
                sale_pens = #{salePens,jdbcType=INTEGER},
            </if>
            <if test="saleAmount != null">
                sale_amount = #{saleAmount,jdbcType=DECIMAL},
            </if>
            <if test="returnPens != null">
                return_pens = #{returnPens,jdbcType=INTEGER},
            </if>
            <if test="returnAmount != null">
                return_amount = #{returnAmount,jdbcType=DECIMAL},
            </if>
            <if test="acceptSpareMoney != null">
                accept_spare_money = #{acceptSpareMoney,jdbcType=DECIMAL},
            </if>
            <if test="payableCash != null">
                payable_cash = #{payableCash,jdbcType=DECIMAL},
            </if>
            <if test="cash != null">
                cash = #{cash,jdbcType=DECIMAL},
            </if>
            <if test="sendSpareMoney != null">
                send_spare_money = #{sendSpareMoney,jdbcType=DECIMAL},
            </if>
            <if test="dailySettleFlag != null">
                daily_settle_flag = #{dailySettleFlag,jdbcType=INTEGER},
            </if>
            <if test="status != null">
                status = #{status,jdbcType=INTEGER},
            </if>
            <if test="remark != null">
                remark = #{remark,jdbcType=VARCHAR},
            </if>
            <if test="createrId != null">
                creater_id = #{createrId,jdbcType=BIGINT},
            </if>
            <if test="createrCode != null">
                creater_code = #{createrCode,jdbcType=VARCHAR},
            </if>
            <if test="createrName != null">
                creater_name = #{createrName,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="modifierId != null">
                modifier_id = #{modifierId,jdbcType=BIGINT},
            </if>
            <if test="modifierCode != null">
                modifier_code = #{modifierCode,jdbcType=VARCHAR},
            </if>
            <if test="modifierName != null">
                modifier_name = #{modifierName,jdbcType=VARCHAR},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="paymentFlag != null">
                payment_flag = #{paymentFlag,jdbcType=INTEGER},
            </if>
        </set>
        where id = #{id,jdbcType=BIGINT}
    </update>
    <update id="updateByPrimaryKey"
            parameterType="com.rograndec.feijiayun.chain.business.retail.shift.entity.PayeeOpeningShift">
    update saas_payee_opening_shift
    set enterprise_id = #{enterpriseId,jdbcType=BIGINT},
      parent_id = #{parentId,jdbcType=BIGINT},
      opening_account = #{openingAccount,jdbcType=VARCHAR},
      payee_id = #{payeeId,jdbcType=BIGINT},
      payee_code = #{payeeCode,jdbcType=VARCHAR},
      payee_name = #{payeeName,jdbcType=VARCHAR},
      opening_time = #{openingTime,jdbcType=TIMESTAMP},
      shift_time = #{shiftTime,jdbcType=TIMESTAMP},
      sale_pens = #{salePens,jdbcType=INTEGER},
      sale_amount = #{saleAmount,jdbcType=DECIMAL},
      return_pens = #{returnPens,jdbcType=INTEGER},
      return_amount = #{returnAmount,jdbcType=DECIMAL},
      accept_spare_money = #{acceptSpareMoney,jdbcType=DECIMAL},
      payable_cash = #{payableCash,jdbcType=DECIMAL},
      cash = #{cash,jdbcType=DECIMAL},
      send_spare_money = #{sendSpareMoney,jdbcType=DECIMAL},
      daily_settle_flag = #{dailySettleFlag,jdbcType=INTEGER},
      status = #{status,jdbcType=INTEGER},
      remark = #{remark,jdbcType=VARCHAR},
      creater_id = #{createrId,jdbcType=BIGINT},
      creater_code = #{createrCode,jdbcType=VARCHAR},
      creater_name = #{createrName,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      modifier_id = #{modifierId,jdbcType=BIGINT},
      modifier_code = #{modifierCode,jdbcType=VARCHAR},
      modifier_name = #{modifierName,jdbcType=VARCHAR},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      payment_flag = #{paymentFlag,jdbcType=INTEGER}
    where id = #{id,jdbcType=BIGINT}
  </update>
  
  <select id="selectStandCodeByShiftId" resultType="java.util.HashMap">
    select DISTINCT stand_code from saas_sale where id in
    	(select base_order_id from saas_payee_opening_shift_detail
    where doc_id = #{shiftId,jdbcType=BIGINT})
  </select>

    <select id="selectReceiptDetailByShiftId" resultMap="PaymentListVOMap">
    SELECT
    	pay_type_id,
		pay_type_name,
		sum(amount) AS amount,
		sum(amount) AS real_amount,
		'0' AS diff_amount from (
			SELECT
				pay_type_id,
				pay_type_name,
				amount AS amount,
				'0' AS diff_amount
			FROM
				saas_receipt_detail
			WHERE
				enterprise_id = #{enterpriseId} 
				and receipt_id in 
				(
					SELECT
						r.id
					FROM
						saas_receipt r LEFT JOIN saas_sale s
						on r.base_order_id = s.id
					WHERE
						r.base_order_id IN (
							SELECT
								base_order_id
							FROM
								saas_payee_opening_shift_detail
							WHERE
								doc_id = #{shiftId,jdbcType=BIGINT} 
						) and sale_type = '0'
				)
				AND STATUS = '1'
			union ALL
				SELECT
					pay_type_id,
					pay_type_name,
					-1*amount AS amount,
					'0' AS diff_amount
				FROM
					saas_receipt_detail
				WHERE
					enterprise_id = #{enterpriseId} 
					and receipt_id in 
					(
						SELECT
							r.id
						FROM
							saas_receipt r LEFT JOIN saas_sale s
							on r.base_order_id = s.id
						WHERE
							r.base_order_id IN (
								SELECT
									base_order_id
								FROM
									saas_payee_opening_shift_detail
								WHERE
									doc_id = #{shiftId,jdbcType=BIGINT} 
							) and sale_type = '1'
					)
					AND STATUS = '1'
			)tab1
	GROUP BY pay_type_id
  </select>
  
  <select id="queryStayPaymentCountByParams" parameterType="com.rograndec.feijiayun.chain.business.retail.payment.vo.StoreStaySearchConditionVO" resultType ="java.lang.Long">
    select 
    	count(1)
    FROM
		saas_payee_opening_shift s
	LEFT JOIN saas_pos_payee pe ON s.payee_id = pe.payee_id
	WHERE
		s.enterprise_id = #{enterpriseId}
		and s.payment_flag = '0'
		AND (s.sale_pens != 0 or s.return_pens != 0)
	<if test="startDate != null">  
    	and s.shift_time >= #{startDate}
    </if>
    <if test="endDate != null">  
    	AND date_format(s.shift_time, '%Y-%m-%d') &lt;= #{endDate}
    </if>
    <if test="teamId != null">  
    	AND pe.team_id = #{teamId}
    </if>
	<if test="payeeName != null and payeeName != ''">  
    	AND INSTR(s.payee_name , #{payeeName})
    </if>	
    <if test="standCode != null and standCode != ''">  
		AND s.id IN (
			SELECT
				doc_id
			FROM
				saas_payee_opening_shift_detail
			WHERE
				base_order_id IN (
					SELECT
						id
					FROM
						saas_sale
					WHERE
						enterprise_id = #{enterpriseId}
					AND stand_code = #{standCode}
				)
		)
	</if>
  </select>	
  
  <select id="selectStayPaymentPageByParams" parameterType="com.rograndec.feijiayun.chain.business.retail.payment.vo.StoreStaySearchConditionVO" resultType="java.util.Map">
    SELECT
    	s.id, 
		date_format(s.shift_time, '%Y-%m-%d') AS shiftDate,
		pe.team_name AS teamName,
		s.payee_name AS payeeName,
		s.opening_time AS openingTime,
		s.shift_time AS shiftTime
	FROM
		saas_payee_opening_shift s
			LEFT JOIN saas_pos_payee pe ON s.payee_id = pe.payee_id
	WHERE
		s.enterprise_id = #{enterpriseId}
		and s.payment_flag = '0'
		AND (s.sale_pens != 0 or s.return_pens != 0)
	<if test="startDate != null">  
    	and s.shift_time >= #{startDate}
    </if>
    <if test="endDate != null">  
    	AND date_format(s.shift_time, '%Y-%m-%d') &lt;= #{endDate}
    </if>
    <if test="teamId != null">  
    	AND pe.team_id = #{teamId}
    </if>
	<if test="payeeName != null and payeeName != ''">  
    	AND INSTR(s.payee_name , #{payeeName})
    </if>	
    <if test="standCode != null and standCode != ''">  
		AND s.id IN (
			SELECT
				doc_id
			FROM
				saas_payee_opening_shift_detail
			WHERE
				base_order_id IN (
					SELECT
						id
					FROM
						saas_sale
					WHERE
						enterprise_id = #{enterpriseId}
					AND stand_code = #{standCode}
				)
		)
	</if>	
    <if test="order != null and order != ''">  
    	order by ${order} ${sort}
    </if>
		limit #{pageNo}, #{pageSize}
  </select>
  
  <select id="queryHeadquartersStayPaymentCountByParams" parameterType="com.rograndec.feijiayun.chain.business.retail.payment.vo.HeadquartersStaySearchConditionVO" resultType ="java.lang.Long">
    select 
    	count(1)
    FROM
		saas_payee_opening_shift s
			LEFT JOIN saas_pos_payee pe ON s.payee_id = pe.payee_id
			left join saas_enterprise se on s.enterprise_id = se.id
	WHERE
		s.parent_id = #{enterpriseId}
		and s.payment_flag = '0'
		AND (s.sale_pens != 0 or s.return_pens != 0)
	<if test="startDate != null">  
    	and s.shift_time >= #{startDate}
    </if>
    <if test="endDate != null">  
    	AND date_format(s.shift_time, '%Y-%m-%d') &lt;= #{endDate}
    </if>
    <if test="chainType != null and chainType != ''">  
    	AND se.chain_type = #{chainType}
    </if>
    <if test="storeCode != null and storeCode != ''">  
    	AND (
        INSTR(se.code , #{storeCode})
        or INSTR(se.pinyin , #{storeCode})
        )
    </if>
    <if test="storeName != null and storeName != ''">  
    	AND INSTR(se.name , #{storeName})
    </if>
    <if test="teamId != null and teamId != ''">  
    	AND pe.team_id = #{teamId}
    </if>
	<if test="payeeName != null and payeeName != ''">  
    	AND INSTR(s.payee_name , #{payeeName})
    </if>	
    <if test="standCode != null and standCode != ''">  
		AND s.id IN (
			SELECT
				doc_id
			FROM
				saas_payee_opening_shift_detail
			WHERE
				base_order_id IN (
					SELECT
						id
					FROM
						saas_sale
					WHERE
						enterprise_id = #{enterpriseId}
					AND stand_code = #{standCode}
				)
		)
	</if>
  </select>	
  <!--总部代缴款-->
  <select id="selectHeadquartersStayPaymentPageByParams" parameterType="com.rograndec.feijiayun.chain.business.retail.payment.vo.HeadquartersStaySearchConditionVO" resultType="java.util.Map">
    SELECT
    	s.id,
    	se.code as storeCode, se.name as storeName,
		date_format(s.shift_time, '%Y-%m-%d') AS shiftDate,
		pe.team_name AS teamName,
		s.payee_name AS payeeName,
		s.opening_time AS openingTime,
		s.shift_time AS shiftTime
	FROM
		saas_payee_opening_shift s
			LEFT JOIN saas_pos_payee pe ON s.payee_id = pe.payee_id
			left join saas_enterprise se on s.enterprise_id = se.id
	WHERE
        s.enterprise_id  in (select id from saas_enterprise where parent_id = #{enterpriseId} and chain_type=#{chainType})
		and s.payment_flag = '0'
		AND (s.sale_pens != 0 or s.return_pens != 0)
	<if test="startDate != null">  
    	and s.shift_time >= #{startDate}
    </if>
    <if test="endDate != null">  
    	AND date_format(s.shift_time, '%Y-%m-%d') &lt;= #{endDate}
    </if>
    <if test="chainType != null and chainType != ''">  
    	AND se.chain_type = #{chainType}
    </if>
    <if test="storeCode != null and storeCode != ''">  
    	AND (
        INSTR(se.code , #{storeCode})
        or INSTR(se.pinyin , #{storeCode})
        )
    </if>
    <if test="storeName != null and storeName != ''">  
    	AND INSTR(se.name , #{storeName})
    </if>
    <if test="teamId != null and teamId != ''">  
    	AND pe.team_id = #{teamId}
    </if>
	<if test="payeeName != null and payeeName != ''">  
    	AND INSTR(s.payee_name , #{payeeName})
    </if>	
    <if test="standCode != null and standCode != ''">  
		AND s.id IN (
			SELECT
				doc_id
			FROM
				saas_payee_opening_shift_detail
			WHERE
				base_order_id IN (
					SELECT
						id
					FROM
						saas_sale
					WHERE
						enterprise_id = #{enterpriseId}
					AND stand_code = #{standCode}
				)
		)
	</if>	
    <if test="order != null and order != ''">  
    	order by ${order} ${sort}
    </if>
		limit #{pageNo}, #{pageSize}
  </select>

  <select id="selectPosStand" parameterType="com.rograndec.feijiayun.chain.business.retail.shift.vo.SelectPosStandVO"
            resultType="java.util.Map">
	    SELECT
	    id,
	    code
	    FROM saas_pos_stand
	    WHERE 1=1
	    <if test="chainType == 0">
            AND parent_id = #{enterpriseId}
        </if>
          <if test="chainType != 0">
            AND enterprise_id = #{enterpriseId}
          </if>

  </select>
    <select id="selectPosTeam" parameterType="com.rograndec.feijiayun.chain.business.retail.shift.vo.SelectPosTeamVO"
            resultType="java.util.Map">
    SELECT
    id,
    name
    FROM saas_pos_team
    WHERE 1=1
        <if test="chainType == 0">
            AND parent_id = #{enterpriseId}
        </if>
        <if test="chainType != 0">
            AND enterprise_id = #{enterpriseId}
        </if>
  </select>
    <select id="selectPosPayee" parameterType="com.rograndec.feijiayun.chain.business.retail.shift.vo.SelectPosPayeeVO"
            resultType="java.util.Map">
    SELECT
    id,
    payee_name payeeName
    FROM saas_pos_payee
    WHERE enterprise_id = #{enterpriseId}
  </select>
  
  <update id="updatePaymentFlagByShiftId">
    update saas_payee_opening_shift
    set 
      payment_flag = '1'
    where id = #{id}
  </update>

  <update id="updateDailySettleFlagByShiftId">
    update saas_payee_opening_shift
    set
      daily_settle_flag = #{dailySettleFlag}
    where id = #{id}
  </update>

    <select id="queryCountByPayeeOpeningShiftStoreParams"  resultType="java.util.HashMap">
        select
     <!--    count(1) -->   
     	s.id AS id,
     	s.sale_pens AS salePens,
        s.sale_amount AS saleAmount,
        s.return_pens AS returnPens,
        s.return_amount AS returnAmount,
        s.accept_spare_money AS acceptSpareMoney,
        s.send_spare_money AS sendSpareMoney
        FROM
        saas_payee_opening_shift s
        LEFT JOIN saas_pos_payee pe ON s.payee_id = pe.payee_id
        WHERE
        s.enterprise_id  = #{enterpriseId}
        and s.status = 1
        <if test="startTimes != null">
            and s.shift_time >= #{startTimes}
        </if>
        <if test="endTimes != null">
            AND s.shift_time &lt;= #{endTimes}
        </if>
        <if test="teamId != null">
            AND pe.team_id = #{teamId}
        </if>
        <if test="payeeName != null and payeeName != ''">
            AND INSTR(s.payee_name , #{payeeName})
        </if>
        <if test="standCode != null and standCode != ''">
            AND s.id IN (
            SELECT
            doc_id
            FROM
            saas_payee_opening_shift_detail
            WHERE
            base_order_id IN (
            SELECT
            id
            FROM
            saas_sale
            WHERE
            enterprise_id = #{enterpriseId}
            AND stand_code = #{standCode}
            )
            )
        </if>

    </select>
    <select id="payeeOpeningShiftStoreVoParams"
            parameterType="com.rograndec.feijiayun.chain.business.retail.shift.vo.PayeeOpeningShiftStoreVO"
            resultType="java.util.Map">
        SELECT
        s.id,
        date_format(s.shift_time, '%Y-%m-%d') AS createDate,
        pe.team_name AS teamName,
        s.payee_name AS payeeName,
        s.opening_time AS openingTime,
        s.shift_time AS shiftTime,
        s.sale_pens AS salePens,
        s.sale_amount AS saleAmount,
        s.return_pens AS returnPens,
        s.return_amount AS returnAmount,
        s.accept_spare_money AS acceptSpareMoney,
        s.send_spare_money AS sendSpareMoney
        <if test="orderName == 'stand_code'">
            ,( select DISTINCT stand_code from saas_sale where id in
            (select base_order_id from saas_payee_opening_shift_detail
            where doc_id = s.id))stand_code
        </if>
        FROM
        saas_payee_opening_shift s
        LEFT JOIN saas_pos_payee pe ON s.payee_id = pe.payee_id
        WHERE
        s.enterprise_id  = #{enterpriseId}
        and s.status = 1
        <if test="startTimes != null">
            and s.shift_time >= #{startTimes}
        </if>
        <if test="endTimes != null">
            AND s.shift_time &lt;= #{endTimes}
        </if>
        <if test="teamId != null">
            AND pe.team_id = #{teamId}
        </if>
        <if test="payeeName != null and payeeName != ''">
            AND INSTR(s.payee_name , #{payeeName})
        </if>
        <if test="standCode != null and standCode != ''">
            AND s.id IN (
            SELECT
            doc_id
            FROM
            saas_payee_opening_shift_detail
            WHERE
            base_order_id IN (
            SELECT
            id
            FROM
            saas_sale
            WHERE
            enterprise_id = #{enterpriseId}
            AND stand_code = #{standCode}
            )
            )
        </if>
        <if test="orderName != null and orderType!=null">
            ORDER BY ${orderName} ${orderType}
        </if>
        <if test="start != null and pageSize != null">
            limit #{start},#{pageSize}
        </if>
    </select>
    <select id="queryCountByPayeeOpeningShiftParams" resultType="java.util.HashMap">

        SELECT
      <!--  COUNT(1) -->
    	s.id as id,
    	s.sale_pens AS salePens,
        s.sale_amount AS saleAmount,
        s.return_pens AS returnPens,
        s.return_amount AS returnAmount,
        s.accept_spare_money AS acceptSpareMoney,
        s.send_spare_money AS sendSpareMoney
        FROM
        saas_payee_opening_shift s
        LEFT JOIN saas_pos_payee pe ON s.payee_id = pe.payee_id
        left join saas_enterprise se on s.enterprise_id = se.id
        WHERE
        1 = 1
        <if test="storeType == null">
            and s.enterprise_id  in (select id from saas_enterprise where parent_id = #{enterpriseId})
        </if>
        <if test="storeType != null">
           and s.enterprise_id  in (select id from saas_enterprise where parent_id = #{enterpriseId} and chain_type=#{storeType})
        </if>
        and s.status = 1
        <if test="startTimes != null">
            and s.shift_time >= #{startTimes}
        </if>
        <if test="endTimes != null">
            AND s.shift_time &lt;= #{endTimes}
        </if>
        <if test="teamId != null">
            AND pe.team_id = #{teamId}
        </if>
        <if test="payeeName != null">
            AND INSTR(s.payee_name , #{payeeName})
        </if>
        <if test="storeCode != null">
            and INSTR(se.code , #{storeCode})
        </if>
        <if test="storeName != null">
            and INSTR(se.name , #{storeName})
        </if>
        <!--<if test="storeType != null and storeType == 0 ">-->
            <!--and se.chain_type = 1-->
        <!--</if>-->
        <!--<if test="storeType != null and storeType == 1 ">-->
            <!--and se.chain_type = 2-->
        <!--</if>-->
        <if test="standCode != null">
            AND s.id IN (
            SELECT
            doc_id
            FROM
            saas_payee_opening_shift_detail
            WHERE
            base_order_id IN (
            SELECT
            id
            FROM
            saas_sale
            WHERE
            enterprise_id = #{enterpriseId}
            AND stand_code = #{standCode}
            )
            )
        </if>
    </select>
    <select id="payeeOpeningShiftVoParams"
            parameterType="com.rograndec.feijiayun.chain.business.retail.shift.vo.PayeeOpeningShiftStoreVO"
            resultType="java.util.Map">

        SELECT
        s.id,
        se.code as storeCode, se.name as storeName,
        date_format(s.shift_time, '%Y-%m-%d') AS createDate,
        pe.team_name AS teamName,
        s.payee_name AS payeeName,
        s.opening_time AS openingTime,
        s.shift_time AS shiftTime,
        s.sale_pens AS salePens,
        s.sale_amount AS saleAmount,
        s.return_pens AS returnPens,
        s.return_amount AS returnAmount,
        s.accept_spare_money AS acceptSpareMoney,
        s.send_spare_money AS sendSpareMoney
        <if test="orderName == 'stand_code'">
            ,( select DISTINCT stand_code from saas_sale where id in
            (select base_order_id from saas_payee_opening_shift_detail
            where doc_id = s.id))stand_code
        </if>

        FROM
        saas_payee_opening_shift s
        LEFT JOIN saas_pos_payee pe ON s.payee_id = pe.payee_id
        left join saas_enterprise se on s.enterprise_id = se.id
        WHERE
        1 = 1
        <if test="storeType == null">
            and s.enterprise_id  in (select id from saas_enterprise where parent_id = #{enterpriseId})
        </if>
        <if test="storeType != null">
            and s.enterprise_id  in (select id from saas_enterprise where parent_id = #{enterpriseId} and chain_type=#{storeType})
        </if>
        and s.status = 1
        <if test="startTimes != null">
            and s.shift_time >= #{startTimes}
        </if>
        <if test="endTimes != null">
            AND s.shift_time &lt;= #{endTimes}
        </if>
        <if test="teamId != null">
            AND pe.team_id = #{teamId}
        </if>
        <if test="payeeName != null">
            AND INSTR(s.payee_name , #{payeeName})
        </if>
        <if test="storeCode != null">
            and INSTR(se.code , #{storeCode})
        </if>
        <if test="storeName != null">
            and INSTR(se.name , #{storeName})
        </if>
        <!--<if test="storeType != null and storeType == 0 ">-->
            <!--and se.chain_type = 1-->
        <!--</if>-->
        <!--<if test="storeType != null and storeType == 1 ">-->
            <!--and se.chain_type = 2-->
        <!--</if>-->
        <if test="standCode != null">
            AND s.id IN (
            SELECT
            doc_id
            FROM
            saas_payee_opening_shift_detail
            WHERE
            base_order_id IN (
            SELECT
            id
            FROM
            saas_sale
            WHERE
            enterprise_id = #{enterpriseId}
            AND stand_code = #{standCode}
            )
            )
        </if>
        <if test="orderName != null and orderType!=null">
            ORDER BY ${orderName} ${orderType}
        </if>
        <if test="start != null and pageSize != null">
            limit #{start},#{pageSize}
        </if>
    </select>
    <select id="queryCountByPayeeOpeningShiftSelectStoreParams" resultType="java.lang.Long">
    select
    count(1)
    from saas_sale
    where id in (select base_order_id from saas_payee_opening_shift_detail where doc_id = #{shiftId})
  </select>

    <select id="payeeOpeningShiftStoreSelectVoParams" resultType="java.util.Map">
        select
        s.id, s.sale_type,
        s.stand_code as standCode, p.team_name as teamName,
        s.payee_name as payeeName, s.sale_date as saleTime,
        s.code as saleCode, s.sale_type as saleType,
        s.sale_mode as saleMode, s.real_amount_total as realAmountTotal
        from saas_sale s left join saas_pos_payee p
        on s.payee_id = p.payee_id
        where s.id in (select base_order_id from saas_payee_opening_shift_detail where doc_id = #{shiftId})

        <if test="orderName != null and orderType!=null">
            ORDER BY ${orderName} ${orderType}
        </if>
        <if test="start != null and pageSize != null">
            limit #{start},#{pageSize}
        </if>

    </select>

    <select id="payeeOpeningShiftSelectVoParams" resultType="java.util.Map">
        select
        s.id, s.sale_type,
        se.code as storeCode, se.name as storeName,
        s.stand_code as standCode, p.team_name as teamName,
        s.payee_name as payeeName, s.sale_date as saleTime,
        s.code as saleCode, s.sale_type as saleType,
        s.sale_mode as saleMode, s.real_amount_total as realAmountTotal
        from saas_sale s left join saas_pos_payee p
        on s.payee_id = p.payee_id
        left join saas_enterprise se on s.enterprise_id = se.id
        where s.id in (select base_order_id from saas_payee_opening_shift_detail where doc_id = #{shiftId})

        <if test="orderName != null and orderType!=null">
            ORDER BY ${orderName} ${orderType}
        </if>
        <if test="start != null and pageSize != null">
            limit #{start},#{pageSize}
        </if>


    </select>

</mapper>