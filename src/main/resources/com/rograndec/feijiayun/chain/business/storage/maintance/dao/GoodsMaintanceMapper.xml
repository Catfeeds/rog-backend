<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.rograndec.feijiayun.chain.business.storage.maintance.dao.GoodsMaintanceMapper">
  <resultMap id="BaseResultMap" type="com.rograndec.feijiayun.chain.business.storage.maintance.entity.GoodsMaintance">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="enterprise_id" jdbcType="BIGINT" property="enterpriseId" />
    <result column="parent_id" jdbcType="BIGINT" property="parentId" />
    <result column="order_type" jdbcType="INTEGER" property="orderType" />
    <result column="maintance_date" jdbcType="TIMESTAMP" property="maintanceDate" />
    <result column="code" jdbcType="VARCHAR" property="code" />
    <result column="maintance_man_id" jdbcType="BIGINT" property="maintanceManId" />
    <result column="maintance_man_code" jdbcType="VARCHAR" property="maintanceManCode" />
    <result column="maintance_man_name" jdbcType="VARCHAR" property="maintanceManName" />
    <result column="warehouse_area_id" jdbcType="BIGINT" property="warehouseAreaId" />
    <result column="warehouse_area_name" jdbcType="VARCHAR" property="warehouseAreaName" />
    <result column="maintance_type" jdbcType="INTEGER" property="maintanceType" />
    <result column="goods_type" jdbcType="INTEGER" property="goodsType" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
    <result column="creater_id" jdbcType="BIGINT" property="createrId" />
    <result column="creater_code" jdbcType="VARCHAR" property="createrCode" />
    <result column="creater_name" jdbcType="VARCHAR" property="createrName" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="modifier_id" jdbcType="BIGINT" property="modifierId" />
    <result column="modifier_code" jdbcType="VARCHAR" property="modifierCode" />
    <result column="modifier_name" jdbcType="VARCHAR" property="modifierName" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <sql id="Base_Column_List">
    id, enterprise_id, parent_id, order_type, maintance_date, code, maintance_man_id, 
    maintance_man_code, maintance_man_name, warehouse_area_id, warehouse_area_name, maintance_type, 
    goods_type, status, remark, creater_id, creater_code, creater_name, create_time, 
    modifier_id, modifier_code, modifier_name, update_time
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from saas_goods_maintance
    where id = #{id,jdbcType=BIGINT}
  </select>

  <select id="getMaintanceOrderList" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from saas_goods_maintance
    where enterprise_id = #{enterpriseId,jdbcType=BIGINT}
    and status = #{maintanceOrderType}
    <if test="goodsType != null">
      and goods_type = #{goodsType}
    </if>
    <if test="warehouseAreaId != null">
      and warehouse_area_id = #{warehouseAreaId}
    </if>
    <if test="code != null">
      and code = CONCAT('%',#{code},'%')
    </if>
    <if test="maintanceType != null">
      and maintance_type = #{maintanceType}
    </if>
    <if test="startDate != null and endDate != null">
      and maintance_date between #{startDate} and #{endDate}
    </if>
    <if test="orderName != null and orderType != null">
      order by ${orderName} ${orderType}
    </if>
    <if test="pageSize != null and start!=null">
      limit ${start},${pageSize}
    </if>
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from saas_goods_maintance
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.rograndec.feijiayun.chain.business.storage.maintance.entity.GoodsMaintance"  useGeneratedKeys="true" keyProperty="id">
    insert into saas_goods_maintance (id, enterprise_id, parent_id, 
      order_type, maintance_date, code, 
      maintance_man_id, maintance_man_code, maintance_man_name, 
      warehouse_area_id, warehouse_area_name, maintance_type, 
      goods_type, status, remark, 
      creater_id, creater_code, creater_name, 
      create_time, modifier_id, modifier_code, 
      modifier_name, update_time)
    values (#{id,jdbcType=BIGINT}, #{enterpriseId,jdbcType=BIGINT}, #{parentId,jdbcType=BIGINT}, 
      #{orderType,jdbcType=INTEGER}, #{maintanceDate,jdbcType=TIMESTAMP}, #{code,jdbcType=VARCHAR}, 
      #{maintanceManId,jdbcType=BIGINT}, #{maintanceManCode,jdbcType=VARCHAR}, #{maintanceManName,jdbcType=VARCHAR}, 
      #{warehouseAreaId,jdbcType=BIGINT}, #{warehouseAreaName,jdbcType=VARCHAR}, #{maintanceType,jdbcType=INTEGER}, 
      #{goodsType,jdbcType=INTEGER}, #{status,jdbcType=INTEGER}, #{remark,jdbcType=VARCHAR}, 
      #{createrId,jdbcType=BIGINT}, #{createrCode,jdbcType=VARCHAR}, #{createrName,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=TIMESTAMP}, #{modifierId,jdbcType=BIGINT}, #{modifierCode,jdbcType=VARCHAR}, 
      #{modifierName,jdbcType=VARCHAR}, #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.rograndec.feijiayun.chain.business.storage.maintance.entity.GoodsMaintance"  useGeneratedKeys="true" keyProperty="id">
    insert into saas_goods_maintance
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="enterpriseId != null">
        enterprise_id,
      </if>
      <if test="parentId != null">
        parent_id,
      </if>
      <if test="orderType != null">
        order_type,
      </if>
      <if test="maintanceDate != null">
        maintance_date,
      </if>
      <if test="code != null">
        code,
      </if>
      <if test="maintanceManId != null">
        maintance_man_id,
      </if>
      <if test="maintanceManCode != null">
        maintance_man_code,
      </if>
      <if test="maintanceManName != null">
        maintance_man_name,
      </if>
      <if test="warehouseAreaId != null">
        warehouse_area_id,
      </if>
      <if test="warehouseAreaName != null">
        warehouse_area_name,
      </if>
      <if test="maintanceType != null">
        maintance_type,
      </if>
      <if test="goodsType != null">
        goods_type,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="remark != null">
        remark,
      </if>
      <if test="createrId != null">
        creater_id,
      </if>
      <if test="createrCode != null">
        creater_code,
      </if>
      <if test="createrName != null">
        creater_name,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="modifierId != null">
        modifier_id,
      </if>
      <if test="modifierCode != null">
        modifier_code,
      </if>
      <if test="modifierName != null">
        modifier_name,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="enterpriseId != null">
        #{enterpriseId,jdbcType=BIGINT},
      </if>
      <if test="parentId != null">
        #{parentId,jdbcType=BIGINT},
      </if>
      <if test="orderType != null">
        #{orderType,jdbcType=INTEGER},
      </if>
      <if test="maintanceDate != null">
        #{maintanceDate,jdbcType=TIMESTAMP},
      </if>
      <if test="code != null">
        #{code,jdbcType=VARCHAR},
      </if>
      <if test="maintanceManId != null">
        #{maintanceManId,jdbcType=BIGINT},
      </if>
      <if test="maintanceManCode != null">
        #{maintanceManCode,jdbcType=VARCHAR},
      </if>
      <if test="maintanceManName != null">
        #{maintanceManName,jdbcType=VARCHAR},
      </if>
      <if test="warehouseAreaId != null">
        #{warehouseAreaId,jdbcType=BIGINT},
      </if>
      <if test="warehouseAreaName != null">
        #{warehouseAreaName,jdbcType=VARCHAR},
      </if>
      <if test="maintanceType != null">
        #{maintanceType,jdbcType=INTEGER},
      </if>
      <if test="goodsType != null">
        #{goodsType,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="createrId != null">
        #{createrId,jdbcType=BIGINT},
      </if>
      <if test="createrCode != null">
        #{createrCode,jdbcType=VARCHAR},
      </if>
      <if test="createrName != null">
        #{createrName,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="modifierId != null">
        #{modifierId,jdbcType=BIGINT},
      </if>
      <if test="modifierCode != null">
        #{modifierCode,jdbcType=VARCHAR},
      </if>
      <if test="modifierName != null">
        #{modifierName,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.rograndec.feijiayun.chain.business.storage.maintance.entity.GoodsMaintance">
    update saas_goods_maintance
    <set>
      <if test="enterpriseId != null">
        enterprise_id = #{enterpriseId,jdbcType=BIGINT},
      </if>
      <if test="parentId != null">
        parent_id = #{parentId,jdbcType=BIGINT},
      </if>
      <if test="orderType != null">
        order_type = #{orderType,jdbcType=INTEGER},
      </if>
      <if test="maintanceDate != null">
        maintance_date = #{maintanceDate,jdbcType=TIMESTAMP},
      </if>
      <if test="code != null">
        code = #{code,jdbcType=VARCHAR},
      </if>
      <if test="maintanceManId != null">
        maintance_man_id = #{maintanceManId,jdbcType=BIGINT},
      </if>
      <if test="maintanceManCode != null">
        maintance_man_code = #{maintanceManCode,jdbcType=VARCHAR},
      </if>
      <if test="maintanceManName != null">
        maintance_man_name = #{maintanceManName,jdbcType=VARCHAR},
      </if>
      <if test="warehouseAreaId != null">
        warehouse_area_id = #{warehouseAreaId,jdbcType=BIGINT},
      </if>
      <if test="warehouseAreaName != null">
        warehouse_area_name = #{warehouseAreaName,jdbcType=VARCHAR},
      </if>
      <if test="maintanceType != null">
        maintance_type = #{maintanceType,jdbcType=INTEGER},
      </if>
      <if test="goodsType != null">
        goods_type = #{goodsType,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="createrId != null">
        creater_id = #{createrId,jdbcType=BIGINT},
      </if>
      <if test="createrCode != null">
        creater_code = #{createrCode,jdbcType=VARCHAR},
      </if>
      <if test="createrName != null">
        creater_name = #{createrName,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="modifierId != null">
        modifier_id = #{modifierId,jdbcType=BIGINT},
      </if>
      <if test="modifierCode != null">
        modifier_code = #{modifierCode,jdbcType=VARCHAR},
      </if>
      <if test="modifierName != null">
        modifier_name = #{modifierName,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.rograndec.feijiayun.chain.business.storage.maintance.entity.GoodsMaintance">
    update saas_goods_maintance
    set enterprise_id = #{enterpriseId,jdbcType=BIGINT},
      parent_id = #{parentId,jdbcType=BIGINT},
      order_type = #{orderType,jdbcType=INTEGER},
      maintance_date = #{maintanceDate,jdbcType=TIMESTAMP},
      code = #{code,jdbcType=VARCHAR},
      maintance_man_id = #{maintanceManId,jdbcType=BIGINT},
      maintance_man_code = #{maintanceManCode,jdbcType=VARCHAR},
      maintance_man_name = #{maintanceManName,jdbcType=VARCHAR},
      warehouse_area_id = #{warehouseAreaId,jdbcType=BIGINT},
      warehouse_area_name = #{warehouseAreaName,jdbcType=VARCHAR},
      maintance_type = #{maintanceType,jdbcType=INTEGER},
      goods_type = #{goodsType,jdbcType=INTEGER},
      status = #{status,jdbcType=INTEGER},
      remark = #{remark,jdbcType=VARCHAR},
      creater_id = #{createrId,jdbcType=BIGINT},
      creater_code = #{createrCode,jdbcType=VARCHAR},
      creater_name = #{createrName,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      modifier_id = #{modifierId,jdbcType=BIGINT},
      modifier_code = #{modifierCode,jdbcType=VARCHAR},
      modifier_name = #{modifierName,jdbcType=VARCHAR},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>

  <select id="getWillMaintanceOrderList" resultType="com.rograndec.feijiayun.chain.business.storage.maintance.vo.ShowGoodsMaintanceVO">
    <!-- 养护计划的数据 -->
    <!-- 非近效期数据 非拆零的-->
    SELECT
    group_concat(st.goods_id) AS ids,<!--商品id集合-->
    shelf.warehouse_area_id as warehouseAreaId,<!--库区id-->
    storage.maintenance_type as maintanceType,<!--养护类型（0-常规养护；1-重点养护）-->
    case goods.goods_attribute
    when 2 then 1
    ELSE goods.goods_attribute
    END as goodsType,<!--药品类型-->
    DATE_FORMAT(ADDDATE(st.last_maintain_time,
      CASE storage.maintenance_cycle_unit
      when 0
      then storage.maintenance_cycle
      when 1
      then storage.maintenance_cycle * 30
      WHEN 2
      then storage.maintenance_cycle * 365
      end <!-- 养护周期(天数) -->
    ),'%Y-%m-%d') maintanceDate<!-- 养护日期 库存表的上次养护时间+养护周期 -->
    ,CASE storage.near_effect_period_unit
    when 0
    then storage.near_effect_period
    when 1
    then storage.near_effect_period * 30
    WHEN 2
    then storage.near_effect_period * 365
    end as nearEffectPeriod <!-- 商品设置的近效期天数 -->
    ,DATE_FORMAT(lot.valid_until,'%Y%m%d') - DATE_FORMAT(now(),'%Y%m%d') validDays<!-- 批号表里的失效日期距离当前日期的天数 -->
    FROM
    saas_stock st
    JOIN saas_goods goods
    ON goods.id = st.goods_id and goods.enterprise_id = st.enterprise_id
    JOIN saas_warehouse_shelf shelf
    ON st.shelf_id = shelf.id
    JOIN saas_lot_number lot
    ON goods.id = lot.goods_id and goods.enterprise_id = lot.enterprise_id
    LEFT JOIN saas_goods_storage storage
    ON goods.id = storage.goods_id and goods.enterprise_id = storage.enterprise_id
    WHERE st.enterprise_id =#{enterpriseId}
    <!--未养护完成的商品不能再次养护-->
    and goods.id not in (select goods_id from saas_goods_maintance_detail where enterprise_id=#{enterpriseId} and status =32)
    <!-- 检查跟养护只限于商品的品种类别是药品的(0)-->
    and goods.business_variety = 0
    <!--非拆零的-->
    and goods.goods_nature != 1
    and goods.status = 1 and goods.valid_flag = 1
    and DATE_FORMAT(lot.valid_until,'%Y%m%d') - DATE_FORMAT(now(),'%Y%m%d') > 0
    <!--非近效期商品的养护-->
    and (DATE_FORMAT(lot.valid_until,'%Y%m%d') - DATE_FORMAT(now(),'%Y%m%d'))<!-- 批号表里的失效日期距离当前日期的天数 -->
        >
        (CASE storage.near_effect_period_unit
        when 0
        then storage.near_effect_period
        when 1
        then storage.near_effect_period * 30
        WHEN 2
        then storage.near_effect_period * 365
        end) <!-- 商品设置的近效期天数 -->
    <if test="startDate != null and endDate!= null">
      and DATE_FORMAT(ADDDATE(st.last_maintain_time,
      CASE storage.maintenance_cycle_unit
      when 0
      then storage.maintenance_cycle
      when 1
      then storage.maintenance_cycle * 30
      WHEN 2
      then storage.maintenance_cycle * 365
      end <!-- 养护周期(天数) -->
      ),'%Y-%m-%d') between #{startDate} and #{endDate}
    </if>
    GROUP BY shelf.warehouse_area_id,storage.maintenance_type,goods.goods_attribute,maintanceDate
    <if test="orderName != null and orderType != null">
      order by ${orderName} ${orderType}
    </if>
    union all
    <!-- 非近效期数据 拆零的-->
    SELECT
    group_concat(st.goods_id) AS ids,<!--商品id集合-->
    shelf.warehouse_area_id as warehouseAreaId,<!--库区id-->
    storage.maintenance_type as maintanceType,<!--养护类型（0-常规养护；1-重点养护）-->
    2 as goodsAttribute,<!--商品属性 默认2是拆零-->
    DATE_FORMAT(ADDDATE(st.last_maintain_time,
      CASE storage.maintenance_cycle_unit
      when 0
      then storage.maintenance_cycle
      when 1
      then storage.maintenance_cycle * 30
      WHEN 2
      then storage.maintenance_cycle * 365
      end <!-- 养护周期(天数) -->
    ),'%Y-%m-%d') maintanceDate<!-- 养护日期 库存表的上次养护时间+养护周期 -->
    ,CASE storage.near_effect_period_unit
    when 0
    then storage.near_effect_period
    when 1
    then storage.near_effect_period * 30
    WHEN 2
    then storage.near_effect_period * 365
    end as nearEffectPeriod <!-- 商品设置的近效期天数 -->
    ,DATE_FORMAT(lot.valid_until,'%Y%m%d') - DATE_FORMAT(now(),'%Y%m%d') validDays<!-- 批号表里的失效日期距离当前日期的天数 -->
    FROM
    saas_stock st
    JOIN saas_goods goods
    ON goods.id = st.goods_id and goods.enterprise_id = st.enterprise_id
    JOIN saas_warehouse_shelf shelf
    ON st.shelf_id = shelf.id
    JOIN saas_lot_number lot
    ON goods.id = lot.goods_id and goods.enterprise_id = lot.enterprise_id
    LEFT JOIN saas_goods_storage storage
    ON goods.id = storage.goods_id and goods.enterprise_id = storage.enterprise_id
    WHERE st.enterprise_id =#{enterpriseId}
    <!--未养护完成的商品不能再次养护-->
    and goods.id not in (select goods_id from saas_goods_maintance_detail where enterprise_id=#{enterpriseId} and status =32)
    <!-- 检查跟养护只限于商品的品种类别是药品的(0)-->
    and goods.business_variety = 0
    <!--拆零的-->
    and goods.goods_nature = 1
    and goods.status = 1 and goods.valid_flag = 1
    and DATE_FORMAT(lot.valid_until,'%Y%m%d') - DATE_FORMAT(now(),'%Y%m%d') > 0
    <!--非近效期商品的养护-->
    and (DATE_FORMAT(lot.valid_until,'%Y%m%d') - DATE_FORMAT(now(),'%Y%m%d'))<!-- 批号表里的失效日期距离当前日期的天数 -->
        >
        (CASE storage.near_effect_period_unit
        when 0
        then storage.near_effect_period
        when 1
        then storage.near_effect_period * 30
        WHEN 2
        then storage.near_effect_period * 365
        end) <!-- 商品设置的近效期天数 -->
    <if test="startDate != null and endDate!= null">
      and DATE_FORMAT(ADDDATE(st.last_maintain_time,
      CASE storage.maintenance_cycle_unit
      when 0
      then storage.maintenance_cycle
      when 1
      then storage.maintenance_cycle * 30
      WHEN 2
      then storage.maintenance_cycle * 365
      end <!-- 养护周期(天数) -->
      ),'%Y-%m-%d') between #{startDate} and #{endDate}
    </if>
    GROUP BY shelf.warehouse_area_id,storage.maintenance_type,goods.goods_attribute,maintanceDate
    <if test="orderName != null and orderType != null">
      order by ${orderName} ${orderType}
    </if>
    union all
    <!-- 近效期数据-->
    SELECT
    group_concat(st.goods_id) AS ids,<!--商品id集合-->
    shelf.warehouse_area_id as warehouseAreaId,<!--库区id-->
    1 as maintanceType,<!--养护类型（0-常规养护；1-重点养护）-->
    3 as goodsAttribute,<!--商品属性 默认3是近效期-->
    DATE_FORMAT(ADDDATE(st.last_maintain_time,
    CASE storage.maintenance_cycle_unit
    when 0
    then storage.maintenance_cycle
    when 1
    then storage.maintenance_cycle * 30
    WHEN 2
    then storage.maintenance_cycle * 365
    end <!-- 养护周期(天数) -->
    ),'%Y-%m-%d') maintanceDate<!-- 养护日期 库存表的上次养护时间+养护周期 -->
    ,CASE storage.near_effect_period_unit
    when 0
    then storage.near_effect_period
    when 1
    then storage.near_effect_period * 30
    WHEN 2
    then storage.near_effect_period * 365
    end as nearEffectPeriod <!-- 商品设置的近效期天数 -->
    ,DATE_FORMAT(lot.valid_until,'%Y%m%d') - DATE_FORMAT(now(),'%Y%m%d') validDays<!-- 批号表里的失效日期距离当前日期的天数 -->
    FROM
    saas_stock st
    JOIN saas_goods goods
    ON goods.id = st.goods_id and goods.enterprise_id = st.enterprise_id
    JOIN saas_warehouse_shelf shelf
    ON st.shelf_id = shelf.id
    JOIN saas_lot_number lot
    ON goods.id = lot.goods_id and goods.enterprise_id = lot.enterprise_id
    LEFT JOIN saas_goods_storage storage
    ON goods.id = storage.goods_id and goods.enterprise_id = storage.enterprise_id
    WHERE st.enterprise_id =#{enterpriseId}
    <!--未养护完成的商品不能再次养护-->
    and goods.id not in (select goods_id from saas_goods_maintance_detail where enterprise_id=#{enterpriseId} and status =32)
    <!-- 检查跟养护只限于商品的品种类别是药品的(0)-->
    and goods.business_variety = 0
    <!--非拆零的-->
    and goods.goods_nature != 1
    and goods.status = 1 and goods.valid_flag = 1
    and DATE_FORMAT(lot.valid_until,'%Y%m%d') - DATE_FORMAT(now(),'%Y%m%d') > 0
    <!--近效期商品的养护-->
    and
    (CASE storage.near_effect_period_unit
    when 0
    then storage.near_effect_period
    when 1
    then storage.near_effect_period * 30
    WHEN 2
    then storage.near_effect_period * 365
    end) <!-- 商品设置的近效期天数 -->
    >=
    (DATE_FORMAT(lot.valid_until,'%Y%m%d') - DATE_FORMAT(now(),'%Y%m%d'))<!-- 批号表里的失效日期距离当前日期的天数 -->
    <if test="startDate != null and endDate!= null">
      and DATE_FORMAT(ADDDATE(st.last_maintain_time,
      CASE storage.maintenance_cycle_unit
      when 0
      then storage.maintenance_cycle
      when 1
      then storage.maintenance_cycle * 30
      WHEN 2
      then storage.maintenance_cycle * 365
      end <!-- 养护周期(天数) -->
      ),'%Y-%m-%d') between #{startDate} and #{endDate}
    </if>
    GROUP BY shelf.warehouse_area_id,storage.maintenance_type,goods.goods_attribute,maintanceDate
    <if test="orderName != null and orderType != null">
      order by ${orderName} ${orderType}
    </if>
  </select>
</mapper>