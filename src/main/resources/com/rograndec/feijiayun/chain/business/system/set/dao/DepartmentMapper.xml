<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.rograndec.feijiayun.chain.business.system.set.dao.DepartmentMapper">
  <resultMap id="BaseResultMap" type="com.rograndec.feijiayun.chain.business.system.set.entity.Department">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="parent_dept_id" jdbcType="BIGINT" property="parentDeptId" />
    <result column="enterprise_id" jdbcType="BIGINT" property="enterpriseId" />
    <result column="parent_id" jdbcType="BIGINT" property="parentId" />
    <result column="code" jdbcType="VARCHAR" property="code" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="sys_type" jdbcType="INTEGER" property="sysType" />
    <result column="status" jdbcType="INTEGER" property="status"/>
    <result column="remark" jdbcType="VARCHAR" property="remark" />
    <result column="creater_id" jdbcType="BIGINT" property="createrId" />
    <result column="creater_code" jdbcType="VARCHAR" property="createrCode" />
    <result column="creater_name" jdbcType="VARCHAR" property="createrName" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="modifier_id" jdbcType="BIGINT" property="modifierId" />
    <result column="modifier_code" jdbcType="VARCHAR" property="modifierCode" />
    <result column="modifier_name" jdbcType="VARCHAR" property="modifierName" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <sql id="Base_Column_List">
    id, parent_dept_id, enterprise_id, parent_id, code, name, sys_type, status, remark, creater_id, 
    creater_code, creater_name, create_time, modifier_id, modifier_code, modifier_name, 
    update_time
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from saas_department
    where id = #{id,jdbcType=BIGINT}
  </select>

  <select id="selectByIds" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List"/>
    from saas_department
    where id in
    <foreach item="item" index="index" collection="list"
             open="(" separator="," close=")">
      #{item}
    </foreach>
    order by code asc
  </select>


  <select id="selectByEnterpriseId" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from saas_department
    where enterprise_id = #{enterpriseId,jdbcType=BIGINT} and status = 1 and sys_type = 0
    union all
    select
    <include refid="Base_Column_List" />
    from saas_department
    where enterprise_id = 0 and sys_type = 1
  </select>

  <select id="selectAllByEnterprise" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from saas_department
    where (enterprise_id = #{enterpriseId,jdbcType=BIGINT} or parent_id = #{enterpriseId,jdbcType=BIGINT}) and status = 1 and sys_type = 0
    union all
    select
    <include refid="Base_Column_List" />
    from saas_department
    where enterprise_id = 0 and sys_type = 1
  </select>

  <select id="selectByEnterpriseIdAndDefut" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from saas_department
    where (enterprise_id = #{enterpriseId,jdbcType=BIGINT} or enterprise_id = 0) and status = 1
  </select>

  <select id="selectByEnterpriseIdByHeadquarters" parameterType="hashmap" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from saas_department
    <if test="isHeadquarters==0">
      where enterprise_id = #{enterpriseId,jdbcType=BIGINT}
    </if>
    <if test="isHeadquarters==1">
      where parent_id = #{enterpriseId,jdbcType=BIGINT}
    </if>


  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from saas_department
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.rograndec.feijiayun.chain.business.system.set.entity.Department" useGeneratedKeys="true" keyProperty="id">
    insert into saas_department (id, parent_dept_id, enterprise_id, 
      parent_id, code, name, 
      sys_type, status, remark, creater_id, 
      creater_code, creater_name, create_time, 
      modifier_id, modifier_code, modifier_name, 
      update_time)
    values (#{id,jdbcType=BIGINT}, #{parentDeptId,jdbcType=BIGINT}, #{enterpriseId,jdbcType=BIGINT}, 
      #{parentId,jdbcType=BIGINT}, #{code,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, 
      #{sysType,jdbcType=INTEGER}, #{status,jdbcType=INTEGER}, #{remark,jdbcType=VARCHAR}, #{createrId,jdbcType=BIGINT}, 
      #{createrCode,jdbcType=VARCHAR}, #{createrName,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, 
      #{modifierId,jdbcType=BIGINT}, #{modifierCode,jdbcType=VARCHAR}, #{modifierName,jdbcType=VARCHAR}, 
      #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.rograndec.feijiayun.chain.business.system.set.entity.Department" useGeneratedKeys="true" keyProperty="id">
    insert into saas_department
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="parentDeptId != null">
        parent_dept_id,
      </if>
      <if test="enterpriseId != null">
        enterprise_id,
      </if>
      <if test="parentId != null">
        parent_id,
      </if>
      <if test="code != null">
        code,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="sysType != null">
        sys_type,
      </if>
      <if test="status != null">
      	status,
      </if>
      <if test="remark != null">
        remark,
      </if>
      <if test="createrId != null">
        creater_id,
      </if>
      <if test="createrCode != null">
        creater_code,
      </if>
      <if test="createrName != null">
        creater_name,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="modifierId != null">
        modifier_id,
      </if>
      <if test="modifierCode != null">
        modifier_code,
      </if>
      <if test="modifierName != null">
        modifier_name,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="parentDeptId != null">
        #{parentDeptId,jdbcType=BIGINT},
      </if>
      <if test="enterpriseId != null">
        #{enterpriseId,jdbcType=BIGINT},
      </if>
      <if test="parentId != null">
        #{parentId,jdbcType=BIGINT},
      </if>
      <if test="code != null">
        #{code,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="sysType != null">
        #{sysType,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="createrId != null">
        #{createrId,jdbcType=BIGINT},
      </if>
      <if test="createrCode != null">
        #{createrCode,jdbcType=VARCHAR},
      </if>
      <if test="createrName != null">
        #{createrName,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="modifierId != null">
        #{modifierId,jdbcType=BIGINT},
      </if>
      <if test="modifierCode != null">
        #{modifierCode,jdbcType=VARCHAR},
      </if>
      <if test="modifierName != null">
        #{modifierName,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.rograndec.feijiayun.chain.business.system.set.entity.Department">
    update saas_department
    <set>
      <if test="parentDeptId != null">
        parent_dept_id = #{parentDeptId,jdbcType=BIGINT},
      </if>
      <if test="enterpriseId != null">
        enterprise_id = #{enterpriseId,jdbcType=BIGINT},
      </if>
      <if test="parentId != null">
        parent_id = #{parentId,jdbcType=BIGINT},
      </if>
      <if test="code != null">
        code = #{code,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="sysType != null">
        sys_type = #{sysType,jdbcType=INTEGER},
      </if>
      <if test="status != null">
      	status = #{status,jdbcType=INTEGER}
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="createrId != null">
        creater_id = #{createrId,jdbcType=BIGINT},
      </if>
      <if test="createrCode != null">
        creater_code = #{createrCode,jdbcType=VARCHAR},
      </if>
      <if test="createrName != null">
        creater_name = #{createrName,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="modifierId != null">
        modifier_id = #{modifierId,jdbcType=BIGINT},
      </if>
      <if test="modifierCode != null">
        modifier_code = #{modifierCode,jdbcType=VARCHAR},
      </if>
      <if test="modifierName != null">
        modifier_name = #{modifierName,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.rograndec.feijiayun.chain.business.system.set.entity.Department">
    update saas_department
    set parent_dept_id = #{parentDeptId,jdbcType=BIGINT},
      enterprise_id = #{enterpriseId,jdbcType=BIGINT},
      parent_id = #{parentId,jdbcType=BIGINT},
      code = #{code,jdbcType=VARCHAR},
      name = #{name,jdbcType=VARCHAR},
      sys_type = #{sysType,jdbcType=INTEGER},
      status = #{status,jdbcType=INTEGER},
      remark = #{remark,jdbcType=VARCHAR},
      creater_id = #{createrId,jdbcType=BIGINT},
      creater_code = #{createrCode,jdbcType=VARCHAR},
      creater_name = #{createrName,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      modifier_id = #{modifierId,jdbcType=BIGINT},
      modifier_code = #{modifierCode,jdbcType=VARCHAR},
      modifier_name = #{modifierName,jdbcType=VARCHAR},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>

  <select id="selectByEnterpriseId2Report"  parameterType="java.lang.Long" resultMap="BaseResultMap">
    select id,parent_dept_id,enterprise_id,parent_id,code,name,sys_type,status,
    remark,creater_id,creater_code,creater_name,create_time,modifier_id,
    modifier_code,modifier_name,status,update_time
    from saas_department where
    enterprise_id = #{enterpriseId}
    union
    select id,parent_dept_id,enterprise_id,parent_id,code,name,sys_type,status,
    remark,creater_id,creater_code,creater_name,create_time,modifier_id,
    modifier_code,modifier_name,status,update_time
    from saas_department where sys_type = '1'
    ORDER BY code
  </select>


  <select id="selectByCurrentUser" parameterType="com.rograndec.feijiayun.chain.common.vo.UserVO" resultMap="BaseResultMap">
  	select id,parent_dept_id,enterprise_id,parent_id,code,name,sys_type,status,
  	remark,creater_id,creater_code,creater_name,create_time,modifier_id,
  	modifier_code,modifier_name,status,update_time
  	from saas_department where 
  	enterprise_id = #{enterpriseId}
  	union
  	select id,parent_dept_id,enterprise_id,parent_id,code,name,sys_type,status,
  	remark,creater_id,creater_code,creater_name,create_time,modifier_id,
  	modifier_code,modifier_name,status,update_time
  	from saas_department where sys_type = '1'
  	ORDER BY code 
  </select>
  <insert id="addDepartMent">
  	insert into saas_department (parent_dept_id,enterprise_id,parent_id,code,name,
	sys_type,remark,creater_id,creater_code,creater_name,create_time,modifier_id,
	modifier_code,modifier_name,update_time,status) values (#{department.parentDeptId,jdbcType=BIGINT}, #{user.enterpriseId}, 
      #{user.parentId}, #{department.code,jdbcType=VARCHAR}, #{department.name,jdbcType=VARCHAR}, 
      '0', #{department.remark,jdbcType=VARCHAR}, #{user.userId}, 
      #{user.userCode}, #{user.userName}, NOW(), 
      #{user.userId}, 
      #{user.userCode}, #{user.userName}, NOW(),#{department.status,jdbcType=INTEGER})
  </insert>
  <delete id="deleteDepartMent" parameterType="java.lang.Integer">
    delete from saas_department
    where id = #{id}
  </delete>
  <update id="updateDepartMentOrganization">
  	update saas_department
    set parent_dept_id = #{department.parentDeptId,jdbcType=BIGINT},
      code = #{department.code,jdbcType=VARCHAR},
      name = #{department.name,jdbcType=VARCHAR},
      remark = #{department.remark,jdbcType=VARCHAR},
      status = #{department.status,jdbcType=INTEGER},
      modifier_id = #{user.userId},
      modifier_code = #{user.userCode},
      modifier_name = #{user.userName},
      update_time = NOW()
    where id = #{department.id,jdbcType=BIGINT}
  </update>
  <select id="findDepartMent" resultMap="BaseResultMap">
  	select id,code,name from saas_department
  	where enterprise_id = #{arg0} and status = '1'
  	union
  	select id,code,name from saas_department
  	where sys_type = '1' and status = '1'
  </select>
  <select id="selectSonDepartment" resultType="java.lang.Integer">
  	select 
    count(id)
    from saas_department
    WHERE parent_dept_id = #{id}
  </select>
  <select id="selectByDeptIds" resultMap="BaseResultMap">
    select id,parent_dept_id,enterprise_id,parent_id,code,name,sys_type,status,
  	remark,creater_id,creater_code,creater_name,create_time,modifier_id,
  	modifier_code,modifier_name,status,update_time
  	from saas_department where
    1 =1
    <if test="deptIds != null and deptIds != ''">
    AND id IN
    <foreach item="item" index="index" collection="deptIds"
             open="(" separator="," close=")">
      #{item}
    </foreach>
    </if>
    <if test="chainType == 0">
      AND (enterprise_id = #{enterpriseId}  or sys_type = 1 )
    </if>
    <if test="chainType != 0">
      and (enterprise_id = #{parentId}  )
    </if>
    ORDER BY code
  </select>
    <select id="hasDepartmentName"
            resultMap="BaseResultMap">
      SELECT
      <include refid="Base_Column_List" />
      from saas_department
      where name = #{name}
      and (enterprise_id = #{enterpriseId} or sys_type = '1')
    </select>
  <select id="hasDepartmentCode"
          resultMap="BaseResultMap">
    SELECT
    <include refid="Base_Column_List" />
    from saas_department
    where code = #{code}
    and (enterprise_id = #{enterpriseId} or sys_type = '1')
  </select>
</mapper>