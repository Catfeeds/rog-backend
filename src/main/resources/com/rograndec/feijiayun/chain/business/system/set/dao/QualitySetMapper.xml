<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.rograndec.feijiayun.chain.business.system.set.dao.QualitySetMapper">
  <resultMap id="BaseResultMap" type="com.rograndec.feijiayun.chain.business.system.set.entity.QualitySet">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="enterprise_id" jdbcType="BIGINT" property="enterpriseId" />
    <result column="sys_type" jdbcType="INTEGER" property="sysType" />
    <result column="set_type" jdbcType="INTEGER" property="setType" />
    <result column="code" jdbcType="VARCHAR" property="code" />
    <result column="description" jdbcType="VARCHAR" property="description" />
    <result column="type" jdbcType="INTEGER" property="type" />
    <result column="have_file" jdbcType="INTEGER" property="haveFile" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
    <result column="creater_id" jdbcType="BIGINT" property="createrId" />
    <result column="creater_code" jdbcType="VARCHAR" property="createrCode" />
    <result column="creater_name" jdbcType="VARCHAR" property="createrName" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="modifier_id" jdbcType="BIGINT" property="modifierId" />
    <result column="modifier_code" jdbcType="VARCHAR" property="modifierCode" />
    <result column="modifier_name" jdbcType="VARCHAR" property="modifierName" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>

  <resultMap id="BaseResultMapVO" type="com.rograndec.feijiayun.chain.business.system.set.vo.QualitySetVO" extends="BaseResultMap">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="sys_type" jdbcType="INTEGER" property="sysType" />
    <result column="set_type" jdbcType="INTEGER" property="setType" />
    <result column="code" jdbcType="VARCHAR" property="code" />
    <result column="description" jdbcType="VARCHAR" property="description" />
    <result column="type" jdbcType="INTEGER" property="type" />
    <result column="have_file" jdbcType="INTEGER" property="haveFile" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
  </resultMap>
  <sql id="Base_Column_List">
    id, enterprise_id, sys_type, set_type, code, description, type, have_file, status, 
    remark, creater_id, creater_code, creater_name, create_time, modifier_id, modifier_code, 
    modifier_name, update_time
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from saas_quality_set
    where id = #{id,jdbcType=BIGINT}
  </select>

  <select id="selectByCode" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from saas_quality_set
    where code = #{code,jdbcType=VARCHAR} and set_type = #{setType,jdbcType=INTEGER}
  </select>

  <select id="selectByIds" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from saas_quality_set
    where id IN
    <foreach item="item" index="index" collection="list"
             open="(" separator="," close=")">
      #{item}
    </foreach>
  </select>

  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from saas_quality_set
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.rograndec.feijiayun.chain.business.system.set.entity.QualitySet">
    insert into saas_quality_set (id, enterprise_id, sys_type, 
      set_type, code, description, 
      type, have_file, status, 
      remark, creater_id, creater_code, 
      creater_name, create_time, modifier_id, 
      modifier_code, modifier_name, update_time
      )
    values (#{id,jdbcType=BIGINT}, #{enterpriseId,jdbcType=BIGINT}, #{sysType,jdbcType=INTEGER}, 
      #{setType,jdbcType=INTEGER}, #{code,jdbcType=VARCHAR}, #{description,jdbcType=VARCHAR}, 
      #{type,jdbcType=INTEGER}, #{haveFile,jdbcType=INTEGER}, #{status,jdbcType=INTEGER}, 
      #{remark,jdbcType=VARCHAR}, #{createrId,jdbcType=BIGINT}, #{createrCode,jdbcType=VARCHAR}, 
      #{createrName,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{modifierId,jdbcType=BIGINT}, 
      #{modifierCode,jdbcType=VARCHAR}, #{modifierName,jdbcType=VARCHAR}, #{updateTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.rograndec.feijiayun.chain.business.system.set.entity.QualitySet">
    insert into saas_quality_set
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="enterpriseId != null">
        enterprise_id,
      </if>
      <if test="sysType != null">
        sys_type,
      </if>
      <if test="setType != null">
        set_type,
      </if>
      <if test="code != null">
        code,
      </if>
      <if test="description != null">
        description,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="haveFile != null">
        have_file,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="remark != null">
        remark,
      </if>
      <if test="createrId != null">
        creater_id,
      </if>
      <if test="createrCode != null">
        creater_code,
      </if>
      <if test="createrName != null">
        creater_name,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="modifierId != null">
        modifier_id,
      </if>
      <if test="modifierCode != null">
        modifier_code,
      </if>
      <if test="modifierName != null">
        modifier_name,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="enterpriseId != null">
        #{enterpriseId,jdbcType=BIGINT},
      </if>
      <if test="sysType != null">
        #{sysType,jdbcType=INTEGER},
      </if>
      <if test="setType != null">
        #{setType,jdbcType=INTEGER},
      </if>
      <if test="code != null">
        #{code,jdbcType=VARCHAR},
      </if>
      <if test="description != null">
        #{description,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        #{type,jdbcType=INTEGER},
      </if>
      <if test="haveFile != null">
        #{haveFile,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="createrId != null">
        #{createrId,jdbcType=BIGINT},
      </if>
      <if test="createrCode != null">
        #{createrCode,jdbcType=VARCHAR},
      </if>
      <if test="createrName != null">
        #{createrName,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="modifierId != null">
        #{modifierId,jdbcType=BIGINT},
      </if>
      <if test="modifierCode != null">
        #{modifierCode,jdbcType=VARCHAR},
      </if>
      <if test="modifierName != null">
        #{modifierName,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.rograndec.feijiayun.chain.business.system.set.entity.QualitySet">
    update saas_quality_set
    <set>
      <if test="enterpriseId != null">
        enterprise_id = #{enterpriseId,jdbcType=BIGINT},
      </if>
      <if test="sysType != null">
        sys_type = #{sysType,jdbcType=INTEGER},
      </if>
      <if test="setType != null">
        set_type = #{setType,jdbcType=INTEGER},
      </if>
      <if test="code != null">
        code = #{code,jdbcType=VARCHAR},
      </if>
      <if test="description != null">
        description = #{description,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        type = #{type,jdbcType=INTEGER},
      </if>
      <if test="haveFile != null">
        have_file = #{haveFile,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="createrId != null">
        creater_id = #{createrId,jdbcType=BIGINT},
      </if>
      <if test="createrCode != null">
        creater_code = #{createrCode,jdbcType=VARCHAR},
      </if>
      <if test="createrName != null">
        creater_name = #{createrName,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="modifierId != null">
        modifier_id = #{modifierId,jdbcType=BIGINT},
      </if>
      <if test="modifierCode != null">
        modifier_code = #{modifierCode,jdbcType=VARCHAR},
      </if>
      <if test="modifierName != null">
        modifier_name = #{modifierName,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.rograndec.feijiayun.chain.business.system.set.entity.QualitySet">
    update saas_quality_set
    set enterprise_id = #{enterpriseId,jdbcType=BIGINT},
      sys_type = #{sysType,jdbcType=INTEGER},
      set_type = #{setType,jdbcType=INTEGER},
      code = #{code,jdbcType=VARCHAR},
      description = #{description,jdbcType=VARCHAR},
      type = #{type,jdbcType=INTEGER},
      have_file = #{haveFile,jdbcType=INTEGER},
      status = #{status,jdbcType=INTEGER},
      remark = #{remark,jdbcType=VARCHAR},
      creater_id = #{createrId,jdbcType=BIGINT},
      creater_code = #{createrCode,jdbcType=VARCHAR},
      creater_name = #{createrName,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      modifier_id = #{modifierId,jdbcType=BIGINT},
      modifier_code = #{modifierCode,jdbcType=VARCHAR},
      modifier_name = #{modifierName,jdbcType=VARCHAR},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <select id="getQualitySettingsByUser" resultMap="BaseResultMap">
  	select id, enterprise_id, sys_type, set_type, code, description, type, have_file, status, 
    remark, creater_id, creater_code, creater_name, create_time, modifier_id, modifier_code, 
    modifier_name, update_time from saas_quality_set 
    where enterprise_id = #{user.enterpriseId} and set_type = #{setType}
    <if test="type != null">
      and type = #{type}
    </if>
    union
    select id, enterprise_id, sys_type, set_type, code, description, type, have_file, status, 
    remark, creater_id, creater_code, creater_name, create_time, modifier_id, modifier_code, 
    modifier_name, update_time from saas_quality_set 
    where sys_type = '1' and set_type = #{setType}
    <if test="type != null">
      and type = #{type}
    </if>
    order by id desc
  </select>
  <insert id="addQualitySettings">
  	insert into saas_quality_set (enterprise_id, sys_type, 
      set_type, code, description, 
      type, have_file, status, 
      remark, creater_id, creater_code, 
      creater_name, create_time, modifier_id, 
      modifier_code, modifier_name, update_time
      )
    values (#{user.enterpriseId}, '0', 
      #{qualitySet.setType,jdbcType=INTEGER}, #{qualitySet.code,jdbcType=VARCHAR}, #{qualitySet.description,jdbcType=VARCHAR}, 
      #{qualitySet.type,jdbcType=INTEGER}, #{qualitySet.haveFile,jdbcType=INTEGER}, #{qualitySet.status,jdbcType=INTEGER}, 
      #{qualitySet.remark,jdbcType=VARCHAR}, #{user.userId}, #{user.userCode}, 
      #{user.userName}, NOW(), #{user.userId}, #{user.userCode}, 
      #{user.userName}, NOW()
      )
  </insert>
  <select id="getQualitySettingsById" resultMap="BaseResultMap">
  	select id, enterprise_id, sys_type, set_type, code, description, type, have_file, status, 
    remark, creater_id, creater_code, creater_name, create_time, modifier_id, modifier_code, 
    modifier_name, update_time from saas_quality_set 
    where enterprise_id = #{user.parentId} and set_type = #{setType}
    <if test="type != null">
      and type = #{type}
    </if>
    union
    select id, enterprise_id, sys_type, set_type, code, description, type, have_file, status, 
    remark, creater_id, creater_code, creater_name, create_time, modifier_id, modifier_code, 
    modifier_name, update_time from saas_quality_set 
    where sys_type = '1' and set_type = #{setType}
    <if test="type != null">
      and type = #{type}
    </if>
    order by id desc
  </select>
  <update id="updateQualitySettings">
  	update saas_quality_set
    set 
      set_type = #{qualitySet.setType,jdbcType=INTEGER},
      code = #{qualitySet.code,jdbcType=VARCHAR},
      description = #{qualitySet.description,jdbcType=VARCHAR},
      type = #{qualitySet.type,jdbcType=INTEGER},
      have_file = #{qualitySet.haveFile,jdbcType=INTEGER},
      status = #{qualitySet.status,jdbcType=INTEGER},
      remark = #{qualitySet.remark,jdbcType=VARCHAR},
      modifier_id = #{user.userId,jdbcType=BIGINT},
      modifier_code = #{user.userCode,jdbcType=VARCHAR},
      modifier_name = #{user.userName,jdbcType=VARCHAR},
      update_time = NOW()
    where id = #{qualitySet.id,jdbcType=BIGINT}
  </update>
  <select id="findCheckTypes" resultMap="BaseResultMap">
  	select id,code,description from saas_quality_set
  	where set_type = '4' and enterprise_id = #{arg0}
  	and status = '1'
  	union
  	select id,code,description from saas_quality_set
  	where set_type = '4' and sys_type = '1'
  </select>
  <select id="getQualitySetVOList" resultMap="BaseResultMapVO">
    SELECT
    id, sys_type, set_type, code, description, type, have_file, status
    FROM saas_quality_set qset
    WHERE 1=1
    <if test="setType != null">
      AND  qset.set_type = #{setType}
    </if>
    <if test="enterpriseId != null">
      AND qset.enterprise_id = #{enterpriseId}
    </if>
    <if test="type != null">
      AND qset.type = #{type}
    </if>
    <if test="status != null">
      AND qset.status = #{status}
    </if>
    union all
    SELECT
    id, sys_type, set_type, code, description, type, have_file, status
    FROM saas_quality_set qset
    WHERE 1=1
    <if test="setType != null">
      AND  qset.set_type = #{setType}
    </if>
    <if test="enterpriseId != null">
      AND qset.enterprise_id = 0
    </if>
    <if test="type != null">
      AND qset.type = #{type}
    </if>
    <if test="status != null">
      AND qset.status = #{status}
    </if>
    order by id desc
  </select>
  <select id="selectCheckProductSelector" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from saas_quality_set
    where (enterprise_id = #{enterpriseId}
    or sys_type = '1')
    and set_type = '4'
    and status = '1'
  </select>
  <select id="hasQualityCode" resultMap="BaseResultMap">
    SELECT
    <include refid="Base_Column_List" />
    FROM saas_quality_set
    WHERE (enterprise_id = #{enterpriseId} or sys_type = '1')
    AND set_type = #{setType}
    AND code = #{code}
  </select>
  <select id="hasQualityDescription" resultMap="BaseResultMap">
    SELECT
    <include refid="Base_Column_List" />
    FROM saas_quality_set
    WHERE (enterprise_id = #{enterpriseId} or sys_type = '1')
    AND set_type = #{setType}
    AND description = #{description}
  </select>
  
   <select id="selectPurchaseReceive" resultType="int">
   SELECT 
	  COUNT(1)
	FROM
	  `saas_purchase_receive_detail` 
	WHERE 1 = 1 
	AND  FIND_IN_SET(#{id},refuse_reason_ids)
	<!--   AND CONCAT(',',`refuse_reason_ids`, ',') REGEXP CONCAT(',(', REPLACE(((#{id})), ',', '|'), '),') -->
  </select>
  
  <select id="selectDistrInReceive" resultType="int">
    SELECT 
	  COUNT(1)
	FROM
	  `saas_distr_in_receive_detail` 
	WHERE 1 = 1 
	AND  FIND_IN_SET(#{id},refuse_reason_ids)
	  <!-- AND CONCAT(',',`refuse_reason_ids`, ',') REGEXP CONCAT(',(', REPLACE(((#{id})), ',', '|'), '),') -->
  </select>
  
  <select id="selectPurchaseCheckLotUnquantity" resultType="int">
    SELECT 
	  COUNT(1)
	FROM
	  `saas_purchase_check_lot` 
	WHERE 1 = 1 
	AND  FIND_IN_SET(#{id},unqualified_reason_ids)
	 <!--  AND CONCAT(',',`unqualified_reason_ids`, ',') REGEXP CONCAT(',(', REPLACE(((#{id})), ',', '|'), '),') -->
  </select>
  
  <select id="selectDistrInCheckLotUnquantity" resultType="int">
    SELECT 
	  COUNT(1)
	FROM
	  `saas_distr_in_check_lot` 
	WHERE 1 = 1 
	AND  FIND_IN_SET(#{id},unqualified_reason_ids)
	<!--   AND CONCAT(',',`unqualified_reason_ids`, ',') REGEXP CONCAT(',(', REPLACE(((#{id})), ',', '|'), '),') -->
  </select>
  
   <select id="selectGoodsMaintanceDetailUnquantity" resultType="int">
     SELECT 
	  COUNT(1)
	FROM
	  `saas_goods_maintance_detail` 
	WHERE 1 = 1 
	AND  FIND_IN_SET(#{id},reason_ids)
	 <!--  AND CONCAT(',',`reason_ids`, ',') REGEXP CONCAT(',(', REPLACE(((#{id})), ',', '|'), '),') -->
  </select>
  
   <select id="selectGoodsDisplayCheckDetailUnquantity" resultType="int">
     SELECT 
	  COUNT(1)
	FROM
	  `saas_goods_display_check_detail` 
	WHERE 1 = 1 
	AND  FIND_IN_SET(#{id},reason_ids)
	 <!--  AND CONCAT(',',`reason_ids`, ',') REGEXP CONCAT(',(', REPLACE(((#{id})), ',', '|'), '),') -->
  </select>
  
   <select id="selectPurchaseCheckLotMeasures" resultType="int">
     SELECT 
	  COUNT(1)
	FROM
	  `saas_purchase_check_lot` 
	WHERE 1 = 1 
	AND  FIND_IN_SET(#{id},measures_ids)
	 <!--  AND CONCAT(',',`measures_ids`, ',') REGEXP CONCAT(',(', REPLACE(((#{id})), ',', '|'), '),') -->
  </select>
  
   <select id="selectDistrInCheckLotMeasures" resultType="int">
    SELECT 
	  COUNT(1)
	FROM
	  `saas_distr_in_check_lot` 
	WHERE 1 = 1 
	AND  FIND_IN_SET(#{id},measures_ids)
	<!--   AND CONCAT(',',`measures_ids`, ',') REGEXP CONCAT(',(', REPLACE(((#{id})), ',', '|'), '),') -->
  </select>
  
   <select id="selectGoodsMaintanceDetailMeasures" resultType="int">
     SELECT 
	  COUNT(1)
	FROM
	  `saas_goods_maintance_detail` 
	WHERE 1 = 1 
	AND  FIND_IN_SET(#{id},handle_measures_ids)
	 <!--  AND CONCAT(',',`handle_measures_ids`, ',') REGEXP CONCAT(',(', REPLACE(((#{id})), ',', '|'), '),') -->
  </select>
  
   <select id="selectGoodsDisplayCheckDetailMeasures" resultType="int">
    SELECT 
	  COUNT(1)
	FROM
	  `saas_goods_display_check_detail` 
	WHERE 1 = 1 
	AND  FIND_IN_SET(#{id},handle_measures_ids)
	 <!--  AND CONCAT(',',`handle_measures_ids`, ',') REGEXP CONCAT(',(', REPLACE(((#{id})), ',', '|'), '),') -->
  </select>
  
  
   <select id="selectMaintenceMaintenceMesures" resultType="int">
    SELECT 
	  COUNT(1)
	FROM
	  `saas_goods_maintance_detail` 
	WHERE 1 = 1 
	AND  FIND_IN_SET(#{id},measures_ids)
	 <!--  AND CONCAT(',',`measures_ids`, ',') REGEXP CONCAT(',(', REPLACE(((#{id})), ',', '|'), '),') -->
  </select>
  
   <select id="selectDisPlayMaintenceMesures" resultType="int">
   SELECT 
	  COUNT(1)
	FROM
	  `saas_goods_display_check_detail` 
	WHERE 1 = 1 
	AND  FIND_IN_SET(#{id},measures_ids)
	<!--   AND CONCAT(',',`measures_ids`, ',') REGEXP CONCAT(',(', REPLACE(((#{id})), ',', '|'), '),') -->
  </select>
  
   <select id="selectPurchaseCheckLotProjects" resultType="int">
    SELECT 
	  COUNT(1)
	FROM
	  `saas_purchase_check_lot` 
	WHERE 1 = 1 
	AND  FIND_IN_SET(#{id},check_project_ids)
	 <!--  AND CONCAT(',',`check_project_ids`, ',') REGEXP CONCAT(',(', REPLACE(((#{id})), ',', '|'), '),') -->
  </select>
  
   <select id="selectDistrInCheckLotProjects" resultType="int">
	  SELECT 
	  COUNT(1)
	FROM
	  `saas_distr_in_check_lot` 
	WHERE 1 = 1 
	AND  FIND_IN_SET(#{id},check_project_ids)
	<!--   AND CONCAT(',',`check_project_ids`, ',') REGEXP CONCAT(',(', REPLACE(((#{id})), ',', '|'), '),') -->
  </select>
  
  <select id="selectPurchaseCheckLotConclusion" resultType="int">
	 SELECT 
	  COUNT(1)
	FROM
	  `saas_purchase_check_lot` 
	WHERE 1 = 1 
	AND  FIND_IN_SET(#{id},conclusion_ids)
	 <!--  AND CONCAT(',',`conclusion_ids`, ',') REGEXP CONCAT(',(', REPLACE(((#{id})), ',', '|'), '),') -->
  </select>
  
  <select id="selectDistrInCheckLotConclusion" resultType="int">
	 SELECT 
	  COUNT(1)
	FROM
	  `saas_distr_in_check_lot` 
	WHERE 1 = 1 
	AND  FIND_IN_SET(#{id},conclusion_ids)
	<!--   AND CONCAT(',',`conclusion_ids`, ',') REGEXP CONCAT(',(', REPLACE(((#{id})), ',', '|'), '),') -->
  </select>
  
   <select id="selectGoodsMaintanceDetailConclusion" resultType="int">
    SELECT 
	  COUNT(1)
	FROM
	  `saas_goods_maintance_detail` 
	WHERE `conclusion_id`=#{id}
  </select>
  
   <select id="selectGoodsDisplayCheckDetailConclusion" resultType="int">
   SELECT 
	  COUNT(1)
	FROM
	  `saas_goods_display_check_detail` 
	WHERE `conclusion_id`=#{id}
  </select>
  
   <select id="selectPurchaseReturnDetailReturn" resultType="int">
	  SELECT 
	  COUNT(1) 
	FROM
	  `saas_purchase_return_detail`
	WHERE 1 = 1 
	AND  FIND_IN_SET(#{id},return_reason_ids)
	<!--   AND CONCAT(',', `return_reason_ids`, ',') REGEXP CONCAT(',(', REPLACE(((#{id})), ',', '|'), '),')  -->
  </select>
  
   <select id="selectBySetTypeAndType" resultMap="BaseResultMap">
  	select id, enterprise_id, sys_type, set_type, code, description, type, have_file, status, 
    remark, creater_id, creater_code, creater_name, create_time, modifier_id, modifier_code, 
    modifier_name, update_time from saas_quality_set 
    where enterprise_id = #{enterpriseId} and set_type =5 and type = #{type}
  </select>
  
  <select id="selectGoodsForCheckType" resultType="int">
 	 SELECT COUNT(1) FROM `saas_goods` WHERE `enterprise_id`=#{enterpriseId} AND `check_type_id`=#{id}
  </select>
  
  <select id="selectAllByEnterpriseId" resultMap="BaseResultMapVO">
    SELECT
    id, sys_type, set_type, code, description, type, have_file, status
    FROM saas_quality_set qset
    WHERE 1=1
      AND qset.enterprise_id = #{enterpriseId}
    union all
    SELECT
    id, sys_type, set_type, code, description, type, have_file, status
    FROM saas_quality_set qset
    WHERE 1=1
    AND qset.enterprise_id = 0
    order by id desc
  </select>
  
</mapper>