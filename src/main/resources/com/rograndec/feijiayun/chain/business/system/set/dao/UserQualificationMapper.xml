<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.rograndec.feijiayun.chain.business.system.set.dao.UserQualificationMapper">
  <resultMap id="BaseResultMap" type="com.rograndec.feijiayun.chain.business.system.set.entity.UserQualification">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="enterprise_id" jdbcType="BIGINT" property="enterpriseId" />
    <result column="suitable_unit" jdbcType="INTEGER" property="suitableUnit" />
    <result column="position_ids" jdbcType="BIGINT" property="positionIds" />
    <result column="sys_type" jdbcType="INTEGER" property="sysType" />
    <result column="type_must" jdbcType="INTEGER" property="typeMust" />
    <result column="code" jdbcType="VARCHAR" property="code" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="control_type" jdbcType="INTEGER" property="controlType" />
    <result column="grade_must" jdbcType="INTEGER" property="gradeMust" />
    <result column="code_must" jdbcType="INTEGER" property="codeMust" />
    <result column="register_code_must" jdbcType="INTEGER" property="registerCodeMust" />
    <result column="region_must" jdbcType="INTEGER" property="regionMust" />
    <result column="category_must" jdbcType="INTEGER" property="categoryMust" />
    <result column="range_must" jdbcType="INTEGER" property="rangeMust" />
    <result column="file_must" jdbcType="INTEGER" property="fileMust" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
    <result column="creater_id" jdbcType="BIGINT" property="createrId" />
    <result column="creater_code" jdbcType="VARCHAR" property="createrCode" />
    <result column="creater_name" jdbcType="VARCHAR" property="createrName" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="modifier_id" jdbcType="BIGINT" property="modifierId" />
    <result column="modifier_code" jdbcType="VARCHAR" property="modifierCode" />
    <result column="modifier_name" jdbcType="VARCHAR" property="modifierName" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <sql id="Base_Column_List">
    id, enterprise_id, suitable_unit, position_ids, sys_type,type_must,code, name, control_type, grade_must,
    code_must, register_code_must, region_must, category_must, range_must, file_must, 
    status, remark, creater_id, creater_code, creater_name, create_time, modifier_id, 
    modifier_code, modifier_name, update_time
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from saas_user_qualification
    where id = #{id,jdbcType=BIGINT}
  </select>

  <select id="selectByDefCode" parameterType="java.lang.String" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from saas_user_qualification
    where code = #{code,jdbcType=VARCHAR} and sys_type = 1
  </select>

  <select id="selectByIds" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from saas_user_qualification
    where id IN
    <foreach item="item" index="index" collection="list"
             open="(" separator="," close=")">
      #{item}
    </foreach>
  </select>

  <select id="selectTypeMustByEnterpriseId"  parameterType="java.util.Map"  resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from saas_user_qualification
    where (enterprise_id = #{enterpriseId,jdbcType=BIGINT} or sys_type = 1 ) and status = 1
          And position_ids like concat('%,',#{pIds},',%')
  </select>

  <select id="selectTypeMustByEnterpriseIds"  parameterType="java.util.Map"  resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from saas_user_qualification
    where (enterprise_id = #{enterpriseId,jdbcType=BIGINT} or sys_type = 1 ) and status = 1
    <if test="null != pIds">
    And position_ids IN
    <foreach item="pId" index="index" collection="pIds"
             open="(" separator="," close=")">
      #{pId}
    </foreach>
    </if>
  </select>

  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from saas_user_qualification
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.rograndec.feijiayun.chain.business.system.set.entity.UserQualification" useGeneratedKeys="true" keyProperty="id">
    insert into saas_user_qualification (id, enterprise_id, suitable_unit, 
      position_ids, sys_type, type_must, code, name,
      control_type, grade_must, code_must, 
      register_code_must, region_must, category_must, 
      range_must, file_must, status, 
      remark, creater_id, creater_code, 
      creater_name, create_time, modifier_id, 
      modifier_code, modifier_name, update_time
      )
    values (#{id,jdbcType=BIGINT}, #{enterpriseId,jdbcType=BIGINT}, #{suitableUnit,jdbcType=INTEGER}, 
      #{positionIds,jdbcType=VARCHAR}, #{sysType,jdbcType=INTEGER}, #{typeMust,jdbcType=INTEGER}, 
      #{code,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR},
      #{controlType,jdbcType=INTEGER}, #{gradeMust,jdbcType=INTEGER}, #{codeMust,jdbcType=INTEGER}, 
      #{registerCodeMust,jdbcType=INTEGER}, #{regionMust,jdbcType=INTEGER}, #{categoryMust,jdbcType=INTEGER}, 
      #{rangeMust,jdbcType=INTEGER}, #{fileMust,jdbcType=INTEGER}, #{status,jdbcType=INTEGER}, 
      #{remark,jdbcType=VARCHAR}, #{createrId,jdbcType=BIGINT}, #{createrCode,jdbcType=VARCHAR}, 
      #{createrName,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{modifierId,jdbcType=BIGINT}, 
      #{modifierCode,jdbcType=VARCHAR}, #{modifierName,jdbcType=VARCHAR}, #{updateTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.rograndec.feijiayun.chain.business.system.set.entity.UserQualification" useGeneratedKeys="true" keyProperty="id">
    insert into saas_user_qualification
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="enterpriseId != null">
        enterprise_id,
      </if>
      <if test="suitableUnit != null">
        suitable_unit,
      </if>
      <if test="positionIds != null">
        position_ids,
      </if>
      <if test="sysType != null">
        sys_type,
      </if>
      <if test="typeMust != null">
        type_must,
      </if>
      <if test="code != null">
        code,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="controlType != null">
        control_type,
      </if>
      <if test="gradeMust != null">
        grade_must,
      </if>
      <if test="codeMust != null">
        code_must,
      </if>
      <if test="registerCodeMust != null">
        register_code_must,
      </if>
      <if test="regionMust != null">
        region_must,
      </if>
      <if test="categoryMust != null">
        category_must,
      </if>
      <if test="rangeMust != null">
        range_must,
      </if>
      <if test="fileMust != null">
        file_must,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="remark != null">
        remark,
      </if>
      <if test="createrId != null">
        creater_id,
      </if>
      <if test="createrCode != null">
        creater_code,
      </if>
      <if test="createrName != null">
        creater_name,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="modifierId != null">
        modifier_id,
      </if>
      <if test="modifierCode != null">
        modifier_code,
      </if>
      <if test="modifierName != null">
        modifier_name,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="enterpriseId != null">
        #{enterpriseId,jdbcType=BIGINT},
      </if>
      <if test="suitableUnit != null">
        #{suitableUnit,jdbcType=INTEGER},
      </if>
      <if test="positionIds != null">
        #{positionIds,jdbcType=VARCHAR},
      </if>
      <if test="sysType != null">
        #{sysType,jdbcType=INTEGER},
      </if>
      <if test="typeMust != null">
        #{typeMust,jdbcType=INTEGER},
      </if>
      <if test="code != null">
        #{code,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="controlType != null">
        #{controlType,jdbcType=INTEGER},
      </if>
      <if test="gradeMust != null">
        #{gradeMust,jdbcType=INTEGER},
      </if>
      <if test="codeMust != null">
        #{codeMust,jdbcType=INTEGER},
      </if>
      <if test="registerCodeMust != null">
        #{registerCodeMust,jdbcType=INTEGER},
      </if>
      <if test="regionMust != null">
        #{regionMust,jdbcType=INTEGER},
      </if>
      <if test="categoryMust != null">
        #{categoryMust,jdbcType=INTEGER},
      </if>
      <if test="rangeMust != null">
        #{rangeMust,jdbcType=INTEGER},
      </if>
      <if test="fileMust != null">
        #{fileMust,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="createrId != null">
        #{createrId,jdbcType=BIGINT},
      </if>
      <if test="createrCode != null">
        #{createrCode,jdbcType=VARCHAR},
      </if>
      <if test="createrName != null">
        #{createrName,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="modifierId != null">
        #{modifierId,jdbcType=BIGINT},
      </if>
      <if test="modifierCode != null">
        #{modifierCode,jdbcType=VARCHAR},
      </if>
      <if test="modifierName != null">
        #{modifierName,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.rograndec.feijiayun.chain.business.system.set.entity.UserQualification">
    update saas_user_qualification
    <set>
      <if test="enterpriseId != null">
        enterprise_id = #{enterpriseId,jdbcType=BIGINT},
      </if>
      <if test="suitableUnit != null">
        suitable_unit = #{suitableUnit,jdbcType=INTEGER},
      </if>
      <if test="positionIds != null">
        position_ids = #{positionIds,jdbcType=BIGINT},
      </if>
      <if test="sysType != null">
        sys_type = #{sysType,jdbcType=INTEGER},
      </if>
      <if test="typeMust != null">
        type_must = #{typeMust,jdbcType=INTEGER},
      </if>
      <if test="code != null">
        code = #{code,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="controlType != null">
        control_type = #{controlType,jdbcType=INTEGER},
      </if>
      <if test="gradeMust != null">
        grade_must = #{gradeMust,jdbcType=INTEGER},
      </if>
      <if test="codeMust != null">
        code_must = #{codeMust,jdbcType=INTEGER},
      </if>
      <if test="registerCodeMust != null">
        register_code_must = #{registerCodeMust,jdbcType=INTEGER},
      </if>
      <if test="regionMust != null">
        region_must = #{regionMust,jdbcType=INTEGER},
      </if>
      <if test="categoryMust != null">
        category_must = #{categoryMust,jdbcType=INTEGER},
      </if>
      <if test="rangeMust != null">
        range_must = #{rangeMust,jdbcType=INTEGER},
      </if>
      <if test="fileMust != null">
        file_must = #{fileMust,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="createrId != null">
        creater_id = #{createrId,jdbcType=BIGINT},
      </if>
      <if test="createrCode != null">
        creater_code = #{createrCode,jdbcType=VARCHAR},
      </if>
      <if test="createrName != null">
        creater_name = #{createrName,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="modifierId != null">
        modifier_id = #{modifierId,jdbcType=BIGINT},
      </if>
      <if test="modifierCode != null">
        modifier_code = #{modifierCode,jdbcType=VARCHAR},
      </if>
      <if test="modifierName != null">
        modifier_name = #{modifierName,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.rograndec.feijiayun.chain.business.system.set.entity.UserQualification">
    update saas_user_qualification
    set enterprise_id = #{enterpriseId,jdbcType=BIGINT},
      suitable_unit = #{suitableUnit,jdbcType=INTEGER},
      position_ids = #{positionIds,jdbcType=BIGINT},
      sys_type = #{sysType,jdbcType=INTEGER},
      type_must = #{typeMust,jdbcType=INTEGER},
      code = #{code,jdbcType=VARCHAR},
      name = #{name,jdbcType=VARCHAR},
      control_type = #{controlType,jdbcType=INTEGER},
      grade_must = #{gradeMust,jdbcType=INTEGER},
      code_must = #{codeMust,jdbcType=INTEGER},
      register_code_must = #{registerCodeMust,jdbcType=INTEGER},
      region_must = #{regionMust,jdbcType=INTEGER},
      category_must = #{categoryMust,jdbcType=INTEGER},
      range_must = #{rangeMust,jdbcType=INTEGER},
      file_must = #{fileMust,jdbcType=INTEGER},
      status = #{status,jdbcType=INTEGER},
      remark = #{remark,jdbcType=VARCHAR},
      creater_id = #{createrId,jdbcType=BIGINT},
      creater_code = #{createrCode,jdbcType=VARCHAR},
      creater_name = #{createrName,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      modifier_id = #{modifierId,jdbcType=BIGINT},
      modifier_code = #{modifierCode,jdbcType=VARCHAR},
      modifier_name = #{modifierName,jdbcType=VARCHAR},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <select id="getUserQualificationById" resultMap="BaseResultMap">
  	select
  	<include refid="Base_Column_List" />
    from saas_user_qualification
    where enterprise_id = #{parentId}
    union
    select
    <include refid="Base_Column_List" />
    from saas_user_qualification
    where sys_type = '1'
    order by id desc
  </select>
  <select id="getUserQualificationById4Enable" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from saas_user_qualification suq
    where
    (suq.enterprise_id = #{parentId} or suq.enterprise_id = 0) and suq.status = 1
    <if test="userId != null">
      AND NOT EXISTS(SELECT suqc.qualification_id FROM  saas_user_qualification_config suqc WHERE suqc.qualification_id = suq.id AND suqc.user_id = #{userId})
    </if>
    order by suq.suitable_unit,suq.position_ids,suq.code
  </select>

  <select id="getUserMustQualificationById4Enable" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from saas_user_qualification suq
    where enterprise_id = #{parentId} and status = 1 and type_must = 1
    order by suitable_unit,position_ids,code
  </select>

  <select id="getUserMustQualification4Enable" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from saas_user_qualification
    where enterprise_id = #{enterpriseId} and status = 1 and type_must = 1
    order by suitable_unit,position_ids,code
  </select>

  <select id="getUserQualification4Enable" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from saas_user_qualification suq
    where (suq.enterprise_id = #{enterpriseId} or suq.enterprise_id = 0 ) and suq.status = 1
    <if test="userId != null">
      AND NOT EXISTS(SELECT suqc.qualification_id FROM  saas_user_qualification_config suqc WHERE suqc.qualification_id = suq.id AND suqc.user_id = #{userId})
    </if>
    order by suq.suitable_unit,suq.position_ids,suq.code
  </select>

  <select id="getUserQualification" resultMap="BaseResultMap">
  	select
  	<include refid="Base_Column_List" />
    from saas_user_qualification
    where enterprise_id = #{enterpriseId}
    union
    select
    <include refid="Base_Column_List" />
    from saas_user_qualification
    where sys_type = '1'
    order by id desc
  </select>
  <select id="hasUserCode"
          resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from saas_user_qualification
    where (enterprise_id = #{enterPriseId} or sys_type = '1')
    and code = #{code}
  </select>
  <select id="hasUserName"
          resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from saas_user_qualification
    where (enterprise_id = #{enterPriseId} or sys_type = '1')
    and name = #{name}
  </select>
  <insert id="addUserQualification">
  	insert into saas_user_qualification (enterprise_id, suitable_unit, 
      position_ids, code, name,
      control_type, grade_must, code_must, 
      register_code_must, region_must, category_must, 
      range_must, file_must, status, 
      remark, creater_id, creater_code, 
      creater_name, create_time, modifier_id, 
      modifier_code, modifier_name, update_time, sys_type, type_must
      )
    values (#{user.enterpriseId}, #{userQualification.suitableUnit,jdbcType=INTEGER}, 
      #{userQualification.positionIds,jdbcType=VARCHAR}, #{userQualification.code,jdbcType=VARCHAR}, #{userQualification.name,jdbcType=VARCHAR},
      #{userQualification.controlType,jdbcType=INTEGER}, #{userQualification.gradeMust,jdbcType=INTEGER}, #{userQualification.codeMust,jdbcType=INTEGER}, 
      #{userQualification.registerCodeMust,jdbcType=INTEGER}, #{userQualification.regionMust,jdbcType=INTEGER}, #{userQualification.categoryMust,jdbcType=INTEGER}, 
      #{userQualification.rangeMust,jdbcType=INTEGER}, #{userQualification.fileMust,jdbcType=INTEGER}, #{userQualification.status,jdbcType=INTEGER}, 
      #{userQualification.remark,jdbcType=VARCHAR}, #{user.userId}, #{user.userCode}, 
      #{user.userName}, NOW(), #{user.userId}, #{user.userCode}, 
      #{user.userName}, NOW(), '0', #{userQualification.typeMust}
      )
  </insert>
  <update id="updateUserQualification">
  	update saas_user_qualification
    set 
      suitable_unit = #{userQualification.suitableUnit,jdbcType=INTEGER},
      position_ids = #{userQualification.positionIds,jdbcType=VARCHAR},
      name = #{userQualification.name,jdbcType=VARCHAR},
      control_type = #{userQualification.controlType,jdbcType=INTEGER},
      grade_must = #{userQualification.gradeMust,jdbcType=INTEGER},
      code_must = #{userQualification.codeMust,jdbcType=INTEGER},
      register_code_must = #{userQualification.registerCodeMust,jdbcType=INTEGER},
      region_must = #{userQualification.regionMust,jdbcType=INTEGER},
      category_must = #{userQualification.categoryMust,jdbcType=INTEGER},
      range_must = #{userQualification.rangeMust,jdbcType=INTEGER},
      file_must = #{userQualification.fileMust,jdbcType=INTEGER},
      status = #{userQualification.status,jdbcType=INTEGER},
      remark = #{userQualification.remark,jdbcType=VARCHAR},
      modifier_id = #{user.userId},
      modifier_code = #{user.userCode},
      modifier_name = #{user.userName},
      update_time = NOW(),
      type_must = #{userQualification.typeMust,jdbcType=INTEGER}
    where id = #{userQualification.id,jdbcType=BIGINT}
  </update>
  <select id="queryDefUserQualificationList" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from saas_user_qualification
    where enterprise_id = 0 and sys_type = 1
  </select>

</mapper>